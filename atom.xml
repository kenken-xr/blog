<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MoMo</title>
  
  
  <link href="https://kenken-xr.github.io/blog/atom.xml" rel="self"/>
  
  <link href="https://kenken-xr.github.io/blog/"/>
  <updated>2023-09-14T02:14:41.656Z</updated>
  <id>https://kenken-xr.github.io/blog/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>20230913</title>
    <link href="https://kenken-xr.github.io/blog/2023/09/13/9-13/"/>
    <id>https://kenken-xr.github.io/blog/2023/09/13/9-13/</id>
    <published>2023-09-13T06:49:13.000Z</published>
    <updated>2023-09-14T02:14:41.656Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Bug"><a href="#Bug" class="headerlink" title="Bug"></a>Bug</h1><h2 id="MP4视频第二次下载导致APP崩溃"><a href="#MP4视频第二次下载导致APP崩溃" class="headerlink" title="MP4视频第二次下载导致APP崩溃"></a>MP4视频第二次下载导致APP崩溃</h2><p>原因是第一次保存时缓存文件被删除导致再次保存找不到文件</p><p>在最外层判断当前视频是否是MP4，如果是直接返回</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">suspend</span> <span class="function"><span class="keyword">fun</span> <span class="title">saveVideoToGallery</span><span class="params">(context: <span class="type">Context</span>, clip: <span class="type">Clip</span>)</span></span>: String {</span><br><span class="line">    <span class="keyword">if</span> (clip.type != Clip.CLIP_TYPE_ORIGINAL_DATA) {</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * <span class="doctag">FIXME:</span> 目前不支持编辑已经是MP4的文件, 暂时全部返回原视频</span></span><br><span class="line"><span class="comment">         *  收藏页 -&gt; 添加拍摄者水印</span></span><br><span class="line"><span class="comment">         *  非本人拍摄(app内分享) -&gt; 添加拍摄者水印</span></span><br><span class="line"><span class="comment">         *  已经有水印(识别视频) -&gt; 直接保存原视频</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line">        logger.w(TAG, <span class="string">"clip type is not original data"</span>)</span><br><span class="line">        <span class="keyword">val</span> nonOriMP4Path = clip.nonOriginalData?.<span class="keyword">get</span>(Clip.NonOriginalData.KEY_MP4_PATH)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">if</span> (nonOriMP4Path != <span class="literal">null</span> &amp;&amp; File(nonOriMP4Path).exists()) {</span><br><span class="line">            copyToMediaStore(context, File(nonOriMP4Path))</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="string">""</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">if</span> (Build.VERSION.SDK_INT &lt; Build.VERSION_CODES.Q) {</span><br><span class="line">        saveVideoBeforeQ(context, clip)</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        saveVideo(context, clip)</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>其中<code>copyToMediaStore(context, File(nonOriMP4Path))</code>是用于将视频拷贝到相册</p><h2 id="续9-11-收藏列表跳转到播放后返回定位到当前播放的位置"><a href="#续9-11-收藏列表跳转到播放后返回定位到当前播放的位置" class="headerlink" title="续9.11 收藏列表跳转到播放后返回定位到当前播放的位置"></a>续9.11 收藏列表跳转到播放后返回定位到当前播放的位置</h2><p>静态变量和静态方法的写法不优雅 改成<code>StartActivityForResult</code>的方式</p><p><code>VideoFlowViewModel</code>中传递<code>position</code>的值并在<code>SearchResultFlowActivity</code>中观察</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">setPlayerClipDatasource</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    player: <span class="type">IjkMediaPlayer</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    clip: <span class="type">Clip</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    listener: <span class="type">RawPacketVideoSource</span>.<span class="type">TimeListener</span>? = <span class="literal">null</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    timeOffset: <span class="type">Long</span> = <span class="number">0</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    position: <span class="type">Int</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span> {</span><br><span class="line">    logger.i(TAG, <span class="string">"setPlayerClipDatasource, <span class="variable">$clip</span>"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 更新当前播放的视频下标</span></span><br><span class="line">    uiActionUpdateClipPositionLiveData.postValue(</span><br><span class="line">        UiAction(</span><br><span class="line">            ACTION_UPDATE_CLIP_POSITION,</span><br><span class="line">            position</span><br><span class="line">        )</span><br><span class="line">    )</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>观察到的时候返回<code>result</code>的值</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">flowVM.uiActionUpdateClipPositionLiveData.observe(<span class="keyword">this</span>) { action -&gt;</span><br><span class="line">    <span class="keyword">if</span> (action == <span class="literal">null</span>) <span class="keyword">return</span><span class="symbol">@observe</span></span><br><span class="line">    <span class="keyword">when</span> (action.what) {</span><br><span class="line">        VideoFlowViewModel.ACTION_UPDATE_CLIP_POSITION -&gt; {</span><br><span class="line">            (action.param <span class="keyword">as</span>? <span class="built_in">Int</span>)?.let { position -&gt;</span><br><span class="line">                <span class="keyword">val</span> resultIntent = Intent().putExtra(</span><br><span class="line">                    BaseNavigation.Constants.EXTRA_CURRENT_CLIP_POSITION,</span><br><span class="line">                    position</span><br><span class="line">                )</span><br><span class="line">                setResult(Activity.RESULT_OK, resultIntent)</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> -&gt; {</span><br><span class="line">            logger.w(TAG, <span class="string">"uiActionRequiredEvent, unknown action <span class="variable">$action</span>"</span>)</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><code>FavoriteAdapter</code>中通过<code>onClick</code>传递当前点击的不包含的日期位置下标，用于跳转的时候从第几个视频开始播放</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">onClickFavoriteItem</span><span class="params">(positionInGroup: <span class="type">Int</span>)</span></span> {</span><br><span class="line">    <span class="keyword">val</span> clipsListJsonString = gson.toJson(favoriteList)</span><br><span class="line">    pv.store(EXTRA_FLOW_CLIPS_ARRAY_JSON, clipsListJsonString)</span><br><span class="line">    uiActionRequiredEvent.postValue(UiAction(ACTION_CLICK_FAVORITE_ITEM, positionInGroup))</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><code>FavoriteFragment</code>中接收值并执行相应操作</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 当前浏览过的视频的下标</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">var</span> currentClipPosition: <span class="built_in">Int</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">var</span> startFavoriteFlowLauncher =</span><br><span class="line">  registerForActivityResult(ActivityResultContracts.StartActivityForResult()) { result -&gt;</span><br><span class="line">      <span class="keyword">if</span> (result.resultCode == Activity.RESULT_OK) {</span><br><span class="line">          currentClipPosition = result.<span class="keyword">data</span>?.getIntExtra(</span><br><span class="line">              BaseNavigation.Constants.EXTRA_CURRENT_CLIP_POSITION,</span><br><span class="line">              <span class="number">0</span></span><br><span class="line">          ) ?: <span class="number">0</span></span><br><span class="line">      } <span class="keyword">else</span> {</span><br><span class="line">          logger.e(TAG, <span class="string">"startFavoriteFlowLauncher code=<span class="subst">${result.resultCode}</span>"</span>)</span><br><span class="line">      }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">viewModel.uiActionRequiredEvent.observe(viewLifecycleOwner) {</span><br><span class="line">    it ?: <span class="keyword">return</span><span class="symbol">@observe</span></span><br><span class="line">    <span class="keyword">when</span> (it.what) {</span><br><span class="line">        ACTION_CLICK_FAVORITE_ITEM -&gt; {</span><br><span class="line">            <span class="keyword">val</span> positionInGroup = it.param <span class="keyword">as</span>? <span class="built_in">Int</span></span><br><span class="line">            <span class="keyword">val</span> intent = Intent(context, SearchResultFlowActivity::<span class="keyword">class</span>.java)</span><br><span class="line">            intent.putExtra(</span><br><span class="line">                BaseNavigation.Constants.EXTRA_FLOW_INITIAL_POSITION_INT,</span><br><span class="line">                positionInGroup</span><br><span class="line">            )</span><br><span class="line">            intent.putExtra(BaseNavigation.Constants.EXTRA_FLOW_NEXT_CURSOR_STRING, <span class="string">""</span>)</span><br><span class="line"></span><br><span class="line">            startFavoriteFlowLauncher.launch(intent)</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>滚动方法</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * 滚动到最后播放的clip</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">scrollViewToLastClip</span><span class="params">(recyclerView: <span class="type">RecyclerView</span>, layoutManager: <span class="type">GridLayoutManager</span>)</span></span> {</span><br><span class="line">    <span class="comment">// 包括date的下标</span></span><br><span class="line">    <span class="keyword">val</span> positionWithDate =</span><br><span class="line">        viewModel.searchResultAdapter.countDateBeforeClip(currentClipPosition)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (positionWithDate &gt; <span class="number">0</span>) {</span><br><span class="line">        <span class="keyword">if</span> (recyclerView.layoutManager == <span class="literal">null</span> || recyclerView.adapter == <span class="literal">null</span>) {</span><br><span class="line">            logger.d(TAG, <span class="string">"RecyclerView layout or adapter is not set"</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 滚动位置是否在可见范围内</span></span><br><span class="line">        <span class="keyword">val</span> lastVisiblePosition = layoutManager.findLastVisibleItemPosition()</span><br><span class="line">        <span class="keyword">val</span> rowHeight = <span class="keyword">if</span> (positionWithDate &lt; lastVisiblePosition) {</span><br><span class="line">            layoutManager.findViewByPosition(positionWithDate)?.bottom</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            resources.displayMetrics.heightPixels</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 滚动到最后播放的clip可见位置,再整体移到顶部</span></span><br><span class="line"><span class="comment">         * 24 safe_area_top_guide</span></span><br><span class="line"><span class="comment">         * 48 导航栏</span></span><br><span class="line"><span class="comment">         * 16 recyclerView margin-top</span></span><br><span class="line"><span class="comment">         * 96 视频高度</span></span><br><span class="line"><span class="comment">         * 4 clip padding-top</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line">        recyclerView.scrollToPosition(positionWithDate)</span><br><span class="line">        <span class="keyword">val</span> scrollDistance = MeasureUtil.dp2px(context, <span class="number">24f</span> + <span class="number">48f</span> + <span class="number">16f</span> + <span class="number">96f</span> + <span class="number">4f</span>)</span><br><span class="line">        logger.d(TAG, <span class="string">"onResume height: <span class="variable">$rowHeight</span> padding <span class="variable">$scrollDistance</span>"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (rowHeight != <span class="literal">null</span>) {</span><br><span class="line">            binding.recyclerView.smoothScrollBy(<span class="number">0</span>, rowHeight - scrollDistance)</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>方法写在<code>onResume</code>里存在问题：在滚动后回到收藏页并往下翻视频列表，此时退出app到后台，再次切入应用会触发<code>onResume</code>导致再次滚动</p><p>把滚动方法写到接收到<code>result</code>的时候</p><p><code>FavoriteFragment</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 当前浏览过的视频的下标</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">var</span> startFavoriteFlowLauncher =</span><br><span class="line">  registerForActivityResult(ActivityResultContracts.StartActivityForResult()) { result -&gt;</span><br><span class="line">      <span class="keyword">if</span> (result.resultCode == Activity.RESULT_OK) {</span><br><span class="line">          <span class="keyword">val</span> currentClipPosition = result.<span class="keyword">data</span>?.getIntExtra(</span><br><span class="line">              BaseNavigation.Constants.EXTRA_CURRENT_CLIP_POSITION,</span><br><span class="line">              <span class="number">0</span></span><br><span class="line">          ) ?: <span class="number">0</span></span><br><span class="line">        <span class="comment">/***************写在这里**********************/</span></span><br><span class="line">          scrollViewToLastClip(binding.recyclerView, layoutManager, currentClipPosition)</span><br><span class="line">      } <span class="keyword">else</span> {</span><br><span class="line">          logger.e(TAG, <span class="string">"startFavoriteFlowLauncher code=<span class="subst">${result.resultCode}</span>"</span>)</span><br><span class="line">      }</span><br><span class="line">  }</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Bug&quot;&gt;&lt;a href=&quot;#Bug&quot; class=&quot;headerlink&quot; title=&quot;Bug&quot;&gt;&lt;/a&gt;Bug&lt;/h1&gt;&lt;h2 id=&quot;MP4视频第二次下载导致APP崩溃&quot;&gt;&lt;a href=&quot;#MP4视频第二次下载导致APP崩溃&quot; class=&quot;header</summary>
      
    
    
    
    <category term="有在认真上班" scheme="https://kenken-xr.github.io/blog/categories/%E6%9C%89%E5%9C%A8%E8%AE%A4%E7%9C%9F%E4%B8%8A%E7%8F%AD/"/>
    
    
    <category term="2023 9月记录" scheme="https://kenken-xr.github.io/blog/tags/2023-9%E6%9C%88%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>20230912</title>
    <link href="https://kenken-xr.github.io/blog/2023/09/12/9-12/"/>
    <id>https://kenken-xr.github.io/blog/2023/09/12/9-12/</id>
    <published>2023-09-12T01:39:57.000Z</published>
    <updated>2023-09-14T02:14:27.002Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Bug"><a href="#Bug" class="headerlink" title="Bug"></a>Bug</h1><h2 id="视频流显示拍摄者昵称-非id"><a href="#视频流显示拍摄者昵称-非id" class="headerlink" title="视频流显示拍摄者昵称 非id"></a>视频流显示拍摄者昵称 非id</h2><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">suspend</span> <span class="function"><span class="keyword">fun</span> <span class="title">getUserLikeName</span><span class="params">(pltUserName: <span class="type">String</span>)</span></span>: String? {</span><br><span class="line">    <span class="keyword">return</span> performOnIOWithDefault(<span class="literal">null</span>) {</span><br><span class="line">        sdk.getUserLikeNameByPlatformUserName(pltUserName).awaitSingleOrNull()</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="适配16-9手机大拿分享接收弹窗"><a href="#适配16-9手机大拿分享接收弹窗" class="headerlink" title="适配16:9手机大拿分享接收弹窗"></a>适配16:9手机大拿分享接收弹窗</h2><p>整体弄小点</p><h1 id="New"><a href="#New" class="headerlink" title="New"></a>New</h1><h2 id="收藏、搜索状态启动大拿分享"><a href="#收藏、搜索状态启动大拿分享" class="headerlink" title="收藏、搜索状态启动大拿分享"></a>收藏、搜索状态启动大拿分享</h2><p><code>ResultFlowFragment.kt</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onResume</span><span class="params">()</span></span> {</span><br><span class="line">    <span class="keyword">super</span>.onResume()</span><br><span class="line">    viewModel.beginNearbyScan()</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onPause</span><span class="params">()</span></span> {</span><br><span class="line">    <span class="keyword">super</span>.onPause()</span><br><span class="line">    viewModel.endNearbyScan()</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Bug&quot;&gt;&lt;a href=&quot;#Bug&quot; class=&quot;headerlink&quot; title=&quot;Bug&quot;&gt;&lt;/a&gt;Bug&lt;/h1&gt;&lt;h2 id=&quot;视频流显示拍摄者昵称-非id&quot;&gt;&lt;a href=&quot;#视频流显示拍摄者昵称-非id&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="有在认真上班" scheme="https://kenken-xr.github.io/blog/categories/%E6%9C%89%E5%9C%A8%E8%AE%A4%E7%9C%9F%E4%B8%8A%E7%8F%AD/"/>
    
    
    <category term="2023 9月记录" scheme="https://kenken-xr.github.io/blog/tags/2023-9%E6%9C%88%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>20230911</title>
    <link href="https://kenken-xr.github.io/blog/2023/09/11/9-11/"/>
    <id>https://kenken-xr.github.io/blog/2023/09/11/9-11/</id>
    <published>2023-09-11T02:24:20.000Z</published>
    <updated>2023-09-14T02:13:49.011Z</updated>
    
    <content type="html"><![CDATA[<h1 id="New"><a href="#New" class="headerlink" title="New"></a>New</h1><h2 id="收藏列表跳转到播放后返回定位到当前播放的位置"><a href="#收藏列表跳转到播放后返回定位到当前播放的位置" class="headerlink" title="收藏列表跳转到播放后返回定位到当前播放的位置"></a>收藏列表跳转到播放后返回定位到当前播放的位置</h2><h3 id="记录当前播放是第几个视频"><a href="#记录当前播放是第几个视频" class="headerlink" title="记录当前播放是第几个视频"></a>记录当前播放是第几个视频</h3><p><code>attachFirstVisibleViewHolder</code>中拿到当前播放的<code>position</code>，通过<code>attachPlayer</code>播放视频，在这里传入<code>position</code>参数到<code>VideoFlowViewModel</code>中</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> position = layoutManager.findFirstCompletelyVisibleItemPosition()</span><br><span class="line"><span class="keyword">if</span> (position == RecyclerView.NO_POSITION) <span class="keyword">return</span></span><br><span class="line">...</span><br><span class="line">delegate.attachPlayer(</span><br><span class="line">    surface,</span><br><span class="line">    clip,</span><br><span class="line">    positionResponder = viewHolder,</span><br><span class="line">    position</span><br><span class="line">)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">attachPlayer</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    surface: <span class="type">Surface</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    clip: <span class="type">Clip</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    positionResponder: <span class="type">ClipPositionResponder</span>?,</span></span></span><br><span class="line"><span class="params"><span class="function">    position: <span class="type">Int</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span> {</span><br><span class="line">    <span class="keyword">this</span><span class="symbol">@VideoFlowViewModel</span>.attachPlayer(</span><br><span class="line">        surface,</span><br><span class="line">        clip,</span><br><span class="line">        positionResponder = positionResponder,</span><br><span class="line">        position = position</span><br><span class="line">    )</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><code>attachPlayer</code>中<code>setPlayerClipDatasource</code>用来播放视频，在这个方法中更新<code>position</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 更新当前播放的视频下标</span></span><br><span class="line">setCurrentClipPosition(position)</span><br></pre></td></tr></tbody></table></figure><p><code>VideoFlowViewModel</code>中通过静态方法更新参数</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">var</span> currentClipPosition: <span class="built_in">Int</span> = -<span class="number">1</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">setCurrentClipPosition</span><span class="params">(position: <span class="type">Int</span>)</span></span> { currentClipPosition = position }</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getCurrentClipPosition</span><span class="params">()</span></span>: <span class="built_in">Int</span> { <span class="keyword">return</span> currentClipPosition }</span><br></pre></td></tr></tbody></table></figure><h3 id="拿到最新的视频下标"><a href="#拿到最新的视频下标" class="headerlink" title="拿到最新的视频下标"></a>拿到最新的视频下标</h3><p><code>FavoriteFragment</code></p><p><code>position</code>是视频的位置，收藏列表中还包括了日期，要通过<code>position</code>计算出包括日期的下标</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 当前浏览过的视频的下标</span></span><br><span class="line"><span class="keyword">val</span> position = VideoFlowViewModel.getCurrentClipPosition()</span><br><span class="line"><span class="comment">// 包括date的下标</span></span><br><span class="line"><span class="keyword">val</span> positionNew = viewModel.searchResultAdapter.countDateBeforeClip(position)</span><br></pre></td></tr></tbody></table></figure><p><code>FavoriteAdapter</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过单独clip的位置返回包括date的位置</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">countDateBeforeClip</span><span class="params">(clipPosition: <span class="type">Int</span>)</span></span>: <span class="built_in">Int</span> {</span><br><span class="line">    <span class="keyword">var</span> count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">var</span> clipCount = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (item <span class="keyword">in</span> itemList) {</span><br><span class="line">        <span class="keyword">if</span> (item <span class="keyword">is</span> String) count += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span> clipCount += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> (clipCount == clipPosition + <span class="number">1</span>) <span class="keyword">break</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> count + clipPosition</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="滚动到指定位置"><a href="#滚动到指定位置" class="headerlink" title="滚动到指定位置"></a>滚动到指定位置</h3><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (positionNew &gt; <span class="number">0</span>) {</span><br><span class="line">    <span class="keyword">if</span> (recyclerView.layoutManager == <span class="literal">null</span> || recyclerView.adapter == <span class="literal">null</span>) {</span><br><span class="line">        logger.d(TAG, <span class="string">"RecyclerView layout or adapter is not set"</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 滚动位置是否在可见范围内</span></span><br><span class="line">    <span class="keyword">val</span> lastVisiblePosition = layoutManager.findLastVisibleItemPosition()</span><br><span class="line">    <span class="keyword">val</span> rowHeight = <span class="keyword">if</span> (positionNew &lt; lastVisiblePosition) {</span><br><span class="line">        layoutManager.findViewByPosition(positionNew)?.bottom</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        resources.displayMetrics.heightPixels</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 滚动到最后播放的clip可见位置,再整体移到顶部</span></span><br><span class="line"><span class="comment">     * 24 safe_area_top_guide</span></span><br><span class="line"><span class="comment">     * 48 导航栏</span></span><br><span class="line"><span class="comment">     * 16 recyclerView margin-top</span></span><br><span class="line"><span class="comment">     * 96 视频高度</span></span><br><span class="line"><span class="comment">     * 4 clip padding-top</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    recyclerView.scrollToPosition(positionNew)</span><br><span class="line">    <span class="keyword">val</span> scrollDistance = MeasureUtil.dp2px(context, <span class="number">24f</span> + <span class="number">48f</span> + <span class="number">16f</span> + <span class="number">96f</span> + <span class="number">4f</span>)</span><br><span class="line">    logger.d(TAG, <span class="string">"onResume height: <span class="variable">$rowHeight</span> padding <span class="variable">$scrollDistance</span>"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (rowHeight != <span class="literal">null</span>) {</span><br><span class="line">        binding.recyclerView.smoothScrollBy(<span class="number">0</span>, rowHeight - scrollDistance)</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="Bug"><a href="#Bug" class="headerlink" title="Bug"></a>Bug</h3><p>由于所有的视频播放都共用一个adapter，存在首页或者搜索页向下刷视频的时候位置会不断更新，导致首次进入收藏页也会导致位置滚动，所以在第一次进入收藏的时候重置位置</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateView</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    inflater: <span class="type">LayoutInflater</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    container: <span class="type">ViewGroup</span>?,</span></span></span><br><span class="line"><span class="params"><span class="function">    savedInstanceState: <span class="type">Bundle</span>?</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>: View {</span><br><span class="line">    VideoFlowViewModel.setCurrentClipPosition(DEFAULT_POSITION)</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;New&quot;&gt;&lt;a href=&quot;#New&quot; class=&quot;headerlink&quot; title=&quot;New&quot;&gt;&lt;/a&gt;New&lt;/h1&gt;&lt;h2 id=&quot;收藏列表跳转到播放后返回定位到当前播放的位置&quot;&gt;&lt;a href=&quot;#收藏列表跳转到播放后返回定位到当前播放的位置&quot; cla</summary>
      
    
    
    
    <category term="有在认真上班" scheme="https://kenken-xr.github.io/blog/categories/%E6%9C%89%E5%9C%A8%E8%AE%A4%E7%9C%9F%E4%B8%8A%E7%8F%AD/"/>
    
    
    <category term="2023 9月记录" scheme="https://kenken-xr.github.io/blog/tags/2023-9%E6%9C%88%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>20230908</title>
    <link href="https://kenken-xr.github.io/blog/2023/09/08/9-08/"/>
    <id>https://kenken-xr.github.io/blog/2023/09/08/9-08/</id>
    <published>2023-09-08T02:24:02.000Z</published>
    <updated>2023-09-14T02:13:15.096Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Bug"><a href="#Bug" class="headerlink" title="Bug"></a>Bug</h1><h2 id="搜索出的视频不能播放"><a href="#搜索出的视频不能播放" class="headerlink" title="搜索出的视频不能播放"></a>搜索出的视频不能播放</h2><p>拉取过来的视频有远端的<code>clip</code>，显示黑屏也无法进行操作</p><p>在搜索结果页<code>SearchResultActivity</code>像首页一样过滤出本地的时候，同时在后台进行拉取远端视频</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">suspend</span> <span class="function"><span class="keyword">fun</span> <span class="title">doSearchBySearchGroupList</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    keyArray: <span class="type">List</span>&lt;<span class="type">SearchGroup</span>&gt;,</span></span></span><br><span class="line"><span class="params"><span class="function">    replaceAll: <span class="type">Boolean</span> = <span class="literal">true</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    beginCursor: <span class="type">String</span> = <span class="string">""</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span> {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> log = logger.withTag(TAG, <span class="string">"Search"</span>, <span class="string">"searchByLabelKeyArray"</span>)</span><br><span class="line">    log.i(<span class="string">"keyArray = <span class="variable">$keyArray</span>, replaceAll = <span class="variable">$replaceAll</span>, beginCursor = <span class="variable">$beginCursor</span>"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!replaceAll &amp;&amp; beginCursor.isEmpty()) {</span><br><span class="line">        logger.w(TAG, <span class="string">"ignore not replaceAll AND beginCursor empty to prevent repeat item"</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    uiActionRequiredEvent.postValue(UiAction(UI_ACTION_BEGIN_REFRESH))</span><br><span class="line">    sideLoadLabelKeys(keyArray) <span class="comment">// 缓存搜索关键字</span></span><br><span class="line">    log.d(<span class="string">"begin refresh"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> list = performOnIOWithDefault(emptyList()) {</span><br><span class="line"></span><br><span class="line">        <span class="keyword">val</span> resultClipsList = ArrayList&lt;Clip&gt;()</span><br><span class="line">        <span class="keyword">var</span> currentCursor = beginCursor</span><br><span class="line"></span><br><span class="line">        <span class="keyword">do</span> {</span><br><span class="line">            log.d(<span class="string">"getClipsListByLabel, c = <span class="variable">$currentCursor</span>, size = <span class="subst">${resultClipsList.size}</span>"</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">val</span> allKeys = ArrayList&lt;String&gt;()</span><br><span class="line">            keyArray.forEach {</span><br><span class="line">                it.keys.forEach { k -&gt;</span><br><span class="line">                    allKeys.add(k)</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            <span class="keyword">val</span> resp = sdk.getClipsListByLabel(currentCursor, allKeys).await()</span><br><span class="line"></span><br><span class="line">            resp.nextCursor.run {</span><br><span class="line">                log.d(<span class="string">"getClipsListByLabel, nextCursor = <span class="variable">$this</span>"</span>)</span><br><span class="line">                currentCursor = <span class="keyword">this</span></span><br><span class="line">                nextCursor = <span class="keyword">this</span></span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 同框筛选</span></span><br><span class="line">            <span class="keyword">val</span> filteredResultClipList = resp.list?.filter { clip -&gt;</span><br><span class="line">                clip.containsSearchGroups(keyArray)</span><br><span class="line">            }</span><br><span class="line">            filteredResultClipList?.let { resultClipsList.addAll(it) }</span><br><span class="line"></span><br><span class="line">        } <span class="keyword">while</span> (resultClipsList.size &lt; <span class="number">30</span> <span class="comment">/* 拍脑袋想的，填满屏幕 */</span> &amp;&amp; currentCursor.isNotEmpty())</span><br><span class="line"></span><br><span class="line">        resultClipsList</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">  <span class="comment">//------------------------------------------过滤-----------------------------------------------//</span></span><br><span class="line">    <span class="comment">// 过滤出本地视频</span></span><br><span class="line">    <span class="keyword">val</span> localList = list.filter { it.playMode == Clip.CLIP_PLAY_MODE_LOCAL }.toMutableList()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (replaceAll &amp;&amp; localList.isEmpty()) {</span><br><span class="line">        <span class="comment">// fixme: 目前是因为replaceAll什么都刷不出来就返回，不是replaceAll的话列表已经有数据了，就不返回</span></span><br><span class="line">        uiActionRequiredEvent.postValue(UiAction(UI_ACTION_BACK))</span><br><span class="line">        log.i(<span class="string">"no result, back"</span>)</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (replaceAll) {</span><br><span class="line">        searchResultAdapter.replaceAll(list)</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        searchResultAdapter.addAll(localList)</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    withContext(Dispatchers.Main) {</span><br><span class="line">        uiActionRequiredEvent.postValue(UiAction(UI_ACTION_END_REFRESH, replaceAll))</span><br><span class="line">        log.d(<span class="string">"end refresh"</span>)</span><br><span class="line">    }</span><br><span class="line">  <span class="comment">//------------------------------------------过滤-----------------------------------------------//</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>同时拉取远端视频</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 过滤远端视频资源，同时对远端视频发起拉取</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@SuppressLint(<span class="meta-string">"CheckResult"</span>)</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">filterPlayList</span><span class="params">(list: <span class="type">List</span>&lt;<span class="type">Clip</span>&gt;)</span></span>: List&lt;Clip&gt; {</span><br><span class="line">  <span class="keyword">val</span> localList = list.filter { it.playMode == Clip.CLIP_PLAY_MODE_LOCAL }.toMutableList()</span><br><span class="line">  <span class="keyword">val</span> remoteList =</span><br><span class="line">      list.filter { it.playMode == Clip.CLIP_PLAY_MODE_REMOTE_DEVICE }.toMutableList()</span><br><span class="line"></span><br><span class="line">  logger.d(TAG, <span class="string">"localList size=<span class="subst">${localList.size}</span>, remoteList size=<span class="subst">${remoteList.size}</span>"</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 远端拉取</span></span><br><span class="line">  getRemoteList(remoteList)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> localList</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 远端拉取视频</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">getRemoteList</span><span class="params">(remoteList: <span class="type">List</span>&lt;<span class="type">Clip</span>&gt;)</span></span> {</span><br><span class="line">  <span class="keyword">if</span> (remoteList.isEmpty()) {</span><br><span class="line">      logger.d(TAG, <span class="string">"RemoteList is empty."</span>)</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">if</span> (!NetworkUtil.isUsingNotMeteredNetwork(getApplication())) {</span><br><span class="line">      logger.d(TAG, <span class="string">"Not currently connected to Wi-Fi."</span>)</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">  }</span><br><span class="line">  <span class="comment">// 远端拉取</span></span><br><span class="line">  <span class="keyword">val</span> avDataPacketList = ArrayList&lt;Observable&lt;AvDataPacket&gt;&gt;()</span><br><span class="line">  remoteList.forEach {</span><br><span class="line">      <span class="keyword">val</span> <span class="keyword">data</span> = it.originalDataList?.<span class="keyword">get</span>(<span class="number">0</span>)</span><br><span class="line">      <span class="keyword">data</span>?.apply {</span><br><span class="line">          avDataPacketList.add(</span><br><span class="line">              sdk.getDeviceOriginalData(</span><br><span class="line">                  deviceID,</span><br><span class="line">                  startTimeMillis,</span><br><span class="line">                  endTimeMillis,</span><br><span class="line">                  <span class="number">30</span></span><br><span class="line">              )</span><br><span class="line">          )</span><br><span class="line">      }</span><br><span class="line">  }</span><br><span class="line">  logger.d(TAG, <span class="string">"AvDataStreamObservable List size=<span class="subst">${avDataPacketList.size}</span>"</span>)</span><br><span class="line">  <span class="comment">// 通过concat将所有的观察对象串成一条，依次订阅，失败则拉取下一个</span></span><br><span class="line">  Observable.concat(avDataPacketList).onErrorComplete().doOnComplete {</span><br><span class="line">      logger.i(TAG, <span class="string">"fetch remote data complete, but there may be some errors and omissions"</span>)</span><br><span class="line">  }.doOnError {</span><br><span class="line">      logger.e(TAG, <span class="string">"error = <span class="variable">$it</span>"</span>)</span><br><span class="line">  }.subscribe()</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="New"><a href="#New" class="headerlink" title="New"></a>New</h1><h2 id="收藏和转发给好友页面限制竖屏"><a href="#收藏和转发给好友页面限制竖屏" class="headerlink" title="收藏和转发给好友页面限制竖屏"></a>收藏和转发给好友页面限制竖屏</h2><p>9c36ed7672851dfda78b85ee549ff24ab9681b57</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:name</span>=<span class="string">".ui.user.FavoriteActivity"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:exported</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:screenOrientation</span>=<span class="string">"portrait"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:name</span>=<span class="string">".ui.share.ListShareToContactActivity"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:exported</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:screenOrientation</span>=<span class="string">"portrait"</span> /&gt;</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Bug&quot;&gt;&lt;a href=&quot;#Bug&quot; class=&quot;headerlink&quot; title=&quot;Bug&quot;&gt;&lt;/a&gt;Bug&lt;/h1&gt;&lt;h2 id=&quot;搜索出的视频不能播放&quot;&gt;&lt;a href=&quot;#搜索出的视频不能播放&quot; class=&quot;headerlink&quot; title=&quot;搜</summary>
      
    
    
    
    <category term="有在认真上班" scheme="https://kenken-xr.github.io/blog/categories/%E6%9C%89%E5%9C%A8%E8%AE%A4%E7%9C%9F%E4%B8%8A%E7%8F%AD/"/>
    
    
    <category term="2023 9月记录" scheme="https://kenken-xr.github.io/blog/tags/2023-9%E6%9C%88%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>20230907</title>
    <link href="https://kenken-xr.github.io/blog/2023/09/07/9-07/"/>
    <id>https://kenken-xr.github.io/blog/2023/09/07/9-07/</id>
    <published>2023-09-07T01:32:43.000Z</published>
    <updated>2023-09-14T02:12:40.739Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Bug"><a href="#Bug" class="headerlink" title="Bug"></a>Bug</h1><h2 id="√-release包出现反序列化失败崩溃"><a href="#√-release包出现反序列化失败崩溃" class="headerlink" title="√ release包出现反序列化失败崩溃"></a>√ release包出现反序列化失败崩溃</h2><h3 id="崩溃日志"><a href="#崩溃日志" class="headerlink" title="崩溃日志"></a>崩溃日志</h3><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">java.lang.RuntimeException: Parcelable encountered IOException writing serializable <span class="keyword">object</span> (name = d7.b)</span><br><span class="line">at android.os.Parcel.writeSerializable(Parcel.java:<span class="number">1843</span>)</span><br><span class="line">at android.os.Parcel.writeValue(Parcel.java:<span class="number">1790</span>)</span><br><span class="line">at android.os.Parcel.writeArrayMapInternal(Parcel.java:<span class="number">932</span>)</span><br><span class="line">at android.os.BaseBundle.writeToParcelInner(BaseBundle.java:<span class="number">1588</span>)</span><br><span class="line">at android.os.Bundle.writeToParcel(Bundle.java:<span class="number">1253</span>)</span><br><span class="line">at android.os.Parcel.writeBundle(Parcel.java:<span class="number">1001</span>)</span><br><span class="line">at android.content.Intent.writeToParcel(Intent.java:<span class="number">10858</span>)</span><br><span class="line">at android.app.IActivityTaskManager$Stub$Proxy.startActivity(IActivityTaskManager.java:<span class="number">3880</span>)</span><br><span class="line">at android.app.Instrumentation.execStartActivity(Instrumentation.java:<span class="number">1738</span>)</span><br><span class="line">at android.app.Activity.startActivityForResult(Activity.java:<span class="number">5412</span>)</span><br><span class="line">at androidx.activity.ComponentActivity.startActivityForResult(ComponentActivity.java:<span class="number">2</span>)</span><br><span class="line">at android.app.Activity.startActivityForResult(Activity.java:<span class="number">5337</span>)</span><br><span class="line">at androidx.activity.ComponentActivity.startActivityForResult(ComponentActivity.java:<span class="number">1</span>)</span><br><span class="line">at android.app.Activity.startActivity(Activity.java:<span class="number">5819</span>)</span><br><span class="line">at android.app.Activity.startActivity(Activity.java:<span class="number">5787</span>)</span><br><span class="line">at c4.y.a(BaseNavigation.kt:<span class="number">8</span>)</span><br><span class="line">at c4.b$a.l(BaseActivity.kt:<span class="number">3</span>)</span><br><span class="line">at c4.b.O(Unknown Source:<span class="number">2</span>)</span><br><span class="line">at c4.w$b.l(BaseFragment.kt:<span class="number">2</span>)</span><br><span class="line">at c4.a.d(R8$$SyntheticClass:<span class="number">5</span>)</span><br><span class="line">at d4.a.d(R8$$SyntheticClass:<span class="number">8</span>)</span><br><span class="line">at androidx.lifecycle.LiveData.b(LiveData.java:<span class="number">6</span>)</span><br><span class="line">at androidx.lifecycle.LiveData.c(LiveData.java:<span class="number">8</span>)</span><br><span class="line">at androidx.lifecycle.x.l(MutableLiveData.java:<span class="number">4</span>)</span><br><span class="line">at d4.b.l(SingleLiveEvent.kt:<span class="number">2</span>)</span><br><span class="line">at androidx.lifecycle.LiveData$a.run(LiveData.java:<span class="number">5</span>)</span><br><span class="line">at android.os.Handler.handleCallback(Handler.java:<span class="number">900</span>)</span><br><span class="line">at android.os.Handler.dispatchMessage(Handler.java:<span class="number">103</span>)</span><br><span class="line">at android.os.Looper.loop(Looper.java:<span class="number">219</span>)</span><br><span class="line">at android.app.ActivityThread.main(ActivityThread.java:<span class="number">8673</span>)</span><br><span class="line">at java.lang.reflect.Method.invoke(Native Method)</span><br><span class="line">at com.android.<span class="keyword">internal</span>.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:<span class="number">513</span>)</span><br><span class="line">at com.android.<span class="keyword">internal</span>.os.ZygoteInit.main(ZygoteInit.java:<span class="number">1109</span>)</span><br><span class="line">Caused <span class="keyword">by</span>: java.io.NotSerializableException: com.google.gson.<span class="keyword">internal</span>.s$a</span><br><span class="line">at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:<span class="number">1240</span>)</span><br><span class="line">at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:<span class="number">1604</span>)</span><br><span class="line">at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:<span class="number">1565</span>)</span><br><span class="line">at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:<span class="number">1488</span>)</span><br><span class="line">at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:<span class="number">1234</span>)</span><br><span class="line">at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:<span class="number">1604</span>)</span><br><span class="line">at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:<span class="number">1565</span>)</span><br><span class="line">at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:<span class="number">1488</span>)</span><br><span class="line">at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:<span class="number">1234</span>)</span><br><span class="line">at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:<span class="number">354</span>)</span><br><span class="line">at android.os.Parcel.writeSerializable(Parcel.java:<span class="number">1838</span>)</span><br><span class="line">... <span class="number">32</span> more</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>根据<code>mapping.txt</code>文件解出错误类是<code>Clip</code></p><p>出现在从收藏页面分享给app内好友，从首页分享不会出错，问题在于release包的代码混淆导致了解析出错，暂不清楚具体原因</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.danale.edge.usersdk.type.clip</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.danale.edge.foundation.privacy.Fuzzy</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.usersdk.type.LabelBean</span><br><span class="line"><span class="keyword">import</span> com.google.gson.annotations.SerializedName</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * UserSDK生成的Clip，用于表示一段多媒体资源</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> timeMillisGenerated 该[Clip]被生成的时间</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> type 该[Clip]的类型，有两种类型，分别是"本机原始数据（本机生成的）Clip"（type = 1）和"非本机原始数据（非本机生成的）Clip"（type = 2）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> clip_id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">Clip</span></span>(</span><br><span class="line">    <span class="meta">@SerializedName(<span class="meta-string">"timestamp_ms"</span>)</span> <span class="keyword">val</span> timeMillisGenerated: <span class="built_in">Long</span>,</span><br><span class="line">    <span class="meta">@SerializedName(<span class="meta-string">"play_mode"</span>)</span> <span class="keyword">val</span> playMode: <span class="built_in">Int</span>,</span><br><span class="line">    <span class="meta">@SerializedName(<span class="meta-string">"type"</span>)</span> <span class="keyword">val</span> type: <span class="built_in">Int</span>,</span><br><span class="line">    <span class="meta">@SerializedName(<span class="meta-string">"clip_id"</span>)</span> <span class="keyword">var</span> clipID: String,</span><br><span class="line">    <span class="meta">@SerializedName(<span class="meta-string">"ori_data"</span>)</span> <span class="keyword">var</span> originalDataList: List&lt;OriginalData&gt;? = <span class="literal">null</span>,</span><br><span class="line">    <span class="meta">@SerializedName(<span class="meta-string">"non_ori_data_paths"</span>)</span> <span class="keyword">var</span> nonOriginalData: Map&lt;String, String&gt;? = <span class="literal">null</span>,</span><br><span class="line">    <span class="meta">@SerializedName(<span class="meta-string">"custom_data"</span>)</span> <span class="keyword">var</span> custom_data: String? = <span class="literal">null</span>,</span><br><span class="line">    <span class="meta">@SerializedName(<span class="meta-string">"label_item"</span>)</span> <span class="keyword">var</span> labelInfoList: List&lt;LabelBean&gt;? = <span class="literal">null</span>,</span><br><span class="line">    <span class="meta">@SerializedName(<span class="meta-string">"favorite"</span>)</span> <span class="keyword">var</span> favorite: <span class="built_in">Int</span></span><br><span class="line">) : java.io.Serializable, Comparable&lt;Any?&gt; {</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span> {</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">val</span> CLIP_TYPE_ORIGINAL_DATA = <span class="number">1</span>       <span class="comment">// 原始数据Clip</span></span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">val</span> CLIP_TYPE_NON_ORIGINAL_DATA = <span class="number">2</span>   <span class="comment">// 非原始数据Clip</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">val</span> CLIP_PLAY_MODE_LOCAL = <span class="number">0</span>          <span class="comment">// 本地播放</span></span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">val</span> CLIP_PLAY_MODE_REMOTE_DEVICE = <span class="number">1</span>  <span class="comment">// 设备端播放，需要拉取</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">getStartTimeMillis</span><span class="params">(clip: <span class="type">Clip</span>)</span></span> = clip.originalDataList?.<span class="keyword">get</span>(<span class="number">0</span>)?.startTimeMillis ?: <span class="number">0</span></span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">getEndTimeMillis</span><span class="params">(clip: <span class="type">Clip</span>)</span></span> = clip.originalDataList?.<span class="keyword">get</span>(<span class="number">0</span>)?.endTimeMillis ?: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">getOriDataListString</span><span class="params">(clip: <span class="type">Clip</span>)</span></span>: String? {</span><br><span class="line">            <span class="keyword">return</span> clip.originalDataList?.joinToString(separator = <span class="string">"-"</span>) {</span><br><span class="line">                <span class="string">"<span class="subst">${it.deviceID}</span>-<span class="subst">${it.startTimeMillis}</span>-<span class="subst">${it.endTimeMillis}</span>"</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> isFromSelf: <span class="built_in">Boolean</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">equals</span><span class="params">(other: <span class="type">Any</span>?)</span></span>: <span class="built_in">Boolean</span> {</span><br><span class="line">        <span class="keyword">if</span> (other !<span class="keyword">is</span> Clip) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        <span class="keyword">if</span> (timeMillisGenerated != other.timeMillisGenerated) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        <span class="keyword">if</span> (type != other.type) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        <span class="keyword">if</span> (clipID != other.clipID) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        <span class="keyword">if</span> (originalDataList != other.originalDataList) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        <span class="keyword">if</span> (nonOriginalData != other.nonOriginalData) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        <span class="keyword">if</span> (custom_data != other.custom_data) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        <span class="keyword">return</span> labelInfoList == other.labelInfoList</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">toString</span><span class="params">()</span></span>: String {</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"timeMillisGenerated=<span class="variable">$timeMillisGenerated</span>),"</span> +</span><br><span class="line">                <span class="string">"type=<span class="variable">$type</span>),"</span> +</span><br><span class="line">                <span class="string">"clipID=<span class="subst">${Fuzzy.interval(clipID)}</span>, "</span> +</span><br><span class="line">                <span class="string">"originalDataList=<span class="variable">$originalDataList</span>, "</span> +</span><br><span class="line">                <span class="string">"nonOriginalData=<span class="variable">$nonOriginalData</span>, "</span> +</span><br><span class="line">                <span class="string">"custom_data=<span class="variable">$custom_data</span>, "</span> +</span><br><span class="line">                <span class="string">"labelInfoList=<span class="variable">$labelInfoList</span>, "</span> +</span><br><span class="line">                <span class="string">"favorite=<span class="variable">$favorite</span>"</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">hashCode</span><span class="params">()</span></span>: <span class="built_in">Int</span> {</span><br><span class="line">        <span class="keyword">var</span> result = timeMillisGenerated?.hashCode() ?: <span class="number">0</span></span><br><span class="line">        result = <span class="number">31</span> * result + (type?.hashCode() ?: <span class="number">0</span>)</span><br><span class="line">        result = <span class="number">31</span> * result + (clipID?.hashCode() ?: <span class="number">0</span>)</span><br><span class="line">        result = <span class="number">31</span> * result + (originalDataList?.hashCode() ?: <span class="number">0</span>)</span><br><span class="line">        result = <span class="number">31</span> * result + (nonOriginalData?.hashCode() ?: <span class="number">0</span>)</span><br><span class="line">        result = <span class="number">31</span> * result + (custom_data?.hashCode() ?: <span class="number">0</span>)</span><br><span class="line">        result = <span class="number">31</span> * result + labelInfoList.hashCode()</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">compareTo</span><span class="params">(other: <span class="type">Any</span>?)</span></span>: <span class="built_in">Int</span> {</span><br><span class="line">        <span class="keyword">if</span> (other !<span class="keyword">is</span> Clip) <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> (clipID ?: <span class="string">""</span>).compareTo(other.clipID ?: <span class="string">""</span>)</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">data</span> <span class="class"><span class="keyword">class</span> <span class="title">OriginalData</span></span>(</span><br><span class="line">        <span class="meta">@SerializedName(<span class="meta-string">"device_id"</span>)</span> <span class="keyword">var</span> deviceID: String,</span><br><span class="line">        <span class="meta">@SerializedName(<span class="meta-string">"start_time_ms"</span>)</span> <span class="keyword">var</span> startTimeMillis: <span class="built_in">Long</span>,</span><br><span class="line">        <span class="meta">@SerializedName(<span class="meta-string">"end_time_ms"</span>)</span> <span class="keyword">var</span> endTimeMillis: <span class="built_in">Long</span>,</span><br><span class="line">    ) : java.io.Serializable</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">NonOriginalData</span> </span>{</span><br><span class="line">        <span class="keyword">companion</span> <span class="keyword">object</span> {</span><br><span class="line">            <span class="keyword">const</span> <span class="keyword">val</span> KEY_MP4_PATH = <span class="string">"mp4_path"</span></span><br><span class="line">            <span class="keyword">const</span> <span class="keyword">val</span> KEY_FIRST_FRAME_IMAGE_PATH = <span class="string">"first_frame_image_path"</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Clip.<span class="title">setIsFromSelf</span><span class="params">(flag: <span class="type">Boolean</span>)</span></span> {</span><br><span class="line">    isFromSelf = flag</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Clip.<span class="title">getIsFromSelf</span><span class="params">()</span></span>: <span class="built_in">Boolean</span> {</span><br><span class="line">    <span class="keyword">return</span> isFromSelf</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="record"><a href="#record" class="headerlink" title="record"></a>record</h3><p>通过<code>GSON</code>进行序列化</p><p>2023.9.7  </p><ul><li><p><code>69b6c8a70389bc0e6b1c013e6a5bd7d6667d9111</code> </p></li><li><p><code>15db304d83582b514a82dde17fc6665d4543ab27</code></p></li></ul><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> clipString = gson.toJson(clip)</span><br><span class="line">pv.store(EXTRA_SEND_TO_CONTACT_CLIP, clipString)</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> clipString = viewModel.pvStoreRepository.read(EXTRA_SEND_TO_CONTACT_CLIP) ?: <span class="string">""</span></span><br><span class="line"><span class="keyword">val</span> clip = viewModel.gson.fromJson(clipString, Clip::<span class="keyword">class</span>.java)</span><br></pre></td></tr></tbody></table></figure><h2 id="接收IOS大拿分享的视频出现内部错误"><a href="#接收IOS大拿分享的视频出现内部错误" class="headerlink" title="接收IOS大拿分享的视频出现内部错误"></a>接收IOS大拿分享的视频出现内部错误</h2><p>偶现</p><h3 id="错误日志"><a href="#错误日志" class="headerlink" title="错误日志"></a>错误日志</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2023</span>-09-<span class="number">05</span> <span class="number">18</span>:<span class="number">53</span>:<span class="number">41.230</span> D/VideoFlowActivity: [main-<span class="number">1</span>] handleShareEvent: accept=[<span class="keyword">true</span>], eventId=[1276c0f077ef4756ad7a4073ab259134]</span><br><span class="line"><span class="number">2023</span>-09-<span class="number">05</span> <span class="number">18</span>:<span class="number">53</span>:<span class="number">41.230</span> I/UserSdkNative: [DefaultDispatcher-worker-<span class="number">1</span>-<span class="number">7942</span>] nativeShareHandleEvent, ref=<span class="number">0x2af6</span></span><br><span class="line"><span class="number">2023</span>-09-<span class="number">05</span> <span class="number">18</span>:<span class="number">53</span>:<span class="number">41.230</span> I/UserSdkNative: [Thread-<span class="number">9285</span>-<span class="number">18158</span>] [<span class="keyword">module</span>/contact] HandleClipShareApply(1276c0f077ef4756ad7a4073ab259134, <span class="number">1</span>)</span><br><span class="line"><span class="number">2023</span>-09-<span class="number">05</span> <span class="number">18</span>:<span class="number">53</span>:<span class="number">41.233</span> E/UserSdkNative: [Thread-<span class="number">9285</span>-<span class="number">18158</span>] [<span class="keyword">module</span>/contact] HandleClipShareApply(1276c0f077ef4756ad7a4073ab259134, <span class="number">1</span>) failed, hmi.HandleClipShareApply failed, syncClipNonOriData failed, zip.OpenReader(/storage/emulated/<span class="number">0</span>/Android/data/com.danale.edge/files/user_local/volume/id_6ul5lak8wzfe/temp/hmi/clips/zip/601964a6e3d84514a554263d37f01abc) failed, zip: not a valid zip file</span><br><span class="line"><span class="number">2023</span>-09-<span class="number">05</span> <span class="number">18</span>:<span class="number">53</span>:<span class="number">41.233</span> D/UserSdkNative: [Thread-<span class="number">9285</span>-<span class="number">18158</span>] app_dip_fe_usr_sdk_general_json_callback, ctx <span class="number">0x2af6</span></span><br><span class="line"><span class="number">2023</span>-09-<span class="number">05</span> <span class="number">18</span>:<span class="number">53</span>:<span class="number">41.234</span> W/VideoFlowActivity: [DefaultDispatcher-worker-<span class="number">1</span>-<span class="number">7942</span>] handleShareEvent error, c7.b: Api request failed with code:-<span class="number">2</span>; biz:<span class="number">0</span>(hmi.HandleClipShareApply failed, syncClipNonOriData failed, zip.OpenReader(/storage/emulated/<span class="number">0</span>/Android/data/com.danale.edge/files/user_local/volume/id_6ul5lak8wzfe/temp/hmi/clips/zip/601964a6e3d84514a554263d37f01abc) failed, zip: not a valid zip file)</span><br><span class="line"><span class="number">2023</span>-09-<span class="number">05</span> <span class="number">18</span>:<span class="number">53</span>:<span class="number">41.234</span> E/VideoFlowActivity: [DefaultDispatcher-worker-<span class="number">1</span>-<span class="number">7942</span>] toastError exception</span><br><span class="line">c7.b: Api request failed with code:-<span class="number">2</span>; biz:<span class="number">0</span>(hmi.HandleClipShareApply failed, syncClipNonOriData failed, zip.OpenReader(/storage/emulated/<span class="number">0</span>/Android/data/com.danale.edge/files/user_local/volume/id_6ul5lak8wzfe/temp/hmi/clips/zip/601964a6e3d84514a554263d37f01abc) failed, zip: not a valid zip file)</span><br><span class="line">at com.danale.edge.usersdk.jni.BaseJsonOperation$CallbackContext.nativeResponseCallback(BaseJsonOperation.kt:<span class="number">10</span>)</span><br></pre></td></tr></tbody></table></figure><p>主要错误：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Api request failed with code:-<span class="number">2</span>; biz:<span class="number">0</span>(hmi.HandleClipShareApply failed, syncClipNonOriData failed, zip.OpenReader(/storage/emulated/<span class="number">0</span>/Android/data/com.danale.edge/files/user_local/volume/id_6ul5lak8wzfe/temp/hmi/clips/zip/601964a6e3d84514a554263d37f01abc) failed, zip: not a valid zip file)</span><br></pre></td></tr></tbody></table></figure><h2 id="√远端同步过来的视频不能收藏"><a href="#√远端同步过来的视频不能收藏" class="headerlink" title="√远端同步过来的视频不能收藏"></a>√远端同步过来的视频不能收藏</h2><p>搜索页会出现</p><p>目前逻辑是远端的视频不能播放，所以在首页会过滤掉远端的视频只保留本地视频，即</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 过滤首页远端视频资源，同时对远端视频发起拉取</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SuppressLint(<span class="meta-string">"CheckResult"</span>)</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">suspend</span> <span class="function"><span class="keyword">fun</span> <span class="title">filterPlayList</span><span class="params">(list: <span class="type">List</span>&lt;<span class="type">Clip</span>&gt;)</span></span>: List&lt;Clip&gt; {</span><br><span class="line">    <span class="keyword">val</span> localList = list.filter { it.playMode == CLIP_PLAY_MODE_LOCAL }.toMutableList()</span><br><span class="line">    <span class="keyword">val</span> remoteList = list.filter { it.playMode == CLIP_PLAY_MODE_REMOTE_DEVICE }.toMutableList()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当cursor未拉取到数据或拉取数量不足时会重复拉取，直到cursor为空或数量满足</span></span><br><span class="line">    <span class="keyword">while</span> (localList.isEmpty() || localList.size &lt; LOAD_VIDEO_MIN) {</span><br><span class="line">        <span class="keyword">if</span> (nextCursor.isEmpty()) {</span><br><span class="line">            logger.e(TAG, <span class="string">"no newList"</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">val</span> newList = getVideoList(nextCursor)</span><br><span class="line">        newList.filter { it.playMode == CLIP_PLAY_MODE_LOCAL }</span><br><span class="line">            .forEach { localList.add(it) }</span><br><span class="line">        newList.filter { it.playMode == CLIP_PLAY_MODE_REMOTE_DEVICE }</span><br><span class="line">            .forEach { remoteList.add(it) }</span><br><span class="line">    }</span><br><span class="line">    logger.d(TAG, <span class="string">"localList size=<span class="subst">${localList.size}</span>, remoteList size=<span class="subst">${remoteList.size}</span>"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 远端拉取</span></span><br><span class="line">    getRemoteList(remoteList)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> localList</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>在搜索页中的视频做同样的操作，过滤掉远端视频</p><p>目前搜索页通过sdk分别获取人脸和tag的数据放到展示，存在问题是点进某个人脸或标签得到的视频是远端的导致没法播放，所以收藏也会失败</p><h3 id="record-1"><a href="#record-1" class="headerlink" title="record"></a>record</h3><p>现在的代码中<code>getFaceList</code>是拉取<code>sdk</code>人脸库中的数据，也就是所有的人脸，包括别的摄像机拍摄出的人脸，属于远端数据，所以会出现有的视频无法观看</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">loadPersonIdentities</span><span class="params">()</span></span> {</span><br><span class="line">  viewModelScope.launch {</span><br><span class="line">      <span class="keyword">val</span> newList = performOnIOWithDefault(emptyList()) {</span><br><span class="line">          <span class="comment">// 获取所有人脸</span></span><br><span class="line">          <span class="keyword">val</span> faceList = sdkFaceDatabase.blockingGetSdkFaceList()</span><br><span class="line">          <span class="comment">// 获取本机所有标签</span></span><br><span class="line">          <span class="keyword">val</span> labels = sdk.getAllLabel().await()</span><br><span class="line">          <span class="comment">// 提取出标签中的 faceUserId 部分</span></span><br><span class="line">          <span class="keyword">val</span> filteredLabels = labels.map { it.substringAfter(Label.IDENTITY_PREFIX.key) }</span><br><span class="line">          <span class="comment">// 过滤出本机中的人脸</span></span><br><span class="line">          faceList.filter { filteredLabels.contains(it.faceUserId) }</span><br><span class="line">      }</span><br><span class="line">      searchPersonAdapter.replaceALl(newList)</span><br><span class="line">      _personCount.value = searchPersonAdapter.getFrontFaceList().size</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>首先拿到本机中的所有<code>label</code>，这个<code>label</code>是本机的数据</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> labels = sdk.getAllLabel().await()</span><br></pre></td></tr></tbody></table></figure><p>再根据<code>Id</code>进行筛选，根据<code>label</code>中的<code>Label.IDENTITY_PREFIX.key</code>部分取<code>faceList</code>和<code>labels</code>中的交集人脸列表得到<code>newList</code>，将<code>newList</code>作为最终数据添加到<code>adapter</code>中</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 提取出人脸标签中的 faceUserId 部分</span></span><br><span class="line"><span class="keyword">val</span> filteredLabels = labels.map { it.substringAfter(Label.IDENTITY_PREFIX.key) }</span><br><span class="line"><span class="comment">// 过滤出本机中的人脸</span></span><br><span class="line"><span class="keyword">val</span> newList = faceList.filter { filteredLabels.contains(it.faceUserId) }</span><br></pre></td></tr></tbody></table></figure><p>最终代码</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">loadPersonIdentities</span><span class="params">()</span></span> {</span><br><span class="line">  viewModelScope.launch {</span><br><span class="line">      <span class="comment">// 获取所有人脸摘要</span></span><br><span class="line">      <span class="keyword">val</span> faceSummaryList = performOnIOWithDefault(emptyList()) {</span><br><span class="line">          getAllFaceSummary()</span><br><span class="line">      }</span><br><span class="line">      <span class="comment">// 获取所有人脸</span></span><br><span class="line">      <span class="keyword">val</span> faceList = withContext(Dispatchers.IO) {</span><br><span class="line">          sdk.getFaceList(faceSummaryList)</span><br><span class="line">      }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/******************修改部分*****************/</span></span><br><span class="line">      <span class="keyword">val</span> labels = sdk.getAllLabel().await()</span><br><span class="line">      <span class="comment">// 提取出人脸标签中的 faceUserId 部分</span></span><br><span class="line">      <span class="keyword">val</span> filteredLabels = labels.map { it.substringAfter(Label.IDENTITY_PREFIX.key) }</span><br><span class="line">      <span class="comment">// 过滤出本机中的人脸</span></span><br><span class="line">      <span class="keyword">val</span> newList = faceList.filter { filteredLabels.contains(it.faceUserId) }</span><br><span class="line"></span><br><span class="line">      searchPersonAdapter.faceList.clear()</span><br><span class="line">      searchPersonAdapter.faceList.addAll(newList)</span><br><span class="line">    <span class="comment">/******************修改部分*****************/</span></span><br><span class="line">    </span><br><span class="line">      <span class="comment">// fixme: SuppressLint 后续换SortedList</span></span><br><span class="line">      searchPersonAdapter.notifyDataSetChanged()</span><br><span class="line">      _personCount.value = searchPersonAdapter.faceList.size</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="保存MP4视频出现文件不存在"><a href="#保存MP4视频出现文件不存在" class="headerlink" title="保存MP4视频出现文件不存在"></a>保存MP4视频出现文件不存在</h2><h3 id="crash"><a href="#crash" class="headerlink" title="crash"></a>crash</h3><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2023</span>-<span class="number">09</span>-<span class="number">05</span> <span class="number">22</span>:<span class="number">33</span>:<span class="number">13.945</span> I/FileUtil: [DefaultDispatcher-worker-<span class="number">8</span>-<span class="number">1724</span>] [S]saveVideo</span><br><span class="line"><span class="number">2023</span>-<span class="number">09</span>-<span class="number">05</span> <span class="number">22</span>:<span class="number">33</span>:<span class="number">13.948</span> E/FileUtil: [DefaultDispatcher-worker-<span class="number">8</span>-<span class="number">1724</span>] [S]clip type is not original data</span><br><span class="line"><span class="number">2023</span>-<span class="number">09</span>-<span class="number">05</span> <span class="number">22</span>:<span class="number">33</span>:<span class="number">14.077</span> E/BaseApplication: [DefaultDispatcher-worker-<span class="number">8</span>-<span class="number">1724</span>] uncaughtException, thread = Thread[DefaultDispatcher-worker-<span class="number">8</span>,<span class="number">5</span>,main]</span><br><span class="line">java.io.FileNotFoundException:<span class="regexp">/storage/</span>emulated/<span class="number">0</span>/Android/data/com.danale.edge/files/user_local/volume/id_6xur6vx43a5c/temp/hmi/clips/nod/42adff7f955c4d56af4c48f5cf5e7ac1/mp4_path: open failed: ENOENT (No such file or directory)</span><br><span class="line">at libcore.io.IoBridge.open(IoBridge.java:<span class="number">574</span>)</span><br><span class="line">at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:<span class="number">160</span>)</span><br><span class="line">at k6.b.c(FileUtil.kt:<span class="number">18</span>)</span><br><span class="line">at com.danale.edge.ui.flow.VideoFlowViewModel.V(VideoFlowViewModel.kt:<span class="number">17</span>)</span><br><span class="line">at u6.c$a.d(DownloadDialog.kt:<span class="number">4</span>)</span><br><span class="line">at qh.a.o(ContinuationImpl.kt:<span class="number">3</span>)</span><br><span class="line">at ei.q0.run(DispatchedTask.kt:<span class="number">18</span>)</span><br><span class="line">at ji.g.run(LimitedDispatcher.kt:<span class="number">2</span>)</span><br><span class="line">at li.j.run(Tasks.kt:<span class="number">1</span>)</span><br><span class="line">at li.a$a.run(CoroutineScheduler.kt:<span class="number">14</span>)</span><br><span class="line"><span class="attr">Suppressed</span>: ei.o0: [b2{Cancelling}@b8522be, Dispatchers.IO]</span><br><span class="line">Caused by: android.system.ErrnoException: open failed: ENOENT (No such file or directory)</span><br><span class="line">at libcore.io.Linux.open(Native Method)</span><br><span class="line">at libcore.io.ForwardingOs.open(ForwardingOs.java:<span class="number">563</span>)</span><br><span class="line">at libcore.io.BlockGuardOs.open(BlockGuardOs.java:<span class="number">274</span>)</span><br><span class="line">at libcore.io.ForwardingOs.open(ForwardingOs.java:<span class="number">563</span>)</span><br><span class="line">at android.app.ActivityThread$AndroidOs.open(ActivityThread.java:<span class="number">8274</span>)</span><br><span class="line">at libcore.io.IoBridge.open(IoBridge.java:<span class="number">560</span>)</span><br><span class="line">... <span class="number">9</span> more</span><br></pre></td></tr></tbody></table></figure><p>(No such file or directory)</p><p>问题出现在：</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (clip.type != Clip.CLIP_TYPE_ORIGINAL_DATA) {</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">FIXME:</span> 目前不支持编辑已经是MP4的文件, 暂时全部返回原视频</span></span><br><span class="line"><span class="comment">   *  收藏页 -&gt; 添加拍摄者水印</span></span><br><span class="line"><span class="comment">   *  非本人拍摄(app内分享) -&gt; 添加拍摄者水印</span></span><br><span class="line"><span class="comment">   *  已经有水印(识别视频) -&gt; 直接保存原视频</span></span><br><span class="line"><span class="comment">   * */</span></span><br><span class="line">  logger.e(TAG, <span class="string">"clip type is not original data"</span>)</span><br><span class="line">  <span class="keyword">val</span> nonOriMP4Path = clip.nonOriginalData?.<span class="keyword">get</span>(Clip.NonOriginalData.KEY_MP4_PATH)</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">if</span> (nonOriMP4Path != <span class="literal">null</span>) {</span><br><span class="line">      <span class="keyword">try</span> {</span><br><span class="line">          File(nonOriMP4Path)</span><br><span class="line">      }<span class="keyword">catch</span> (e: Exception){</span><br><span class="line">          <span class="literal">null</span></span><br><span class="line">      }</span><br><span class="line">  } <span class="keyword">else</span> {</span><br><span class="line">      <span class="literal">null</span></span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><code>File(nonOriMP4Path)</code>中的路径不存在，可能原因是</p><p>​    如果path存在缓存文件夹中，那么存在手动清除缓存导致文件夹不存在，(需要重新修改需求？)</p><p>​    如果存在file文件夹中，前面的逻辑可能存在问题</p><h2 id="√-日志导出方式修改"><a href="#√-日志导出方式修改" class="headerlink" title="√ 日志导出方式修改"></a>√ 日志导出方式修改</h2><p>改为双击<code>应用版本</code>整个<code>item</code>导出日志</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">showLog</span><span class="params">(view: <span class="type">View</span>)</span></span> {</span><br><span class="line">  <span class="keyword">val</span> currentTime = System.currentTimeMillis()</span><br><span class="line">  <span class="keyword">val</span> clickDelay = currentTime - lastClickTime</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (clickDelay &lt; <span class="number">500</span>) {</span><br><span class="line">      clickCount++</span><br><span class="line">  } <span class="keyword">else</span> {</span><br><span class="line">      clickCount = <span class="number">1</span></span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  lastClickTime = currentTime</span><br><span class="line">  <span class="keyword">if</span> (clickCount &gt;= <span class="number">2</span>) {</span><br><span class="line">      logVisible.<span class="keyword">set</span>(<span class="literal">true</span>)</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="√-我的页面，部分视频没有展示收藏缩略图"><a href="#√-我的页面，部分视频没有展示收藏缩略图" class="headerlink" title="√ 我的页面，部分视频没有展示收藏缩略图"></a>√ 我的页面，部分视频没有展示收藏缩略图</h2><p>之前的获取方式会导致<code>list</code>不全</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> list = sdk.getFavoriteList(<span class="string">""</span>).await().list</span><br></pre></td></tr></tbody></table></figure><p>改成当指针不为空的时候持续调用接口</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> list = performOnIOWithDefault(emptyList()) {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> resultClipsList = ArrayList&lt;Clip&gt;()</span><br><span class="line">    <span class="keyword">var</span> currentCursor = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">do</span> {</span><br><span class="line">        <span class="keyword">val</span> resp = sdk.getFavoriteList(currentCursor).await()</span><br><span class="line"></span><br><span class="line">        resp.nextCursor.run {</span><br><span class="line">            logger.d(TAG, <span class="string">"getFavoriteList, nextCursor = <span class="variable">$this</span>"</span>)</span><br><span class="line">            currentCursor = <span class="keyword">this</span></span><br><span class="line">            nextCursor = <span class="keyword">this</span></span><br><span class="line">        }</span><br><span class="line">        resp.list?.let { resultClipsList.addAll(it) }</span><br><span class="line"></span><br><span class="line">    } <span class="keyword">while</span> (currentCursor.isNotEmpty())</span><br><span class="line"></span><br><span class="line">    resultClipsList</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="New"><a href="#New" class="headerlink" title="New"></a>New</h1><h2 id="√-收藏缩略图修改"><a href="#√-收藏缩略图修改" class="headerlink" title="√ 收藏缩略图修改"></a>√ 收藏缩略图修改</h2><p>存在拉伸，修改<code>type</code>为裁剪</p><p><code>android:scaleType="centerCrop"</code></p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">androidx.appcompat.widget.LinearLayoutCompat</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/group_favorite"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_gravity</span>=<span class="string">"end"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_marginEnd</span>=<span class="string">"24dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintEnd_toStartOf</span>=<span class="string">"@+id/arrow"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.appcompat.widget.AppCompatImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/favorite_1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"64dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"64dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:scaleType</span>=<span class="string">"centerCrop"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">"4dp"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.appcompat.widget.AppCompatImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/favorite_2"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"64dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"64dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:scaleType</span>=<span class="string">"centerCrop"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">"4dp"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.appcompat.widget.AppCompatImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/favorite_3"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"64dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"64dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:scaleType</span>=<span class="string">"centerCrop"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">"4dp"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.appcompat.widget.LinearLayoutCompat</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Bug&quot;&gt;&lt;a href=&quot;#Bug&quot; class=&quot;headerlink&quot; title=&quot;Bug&quot;&gt;&lt;/a&gt;Bug&lt;/h1&gt;&lt;h2 id=&quot;√-release包出现反序列化失败崩溃&quot;&gt;&lt;a href=&quot;#√-release包出现反序列化失败崩溃&quot; class=&quot;</summary>
      
    
    
    
    <category term="有在认真上班" scheme="https://kenken-xr.github.io/blog/categories/%E6%9C%89%E5%9C%A8%E8%AE%A4%E7%9C%9F%E4%B8%8A%E7%8F%AD/"/>
    
    
    <category term="2023 9月记录" scheme="https://kenken-xr.github.io/blog/tags/2023-9%E6%9C%88%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>人脸匹配好友列表</title>
    <link href="https://kenken-xr.github.io/blog/2023/04/07/%E4%BA%BA%E8%84%B8%E5%8C%B9%E9%85%8D%E5%A5%BD%E5%8F%8B%E5%88%97%E8%A1%A8/"/>
    <id>https://kenken-xr.github.io/blog/2023/04/07/%E4%BA%BA%E8%84%B8%E5%8C%B9%E9%85%8D%E5%A5%BD%E5%8F%8B%E5%88%97%E8%A1%A8/</id>
    <published>2023-04-07T07:15:23.000Z</published>
    <updated>2023-09-14T02:06:33.984Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>人脸匹配好友列表</p><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><ol><li>算法检测出的人脸配到当前的好友列表</li><li>如果有好友的人脸显示好友名称</li></ol><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><h2 id="设置备注页"><a href="#设置备注页" class="headerlink" title="设置备注页"></a>设置备注页</h2><h3 id="Activity"><a href="#Activity" class="headerlink" title="Activity"></a>Activity</h3><p>新建一个<code>activity</code>文件用于展示当前点击的头像</p><p><code>layout/activity_user_face.xml</code></p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".ui.userface.UserFaceActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.fragment.app.FragmentContainerView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/fragment_user_name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">"com.danale.edge.ui.userface.UserFaceFragment"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:layout</span>=<span class="string">"@layout/fragment_user_face"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><code>com/danale/edge/ui/userface/UserFaceActivity.kt</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.danale.edge.ui.userface</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.<span class="keyword">annotation</span>.SuppressLint</span><br><span class="line"><span class="keyword">import</span> android.app.Activity</span><br><span class="line"><span class="keyword">import</span> android.content.Intent</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> androidx.activity.viewModels</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.R</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.base.BaseActivity</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.base.BaseNavigation.Constants</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.ui.userface.UserFaceViewModel.Companion.REQUEST_CODE</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.usersdk.usecase.UserSdkUseCase</span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson</span><br><span class="line"><span class="keyword">import</span> dagger.hilt.android.AndroidEntryPoint</span><br><span class="line"><span class="keyword">import</span> io.reactivex.rxjava3.kotlin.subscribeBy</span><br><span class="line"><span class="keyword">import</span> io.reactivex.rxjava3.schedulers.Schedulers</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets</span><br><span class="line"><span class="keyword">import</span> javax.inject.Inject</span><br><span class="line"></span><br><span class="line"><span class="meta">@AndroidEntryPoint</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserFaceActivity</span> : <span class="type">BaseActivity</span></span>() {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> viewModel: UserFaceViewModel <span class="keyword">by</span> viewModels()</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Inject</span></span><br><span class="line">    <span class="keyword">lateinit</span> <span class="keyword">var</span> userSdk: UserSdkUseCase</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Inject</span></span><br><span class="line">    <span class="keyword">lateinit</span> <span class="keyword">var</span> gson: Gson</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当前点击的人脸下标 </span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> mainPosition: <span class="built_in">Int</span>? = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span> {</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">val</span> CURRENT_USER_FACE = <span class="string">"CURRENT_USER_FACE"</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> {</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_user_face)</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressLint(<span class="meta-string">"CheckResult"</span>)</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onResume</span><span class="params">()</span></span> {</span><br><span class="line">        <span class="keyword">super</span>.onResume()</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 拿到当前用户下标</span></span><br><span class="line">        mainPosition = intent?.getIntExtra(Constants.EXTRA_SEARCH_MAIN_POSITION, <span class="number">0</span>)</span><br><span class="line">        viewModel.loadSearchHistoryItems(mainPosition)</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 加载人脸的好友数据</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line">        userSdk.loadAssistData(CURRENT_USER_FACE)</span><br><span class="line">            .subscribeOn(Schedulers.io())</span><br><span class="line">            .subscribeBy(onSuccess = {</span><br><span class="line">                <span class="keyword">val</span> cb = StandardCharsets.UTF_8.decode(it)</span><br><span class="line">                <span class="keyword">val</span> json = cb.toString()</span><br><span class="line">                logger.d(</span><br><span class="line">                    TAG,</span><br><span class="line">                    <span class="string">"decode, buffer=<span class="subst">${it?.remaining()}</span>, json=<span class="subst">${json}</span>"</span></span><br><span class="line">                )</span><br><span class="line">                <span class="keyword">val</span> mapData = gson.fromJson(json, MutableMap::<span class="keyword">class</span>.java)</span><br><span class="line">                <span class="keyword">val</span> name = mapData[mainPosition.toString()]</span><br><span class="line">                viewModel.setName(name <span class="keyword">as</span> String?)</span><br><span class="line">            }, onError = {</span><br><span class="line">                logger.w(TAG, <span class="string">"load assist, buffer, error"</span>, it)</span><br><span class="line">            })</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 这里用到了startActivityForResult，用于页面带参数返回，参考</span></span><br><span class="line"><span class="comment">  * https://blog.csdn.net/weixin_41008021/article/details/90346700</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">    <span class="meta">@Deprecated(<span class="meta-string">"Deprecated in Java"</span>)</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onActivityResult</span><span class="params">(requestCode: <span class="type">Int</span>, resultCode: <span class="type">Int</span>, <span class="keyword">data</span>: <span class="type">Intent</span>?)</span></span> {</span><br><span class="line">        <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, <span class="keyword">data</span>)</span><br><span class="line">        <span class="keyword">when</span> (requestCode) {</span><br><span class="line">            REQUEST_CODE -&gt; {</span><br><span class="line">                <span class="keyword">if</span> (resultCode == Activity.RESULT_OK) {</span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">data</span> != <span class="literal">null</span>) {</span><br><span class="line">                        viewModel.setName(<span class="keyword">data</span>.getStringExtra(Constants.EXTRA_SEARCH_MAIN_POSITION))</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="Fragment"><a href="#Fragment" class="headerlink" title="Fragment"></a>Fragment</h3><p><code>layout/fragment_user_face.xml</code></p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">layout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">"viewModel"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">"com.danale.edge.ui.userface.UserFaceViewModel"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">import</span> <span class="attr">type</span>=<span class="string">"android.view.View"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@mipmap/art_bg_flow"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:context</span>=<span class="string">".ui.userface.UserFaceActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">com.danale.edge.ui.common.view.TopSafeAreaGuideLine</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/safe_area_top_guide"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintGuide_begin</span>=<span class="string">"24dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">tools:ignore</span>=<span class="string">"MissingConstraints"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/component_title_bar"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">layout</span>=<span class="string">"@layout/component_title_bar"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">"@id/safe_area_top_guide"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">androidx.appcompat.widget.LinearLayoutCompat</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">tools:ignore</span>=<span class="string">"MissingConstraints"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">androidx.recyclerview.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/recycler_persons"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:adapter</span>=<span class="string">"@{viewModel.searchPersonAdapter}"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">tools:background</span>=<span class="string">"#AFBC9D"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/tv_user_nickname"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">"24dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">"@{viewModel.currentUserName}"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textColor</span>=<span class="string">"@color/app_std_text_white"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">"18sp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">tools:text</span>=<span class="string">"Alcidae Username"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:background</span>=<span class="string">"@drawable/bg_rounded_button"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:backgroundTint</span>=<span class="string">"@color/app_primary"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:onClick</span>=<span class="string">"@{viewModel::onClickSetFriend}"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:paddingHorizontal</span>=<span class="string">"16dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:paddingVertical</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">"@string/text_replay"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textColor</span>=<span class="string">"@color/app_std_text_primary_inverse"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">androidx.appcompat.widget.LinearLayoutCompat</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><code>com/danale/edge/ui/userface/UserFaceFragment.kt</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.danale.edge.ui.userface</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater</span><br><span class="line"><span class="keyword">import</span> android.view.View</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup</span><br><span class="line"><span class="keyword">import</span> androidx.databinding.DataBindingUtil</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.ViewModelProvider</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.<span class="keyword">get</span></span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.LinearLayoutManager</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.R</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.base.BaseFragment</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.databinding.FragmentUserFaceBinding</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserFaceFragment</span> : <span class="type">BaseFragment</span></span>() {</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> viewModel: UserFaceViewModel</span><br><span class="line">    <span class="keyword">lateinit</span> <span class="keyword">var</span> binding: FragmentUserFaceBinding</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateView</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">        inflater: <span class="type">LayoutInflater</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">        container: <span class="type">ViewGroup</span>?,</span></span></span><br><span class="line"><span class="params"><span class="function">        savedInstanceState: <span class="type">Bundle</span>?</span></span></span><br><span class="line"><span class="params"><span class="function">    )</span></span>: View {</span><br><span class="line"></span><br><span class="line">        viewModel = ViewModelProvider(requireActivity()).<span class="keyword">get</span>()</span><br><span class="line">        binding =</span><br><span class="line">            DataBindingUtil.inflate(inflater, R.layout.fragment_user_face, container, <span class="literal">false</span>)</span><br><span class="line">        binding.viewModel = <span class="keyword">this</span>.viewModel</span><br><span class="line">        binding.lifecycleOwner = viewLifecycleOwner</span><br><span class="line"></span><br><span class="line">        binding.recyclerPersons.apply {</span><br><span class="line">            layoutManager =</span><br><span class="line">                LinearLayoutManager(requireContext(), LinearLayoutManager.HORIZONTAL, <span class="literal">false</span>)</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        viewModel = ViewModelProvider(requireActivity()).<span class="keyword">get</span>()</span><br><span class="line">        binding.viewModel = <span class="keyword">this</span>.viewModel</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> binding.root</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onViewCreated</span><span class="params">(view: <span class="type">View</span>, savedInstanceState: <span class="type">Bundle</span>?)</span></span> {</span><br><span class="line">        observeNavigation(viewModel)</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onResume</span><span class="params">()</span></span> {</span><br><span class="line">        <span class="keyword">super</span>.onResume()</span><br><span class="line">        setStatusBarDarkText(<span class="literal">false</span>, inverseOnNightMode = <span class="literal">false</span>)</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/work/%E4%BA%BA%E8%84%B8%E5%AF%B9%E5%BA%94%E5%A5%BD%E5%8F%8B%E5%88%97%E8%A1%A8/%E4%BA%BA%E8%84%B8%E8%AE%BE%E7%BD%AE.jpg"></p><h3 id="ViewModel"><a href="#ViewModel" class="headerlink" title="ViewModel"></a>ViewModel</h3><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.danale.edge.ui.userface</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.<span class="keyword">annotation</span>.SuppressLint</span><br><span class="line"><span class="keyword">import</span> android.app.Application</span><br><span class="line"><span class="keyword">import</span> android.content.Intent</span><br><span class="line"><span class="keyword">import</span> android.view.View</span><br><span class="line"><span class="keyword">import</span> androidx.databinding.ObservableField</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.viewModelScope</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.base.BaseNavigation</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.base.BaseViewModel</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.intelligence.IntelligenceRepository</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.ui.common.adapter.PersonAdapter</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.ui.common.adapter.ThumbnailAdapter</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.ui.common.callback.RecyclerItemOnClick</span><br><span class="line"><span class="keyword">import</span> dagger.hilt.android.lifecycle.HiltViewModel</span><br><span class="line"><span class="keyword">import</span> kotlinx.coroutines.Dispatchers</span><br><span class="line"><span class="keyword">import</span> kotlinx.coroutines.launch</span><br><span class="line"><span class="keyword">import</span> kotlinx.coroutines.withContext</span><br><span class="line"><span class="keyword">import</span> javax.inject.Inject</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@HiltViewModel</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserFaceViewModel</span> <span class="meta">@Inject</span> <span class="keyword">constructor</span></span>(application: Application) : BaseViewModel(application),</span><br><span class="line">    RecyclerItemOnClick&lt;ThumbnailAdapter.ThumbnailViewHolder&gt; {</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Inject</span></span><br><span class="line">    <span class="keyword">lateinit</span> <span class="keyword">var</span> ai: IntelligenceRepository</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当前用户名称</span></span><br><span class="line">    <span class="keyword">var</span> currentUserName = ObservableField(<span class="string">""</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> mainPosition = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用于给activity传参的标志</span></span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span> {</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">val</span> REQUEST_CODE = <span class="number">1</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当前页面的头像</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="keyword">val</span> searchPersonAdapter =</span><br><span class="line">        PersonAdapter(itemOnClick = <span class="keyword">object</span> : RecyclerItemOnClick&lt;PersonAdapter.PersonViewHolder&gt; {</span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onClickItem</span><span class="params">(viewHolder: <span class="type">PersonAdapter</span>.<span class="type">PersonViewHolder</span>)</span></span> {</span><br><span class="line">                logger.d(TAG, <span class="string">"onClickPerson=<span class="variable">$viewHolder</span>"</span>)</span><br><span class="line">            }</span><br><span class="line">        })</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加载当前点击的人脸图片</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="meta">@SuppressLint(<span class="meta-string">"NotifyDataSetChanged"</span>)</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">loadSearchHistoryItems</span><span class="params">(position: <span class="type">Int</span>?)</span></span> {</span><br><span class="line">        <span class="keyword">if</span> (position != <span class="literal">null</span>) {</span><br><span class="line">            mainPosition = position</span><br><span class="line">        }</span><br><span class="line">        viewModelScope.launch {</span><br><span class="line">            <span class="keyword">val</span> faceUsers = withContext(Dispatchers.IO) {</span><br><span class="line">                ai.getFaceUserList()</span><br><span class="line">            }</span><br><span class="line">            searchPersonAdapter.list.clear()</span><br><span class="line">            searchPersonAdapter.list.add(faceUsers[position!!])</span><br><span class="line">            <span class="comment">// fixme: SuppressLint 后续换SortedList</span></span><br><span class="line">            searchPersonAdapter.notifyDataSetChanged()</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置名称</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="meta">@SuppressLint(<span class="meta-string">"NotifyDataSetChanged"</span>)</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">setName</span><span class="params">(name: <span class="type">String</span>?)</span></span> {</span><br><span class="line">        logger.d(TAG, <span class="string">"setName, name = <span class="variable">$name</span>"</span>)</span><br><span class="line">        currentUserName.<span class="keyword">set</span>(name)</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 点击设置名称</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="meta">@Suppress(<span class="meta-string">"UNUSED_PARAMETER"</span>)</span> <span class="comment">// View.OnClickListener</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">onClickSetFriend</span><span class="params">(view: <span class="type">View</span>)</span></span> {</span><br><span class="line">        <span class="keyword">val</span> intent = Intent().apply {</span><br><span class="line">            putExtra(</span><br><span class="line">                BaseNavigation.Constants.EXTRA_SEARCH_MAIN_POSITION,</span><br><span class="line">                mainPosition,</span><br><span class="line">            )</span><br><span class="line">        }</span><br><span class="line">      <span class="comment">// BaseNavigation封装的方法</span></span><br><span class="line">        navigationRequiredEvent.postValue(</span><br><span class="line">            BaseNavigation(</span><br><span class="line">                BaseNavigation.Route.USER_FACE_FRIEND_LIST,</span><br><span class="line">                intent,</span><br><span class="line">                <span class="literal">true</span>,</span><br><span class="line">                REQUEST_CODE</span><br><span class="line">            )</span><br><span class="line">        )</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onClickItem</span><span class="params">(viewHolder: <span class="type">ThumbnailAdapter</span>.<span class="type">ThumbnailViewHolder</span>)</span></span> {</span><br><span class="line">        logger.d(TAG, <span class="string">"viewHolder=<span class="variable">$viewHolder</span>"</span>)</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这里的跳转用到了<code>onActivityResult</code>， 使用的是<code>BaseNavigation</code>封装后的方法，第三个参数为是否开启<code>startForResult</code>，第四个参数是标志</p><p>封装的方法如下：</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">launch</span><span class="params">(fromActivity: <span class="type">Activity</span>, intent: <span class="type">Intent</span>? = <span class="literal">null</span>)</span></span> {</span><br><span class="line">  <span class="keyword">val</span> finalIntent = Intent(fromActivity, route.activityClass)</span><br><span class="line">  paramIntent?.let { finalIntent.putExtras(it) }</span><br><span class="line">  intent?.let { finalIntent.putExtras(it) }</span><br><span class="line">  <span class="keyword">if</span> (startForResult) {</span><br><span class="line">      fromActivity.startActivityForResult(finalIntent, requestCode, requestBundle)</span><br><span class="line">  } <span class="keyword">else</span> {</span><br><span class="line">      fromActivity.startActivity(finalIntent)</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>每次跳转都会走到<code>launch</code>函数中</p><h2 id="好友列表页"><a href="#好友列表页" class="headerlink" title="好友列表页"></a>好友列表页</h2><h3 id="Activity-1"><a href="#Activity-1" class="headerlink" title="Activity"></a>Activity</h3><p><code>com/danale/edge/ui/userface/UserFaceFriendListActivity.kt</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.danale.edge.ui.userface</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.<span class="keyword">annotation</span>.SuppressLint</span><br><span class="line"><span class="keyword">import</span> android.app.Activity</span><br><span class="line"><span class="keyword">import</span> android.content.Intent</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> androidx.activity.viewModels</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.R</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.base.BaseActivity</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.base.BaseNavigation</span><br><span class="line"><span class="keyword">import</span> dagger.hilt.android.AndroidEntryPoint</span><br><span class="line"><span class="keyword">import</span> kotlinx.coroutines.*</span><br><span class="line"></span><br><span class="line"><span class="meta">@AndroidEntryPoint</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserFaceFriendListActivity</span> : <span class="type">BaseActivity</span></span>() {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> viewModel: UserFaceFriendListViewModel <span class="keyword">by</span> viewModels()</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressLint(<span class="meta-string">"SuspiciousIndentation"</span>)</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> {</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_user_face_friend_list)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第一次跳转过来的时候拿到点击的下标</span></span><br><span class="line">        <span class="keyword">val</span> mainPosition =</span><br><span class="line">            intent?.getIntExtra(BaseNavigation.Constants.EXTRA_SEARCH_MAIN_POSITION, <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">if</span> (mainPosition != <span class="literal">null</span>) {</span><br><span class="line">            viewModel.setPosition(mainPosition)</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        MainScope().launch {</span><br><span class="line">            viewModel.loadPlatformContactList()</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onResume</span><span class="params">()</span></span> {</span><br><span class="line">        <span class="keyword">super</span>.onResume()</span><br><span class="line">        viewModel.navigationRequiredEvent.observe(<span class="keyword">this</span>) {</span><br><span class="line">            it?.launch(<span class="keyword">this</span>)</span><br><span class="line">        }</span><br><span class="line">        observeNavigation(viewModel)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 非首次跳转</span></span><br><span class="line">        <span class="comment">// 监听viewModel的liveData</span></span><br><span class="line">        viewModel.liveData.observe(<span class="keyword">this</span>) {</span><br><span class="line">            <span class="keyword">val</span> intent = Intent().apply {</span><br><span class="line">                putExtra(</span><br><span class="line">                    BaseNavigation.Constants.EXTRA_SEARCH_MAIN_POSITION,</span><br><span class="line">                    it,</span><br><span class="line">                )</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 返回上一页面</span></span><br><span class="line">            setResult(Activity.RESULT_OK, intent)</span><br><span class="line">            finish()</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>跳转的逻辑写在了<code>ViewModel</code>中，无法调用<code>Acitvity</code>中的<code>setResult</code>和<code>finish</code>方法，因此通过一个<code>liveData</code>传值通知<code>Activity</code>进行相关操作，<a href="https://juejin.cn/post/6844903945517678599">ViewModel与Activity/Fragments通讯的正确姿势 - 掘金 (juejin.cn)</a></p><p><code>layout/activity_user_face_friend_list.xml</code></p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".ui.userface.UserFaceFriendListActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.fragment.app.FragmentContainerView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/fragment_user_name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">"com.danale.edge.ui.userface.UserFaceFriendListFragment"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:layout</span>=<span class="string">"@layout/fragment_user_face_friend_list"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="Fragment-1"><a href="#Fragment-1" class="headerlink" title="Fragment"></a>Fragment</h3><p><code>layout/fragment_user_face_friend_list.xml</code></p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">layout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">"viewModel"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">"com.danale.edge.ui.userface.UserFaceFriendListViewModel"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@color/app_std_background_gray"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">com.danale.edge.ui.common.view.TopSafeAreaGuideLine</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/safe_area_top_guide"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintGuide_begin</span>=<span class="string">"24dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">tools:ignore</span>=<span class="string">"MissingConstraints"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/component_title_bar"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">layout</span>=<span class="string">"@layout/component_title_bar"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">"@id/safe_area_top_guide"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">androidx.recyclerview.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/recycler_view"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:adapter</span>=<span class="string">"@{viewModel.starUserAdapter}"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:clipToPadding</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:overScrollMode</span>=<span class="string">"never"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:paddingBottom</span>=<span class="string">"24dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">"@id/component_title_bar"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><code>com/danale/edge/ui/userface/UserFaceFriendListFragment.kt</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.danale.edge.ui.userface</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater</span><br><span class="line"><span class="keyword">import</span> android.view.View</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup</span><br><span class="line"><span class="keyword">import</span> androidx.databinding.DataBindingUtil</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.ViewModelProvider</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.<span class="keyword">get</span></span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.LinearLayoutManager</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.R</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.base.BaseFragment</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.databinding.FragmentUserFaceFriendListBinding</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserFaceFriendListFragment</span> : <span class="type">BaseFragment</span></span>() {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> binding: FragmentUserFaceFriendListBinding</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> viewModel: UserFaceFriendListViewModel</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateView</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">        inflater: <span class="type">LayoutInflater</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">        container: <span class="type">ViewGroup</span>?,</span></span></span><br><span class="line"><span class="params"><span class="function">        savedInstanceState: <span class="type">Bundle</span>?</span></span></span><br><span class="line"><span class="params"><span class="function">    )</span></span>: View {</span><br><span class="line">        binding = DataBindingUtil.inflate(</span><br><span class="line">            inflater,</span><br><span class="line">            R.layout.fragment_user_face_friend_list,</span><br><span class="line">            container,</span><br><span class="line">            <span class="literal">false</span></span><br><span class="line">        )</span><br><span class="line">        binding.lifecycleOwner = viewLifecycleOwner</span><br><span class="line"></span><br><span class="line">        binding.componentTitleBar.apply {</span><br><span class="line">            leftIconRes = R.mipmap.ic_back_black</span><br><span class="line">            responder = <span class="keyword">this</span><span class="symbol">@UserFaceFriendListFragment</span></span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        binding.recyclerView.apply {</span><br><span class="line">            layoutManager =</span><br><span class="line">                LinearLayoutManager(requireContext(), LinearLayoutManager.VERTICAL, <span class="literal">false</span>)</span><br><span class="line">            itemAnimator?.changeDuration = <span class="number">0L</span> <span class="comment">// 关闭变化动画防止刷新内容时闪烁</span></span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        viewModel = ViewModelProvider(requireActivity()).<span class="keyword">get</span>()</span><br><span class="line">        binding.viewModel = <span class="keyword">this</span>.viewModel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> binding.root</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onResume</span><span class="params">()</span></span> {</span><br><span class="line">        <span class="keyword">super</span>.onResume()</span><br><span class="line">        setStatusBarDarkText(<span class="literal">true</span>)</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/work/%E4%BA%BA%E8%84%B8%E5%AF%B9%E5%BA%94%E5%A5%BD%E5%8F%8B%E5%88%97%E8%A1%A8/%E5%A5%BD%E5%8F%8B%E5%88%97%E8%A1%A8.jpg"></p><h3 id="ViewModel-1"><a href="#ViewModel-1" class="headerlink" title="ViewModel"></a>ViewModel</h3><p><code>com/danale/edge/ui/userface/UserFaceFriendListViewModel.kt</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.danale.edge.ui.userface</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.<span class="keyword">annotation</span>.SuppressLint</span><br><span class="line"><span class="keyword">import</span> android.app.Application</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.MutableLiveData</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.base.BaseViewModel</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.ui.common.adapter.ThumbnailAdapter</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.ui.common.callback.RecyclerItemOnClick</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.ui.common.groupie.UserFaceFriendItem</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.usersdk.usecase.UserSdkUseCase</span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson</span><br><span class="line"><span class="keyword">import</span> com.xwray.groupie.GroupieAdapter</span><br><span class="line"><span class="keyword">import</span> com.xwray.groupie.Section</span><br><span class="line"><span class="keyword">import</span> dagger.hilt.android.lifecycle.HiltViewModel</span><br><span class="line"><span class="keyword">import</span> io.reactivex.rxjava3.kotlin.subscribeBy</span><br><span class="line"><span class="keyword">import</span> io.reactivex.rxjava3.schedulers.Schedulers</span><br><span class="line"><span class="keyword">import</span> kotlinx.coroutines.Dispatchers</span><br><span class="line"><span class="keyword">import</span> kotlinx.coroutines.rx3.awaitLast</span><br><span class="line"><span class="keyword">import</span> kotlinx.coroutines.rx3.awaitSingleOrNull</span><br><span class="line"><span class="keyword">import</span> kotlinx.coroutines.withContext</span><br><span class="line"><span class="keyword">import</span> org.json.JSONException</span><br><span class="line"><span class="keyword">import</span> org.json.JSONObject</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets</span><br><span class="line"><span class="keyword">import</span> javax.inject.Inject</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@HiltViewModel</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserFaceFriendListViewModel</span> <span class="meta">@Inject</span> <span class="keyword">constructor</span></span>(application: Application) :</span><br><span class="line">    BaseViewModel(application),</span><br><span class="line">    RecyclerItemOnClick&lt;ThumbnailAdapter.ThumbnailViewHolder&gt; {</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用于加载页面的Adapter</span></span><br><span class="line">    <span class="keyword">val</span> starUserAdapter = GroupieAdapter()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 最终列表中的数据格式</span></span><br><span class="line">    <span class="keyword">data</span> <span class="class"><span class="keyword">class</span> <span class="title">UserFaceFriend</span></span>(</span><br><span class="line">        <span class="keyword">var</span> name: String?,</span><br><span class="line">        <span class="keyword">var</span> url: String?,</span><br><span class="line">        <span class="keyword">var</span> nameId: String?</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 最终求交集的星标列表</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> userFaceFriendList = ArrayList&lt;UserFaceFriend&gt;()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> mainPosition = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Inject</span></span><br><span class="line">    <span class="keyword">lateinit</span> <span class="keyword">var</span> userSdk: UserSdkUseCase</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Inject</span></span><br><span class="line">    <span class="keyword">lateinit</span> <span class="keyword">var</span> gson: Gson</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> liveData = MutableLiveData&lt;String&gt;()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span> {</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">val</span> CURRENT_USER_FACE = <span class="string">"CURRENT_USER_FACE"</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 拿到对应position</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">setPosition</span><span class="params">(position: <span class="type">Int</span>)</span></span> {</span><br><span class="line">        mainPosition = position</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加载好友列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">suspend</span> <span class="function"><span class="keyword">fun</span> <span class="title">loadPlatformContactList</span><span class="params">(refresh: <span class="type">Boolean</span> = <span class="literal">false</span>)</span></span> {</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="comment">// 获取的好友列表</span></span><br><span class="line">            withContext(Dispatchers.IO) {</span><br><span class="line">                sdk.getFriendsList(forceReFetch = refresh).awaitLast().map {</span><br><span class="line">                    <span class="comment">// 用户名</span></span><br><span class="line">                    <span class="keyword">val</span> displayName = <span class="keyword">if</span> (it.remarkName?.isNotEmpty() == <span class="literal">true</span>) {</span><br><span class="line">                        it.remarkName</span><br><span class="line">                    } <span class="keyword">else</span> {</span><br><span class="line">                        it.likeName</span><br><span class="line">                    }</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 用户头像</span></span><br><span class="line">                    <span class="keyword">val</span> url = withContext(Dispatchers.IO) {</span><br><span class="line">                        it.userName?.let { it1 -&gt;</span><br><span class="line">                            sdk.getPhotoUrlByPlatformUserName(it1).awaitSingleOrNull()</span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 添加数据</span></span><br><span class="line">                    userFaceFriendList.add(</span><br><span class="line">                        UserFaceFriend(</span><br><span class="line">                            displayName,</span><br><span class="line">                            url,</span><br><span class="line">                            it.userName</span><br><span class="line">                        )</span><br><span class="line">                    )</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 构建列表</span></span><br><span class="line">            buildSettingItems()</span><br><span class="line"></span><br><span class="line">        } <span class="keyword">catch</span> (e: Exception) {</span><br><span class="line">            toastError(e)</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构建好友列表</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="meta">@SuppressLint(<span class="meta-string">"CheckResult"</span>)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">buildSettingItems</span><span class="params">()</span></span> {</span><br><span class="line">        logger.d(TAG, <span class="string">"buildSettingItems starFriendList=<span class="subst">${userFaceFriendList}</span>"</span>)</span><br><span class="line">        starUserAdapter.apply {</span><br><span class="line">            add(Section().apply {</span><br><span class="line">                <span class="keyword">for</span> ((i, item) <span class="keyword">in</span> userFaceFriendList.withIndex()) {</span><br><span class="line">                    item.url?.let { url -&gt;</span><br><span class="line">                        item.name?.let { name -&gt;</span><br><span class="line">                            UserFaceFriendItem(</span><br><span class="line">                                avatar = url,  <span class="comment">// 头像链接</span></span><br><span class="line">                                name = name,  <span class="comment">// 用户名</span></span><br><span class="line">                                clickListener = {</span><br><span class="line">                                    <span class="comment">// 加载数据</span></span><br><span class="line">                                    userSdk.loadAssistData(CURRENT_USER_FACE)</span><br><span class="line">                                        .subscribeOn(Schedulers.io())</span><br><span class="line">                                        .subscribeBy(onSuccess = {</span><br><span class="line">                                            <span class="keyword">val</span> cb = StandardCharsets.UTF_8.decode(it)</span><br><span class="line">                                            <span class="keyword">val</span> json = cb.toString()</span><br><span class="line"></span><br><span class="line">                                            <span class="keyword">val</span> mapJson = <span class="keyword">if</span> (json == <span class="string">"null"</span>) {</span><br><span class="line">                                                <span class="keyword">val</span> <span class="keyword">data</span> = mapOf(<span class="string">"<span class="variable">$mainPosition</span>"</span> to name)</span><br><span class="line">                                                gson.toJson(<span class="keyword">data</span>)</span><br><span class="line">                                            } <span class="keyword">else</span> {</span><br><span class="line">                                                <span class="keyword">val</span> mapData = getMap(json)</span><br><span class="line">                                                <span class="comment">// 添加数据</span></span><br><span class="line">                                                mapData?.<span class="keyword">set</span>(mainPosition.toString(), name)</span><br><span class="line">                                                gson.toJson(mapData)</span><br><span class="line">                                            }</span><br><span class="line"></span><br><span class="line">                                            <span class="comment">//更新数据</span></span><br><span class="line">                                            userSdk.storeAssistData(</span><br><span class="line">                                                CURRENT_USER_FACE, mapJson.toByteArray(StandardCharsets.UTF_8)</span><br><span class="line">                                            )</span><br><span class="line">                                                .subscribeOn(Schedulers.io())</span><br><span class="line">                                                .subscribeBy(onSuccess = {</span><br><span class="line">                                                    logger.d(TAG, <span class="string">"updateFaceUserList, buffer, success"</span>)</span><br><span class="line">                                                }, onError = { e -&gt;</span><br><span class="line">                                                    logger.e(TAG, <span class="string">"updateFaceUserList, buffer, error"</span>,e)</span><br><span class="line">                                                })</span><br><span class="line">                                            <span class="comment">// 传递给liveData通知activity跳转</span></span><br><span class="line">                                            liveData.postValue(mainPosition.toString())</span><br><span class="line"></span><br><span class="line">                                        }, onError = {</span><br><span class="line">                                            logger.w(TAG, <span class="string">"load assist, buffer, error"</span>, it)</span><br><span class="line">                                        })</span><br><span class="line">                                }</span><br><span class="line">                            )</span><br><span class="line">                        }</span><br><span class="line">                    }?.let { add(it) }</span><br><span class="line">                }</span><br><span class="line">            })</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">getMap</span><span class="params">(jsonString: <span class="type">String</span>?)</span></span>: HashMap&lt;String, Any&gt;? {</span><br><span class="line">        <span class="keyword">val</span> jsonObject: JSONObject</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            jsonObject = jsonString?.let { JSONObject(it) }!!</span><br><span class="line">            <span class="keyword">val</span> keyIter: Iterator&lt;String&gt; = jsonObject.keys()</span><br><span class="line">            <span class="keyword">var</span> key: String</span><br><span class="line">            <span class="keyword">var</span> value: Any</span><br><span class="line">            <span class="keyword">val</span> valueMap = HashMap&lt;String, Any&gt;()</span><br><span class="line">            <span class="keyword">while</span> (keyIter.hasNext()) {</span><br><span class="line">                key = keyIter.next()</span><br><span class="line">                value = jsonObject[key] <span class="keyword">as</span> Any</span><br><span class="line">                valueMap[key] = value</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span> valueMap</span><br><span class="line">        } <span class="keyword">catch</span> (e: JSONException) {</span><br><span class="line">            e.printStackTrace()</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onClickItem</span><span class="params">(viewHolder: <span class="type">ThumbnailAdapter</span>.<span class="type">ThumbnailViewHolder</span>)</span></span> {</span><br><span class="line">        logger.d(TAG, <span class="string">"viewHolder=<span class="variable">$viewHolder</span>"</span>)</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p><video src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/work/%E4%BA%BA%E8%84%B8%E5%AF%B9%E5%BA%94%E5%A5%BD%E5%8F%8B%E5%88%97%E8%A1%A8/%E7%BB%93%E6%9E%9C.mp4" width="800px" height="600px" controls="controls"></video></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;h2 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h2&gt;&lt;p&gt;人脸匹</summary>
      
    
    
    
    <category term="有在认真上班" scheme="https://kenken-xr.github.io/blog/categories/%E6%9C%89%E5%9C%A8%E8%AE%A4%E7%9C%9F%E4%B8%8A%E7%8F%AD/"/>
    
    
    <category term="写了什么新功能" scheme="https://kenken-xr.github.io/blog/tags/%E5%86%99%E4%BA%86%E4%BB%80%E4%B9%88%E6%96%B0%E5%8A%9F%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>星标用户</title>
    <link href="https://kenken-xr.github.io/blog/2023/03/28/%E6%98%9F%E6%A0%87%E7%94%A8%E6%88%B7/"/>
    <id>https://kenken-xr.github.io/blog/2023/03/28/%E6%98%9F%E6%A0%87%E7%94%A8%E6%88%B7/</id>
    <published>2023-03-28T01:48:47.000Z</published>
    <updated>2023-09-14T02:06:33.985Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>实现星标用户的页面</p><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><ol><li>加载星标用户列表：<code>starUserLoad</code></li><li>加载好友列表: <code>com.danale.edge.usersdk.usecase.UserSdkUseCase#getFriendsList</code><ol><li>使用好友的用户名获取昵称：<code>com.danale.edge.usersdk.usecase.UserSdkUseCaseImpl#getUserLikeNameByPlatformUserName</code></li><li>使用好友的用户名获取头像：<code>com.danale.edge.usersdk.usecase.UserSdkUseCaseImpl#getPhotoUrlByPlatformUserName</code></li></ol></li><li>每个好友后面有一个ratio，false-&gt;true触发<code>starUserStore</code>， true-&gt;false -&gt; <code>starUserDelete</code></li></ol><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><h2 id="定义接口Op"><a href="#定义接口Op" class="headerlink" title="定义接口Op"></a>定义接口Op</h2><h3 id="存用户"><a href="#存用户" class="headerlink" title="存用户"></a>存用户</h3><p><code>com/danale/edge/usersdk/operation/StarUserStoreOp.kt</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.danale.edge.usersdk.operation</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.danale.edge.foundation.log.Logger</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.usersdk.jni.BaseJsonOperation</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.usersdk.jni.BaseResponse</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.usersdk.jni.UserSdkWrapper</span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson</span><br><span class="line"><span class="keyword">import</span> com.google.gson.annotations.SerializedName</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StarUserStoreOp</span></span>(<span class="keyword">val</span> param: Param, logger: Logger, gson: Gson) :</span><br><span class="line">    BaseJsonOperation&lt;BaseResponse&gt;(logger, gson) {</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">unmarshallSerializedResponse</span><span class="params">(jsonOutput: <span class="type">String</span>?)</span></span>: BaseResponse {</span><br><span class="line">        <span class="keyword">return</span> BaseResponse()</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">performOperation</span><span class="params">(context: <span class="type">CallbackContext</span>)</span></span> {</span><br><span class="line">        UserSdkWrapper.nativeStoreStarUserList(context, gson.toJson(param))</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Param</span></span>(</span><br><span class="line">        <span class="meta">@SerializedName(<span class="meta-string">"star_user_list"</span>)</span> <span class="keyword">val</span> starUserList: List&lt;StarUserListInfo&gt;</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">StarUserListInfo</span></span>(</span><br><span class="line">        <span class="meta">@SerializedName(<span class="meta-string">"device_id"</span>)</span> <span class="keyword">val</span> deviceId: String? = <span class="literal">null</span>,</span><br><span class="line">        <span class="meta">@SerializedName(<span class="meta-string">"user_name"</span>)</span> <span class="keyword">val</span> userName: String? = <span class="literal">null</span></span><br><span class="line">    ) {</span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">toString</span><span class="params">()</span></span>: String {</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"StarUserStoreOp(deviceId=<span class="variable">$deviceId</span>, name=<span class="variable">$userName</span>)"</span></span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>在<code>performOperation</code>中定义了接口<code>UserSdkWrapper.nativeStoreStarUserList</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">external</span> <span class="function"><span class="keyword">fun</span> <span class="title">nativeStoreStarUserList</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    context: <span class="type">NativeResponseCallback</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    paramJsonString: <span class="type">String</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br></pre></td></tr></tbody></table></figure><p>在这里调用c++的实现</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">"C"</span></span><br><span class="line"><span class="function">JNIEXPORT <span class="keyword">void</span> JNICALL</span></span><br><span class="line"><span class="function"><span class="title">Java_com_danale_edge_usersdk_jni_UserSdkWrapper_nativeStoreStarUserList</span><span class="params">(JNIEnv *env, jobject thiz,</span></span></span><br><span class="line"><span class="params"><span class="function">                                                                        jobject context,</span></span></span><br><span class="line"><span class="params"><span class="function">                                                                        jstring param_json_string)</span> </span>{</span><br><span class="line">    jboolean isCopy = JNI_TRUE;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *param_json_string_chars = env-&gt;<span class="built_in">GetStringUTFChars</span>(param_json_string,</span><br><span class="line">                                                                 &amp;isCopy);</span><br><span class="line">    jobject ctx_ref = env-&gt;<span class="built_in">NewGlobalRef</span>(context);</span><br><span class="line">    <span class="built_in">APP_LOG_I</span>(<span class="string">"nativeStoreStarUserList, ref=%p"</span>, ctx_ref);</span><br><span class="line">    <span class="built_in">dip_pub_user_store_star_user</span>(ctx_ref,</span><br><span class="line">                                 <span class="keyword">const_cast</span>&lt;<span class="keyword">char</span> *&gt;(param_json_string_chars),</span><br><span class="line">                                 app_dip_fe_usr_sdk_general_json_callback);</span><br><span class="line">    env-&gt;<span class="built_in">ReleaseStringUTFChars</span>(param_json_string, param_json_string_chars);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><code>dip_pub_user_store_star_user</code>是最终接口的名称</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @brief 存储星标用户</span></span><br><span class="line"><span class="comment"> * @param [in]args_json.star_user_list 星标用户信息数组</span></span><br><span class="line"><span class="comment"> * @param [in]args_json.user_list.device_id 设备id</span></span><br><span class="line"><span class="comment"> * @param [in]args_json.user_list.user_name 用户名</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> example:</span></span><br><span class="line"><span class="comment"> 请求参数示例</span></span><br><span class="line"><span class="comment"> {</span></span><br><span class="line"><span class="comment">"star_user_list":[{</span></span><br><span class="line"><span class="comment">"device_id": "xxxxxxxxxxxxxx",</span></span><br><span class="line"><span class="comment">"user_name": "xxxxxxxxxxxxxx",</span></span><br><span class="line"><span class="comment">}]</span></span><br><span class="line"><span class="comment"> }</span></span><br><span class="line"><span class="comment"> 成功返回0，失败返回error code</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">dip_pub_user_store_star_user</span><span class="params">(dip_fe_usr_sdk_ctx ctx, <span class="keyword">char</span>* args_json, dip_fe_usr_sdk_json_callback callback)</span></span>;</span><br></pre></td></tr></tbody></table></figure><h3 id="取用户"><a href="#取用户" class="headerlink" title="取用户"></a>取用户</h3><p><code>com/danale/edge/usersdk/operation/StarUserLoadOp.kt</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.danale.edge.usersdk.operation</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.danale.edge.foundation.log.Logger</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.usersdk.jni.BaseJsonOperation</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.usersdk.jni.BaseResponse</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.usersdk.jni.UserSdkWrapper</span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson</span><br><span class="line"><span class="keyword">import</span> com.google.gson.annotations.SerializedName</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StarUserLoadOp</span></span>(<span class="keyword">val</span> param: Param, logger: Logger, gson: Gson) :</span><br><span class="line">    BaseJsonOperation&lt;StarUserLoadOp.Response&gt;(logger, gson) {</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">unmarshallSerializedResponse</span><span class="params">(jsonOutput: <span class="type">String</span>?)</span></span>: Response {</span><br><span class="line">        <span class="keyword">return</span> gson.fromJson(jsonOutput, Response::<span class="keyword">class</span>.java) ?: Response(emptyList())</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">performOperation</span><span class="params">(context: <span class="type">CallbackContext</span>)</span></span> {</span><br><span class="line">        UserSdkWrapper.nativeGetStarUserList(context, gson.toJson(param))</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Param</span></span>(</span><br><span class="line">        <span class="meta">@SerializedName(<span class="meta-string">"device_id"</span>)</span> <span class="keyword">var</span> id: String</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Response</span></span>(toList: List&lt;StarUserInfo&gt;) : BaseResponse() {</span><br><span class="line">        <span class="meta">@SerializedName(<span class="meta-string">"star_user_list"</span>)</span></span><br><span class="line">        <span class="keyword">var</span> deviceIdList: List&lt;StarUserInfo&gt;? = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">toString</span><span class="params">()</span></span>: String {</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"StarUserLoadOp(deviceIdList=<span class="subst">${deviceIdList}</span>)"</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">StarUserInfo</span> </span>{</span><br><span class="line">        <span class="meta">@SerializedName(<span class="meta-string">"user_name"</span>)</span></span><br><span class="line">        <span class="keyword">val</span> userName: String = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">toString</span><span class="params">()</span></span>: String {</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"StarUserLoadOp(userName=<span class="variable">$userName</span>)"</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">external</span> <span class="function"><span class="keyword">fun</span> <span class="title">nativeGetStarUserList</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    context: <span class="type">NativeResponseCallback</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    paramJsonString: <span class="type">String</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">"C"</span></span><br><span class="line"><span class="function">JNIEXPORT <span class="keyword">void</span> JNICALL</span></span><br><span class="line"><span class="function"><span class="title">Java_com_danale_edge_usersdk_jni_UserSdkWrapper_nativeGetStarUserList</span><span class="params">(JNIEnv *env, jobject thiz,</span></span></span><br><span class="line"><span class="params"><span class="function">                                                                      jobject context,</span></span></span><br><span class="line"><span class="params"><span class="function">                                                                      jstring param_json_string)</span> </span>{</span><br><span class="line">    jboolean isCopy = JNI_TRUE;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *param_json_string_chars = env-&gt;<span class="built_in">GetStringUTFChars</span>(param_json_string,</span><br><span class="line">                                                                 &amp;isCopy);</span><br><span class="line">    jobject ctx_ref = env-&gt;<span class="built_in">NewGlobalRef</span>(context);</span><br><span class="line">    <span class="built_in">APP_LOG_I</span>(<span class="string">"nativeGetStarUserList, ref=%p"</span>, ctx_ref);</span><br><span class="line">    <span class="built_in">dip_pub_user_load_star_user_list</span>(ctx_ref,</span><br><span class="line">                                     <span class="keyword">const_cast</span>&lt;<span class="keyword">char</span> *&gt;(param_json_string_chars),</span><br><span class="line">                                     app_dip_fe_usr_sdk_general_json_callback);</span><br><span class="line">    env-&gt;<span class="built_in">ReleaseStringUTFChars</span>(param_json_string, param_json_string_chars);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @brief 存储星标用户</span></span><br><span class="line"><span class="comment"> * @param [in]args_json.device_id                 设备id</span></span><br><span class="line"><span class="comment"> * @param [out]args_json.star_user_list           星标用户列表</span></span><br><span class="line"><span class="comment"> * @param [out]args_json.star_user_list.user_name 用户名</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> example:</span></span><br><span class="line"><span class="comment"> 请求参数示例</span></span><br><span class="line"><span class="comment"> {</span></span><br><span class="line"><span class="comment">"device_id": "xxxxxxxxx",</span></span><br><span class="line"><span class="comment"> }</span></span><br><span class="line"><span class="comment"> 返回参数示例</span></span><br><span class="line"><span class="comment"> {</span></span><br><span class="line"><span class="comment">"star_user_list":</span></span><br><span class="line"><span class="comment">    [</span></span><br><span class="line"><span class="comment">        {"user_name" : "xxxxx"},</span></span><br><span class="line"><span class="comment">        {"user_name" : "xxxxx"}</span></span><br><span class="line"><span class="comment">    ]</span></span><br><span class="line"><span class="comment"> }</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">dip_pub_user_load_star_user_list</span><span class="params">(dip_fe_usr_sdk_ctx ctx, <span class="keyword">char</span> *args_json,</span></span></span><br><span class="line"><span class="params"><span class="function">                                             dip_fe_usr_sdk_json_callback callback)</span></span>;</span><br></pre></td></tr></tbody></table></figure><h3 id="删用户"><a href="#删用户" class="headerlink" title="删用户"></a>删用户</h3><p><code>com/danale/edge/usersdk/operation/StarUserDeleteOp.kt</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.danale.edge.usersdk.operation</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.danale.edge.foundation.log.Logger</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.usersdk.jni.BaseJsonOperation</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.usersdk.jni.BaseResponse</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.usersdk.jni.UserSdkWrapper</span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson</span><br><span class="line"><span class="keyword">import</span> com.google.gson.annotations.SerializedName</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StarUserDeleteOp</span></span>(<span class="keyword">val</span> param: Param, logger: Logger, gson: Gson) :</span><br><span class="line">    BaseJsonOperation&lt;BaseResponse&gt;(logger, gson) {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">unmarshallSerializedResponse</span><span class="params">(jsonOutput: <span class="type">String</span>?)</span></span>: BaseResponse {</span><br><span class="line">        <span class="keyword">return</span> BaseResponse()</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">performOperation</span><span class="params">(context: <span class="type">CallbackContext</span>)</span></span> {</span><br><span class="line">        UserSdkWrapper.nativeDeleteStarUserList(context, gson.toJson(param))</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Param</span></span>(</span><br><span class="line">        <span class="meta">@SerializedName(<span class="meta-string">"star_user_list"</span>)</span> <span class="keyword">val</span> starUserList: List&lt;StarUserListInfo&gt;</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">StarUserListInfo</span></span>(</span><br><span class="line">        <span class="meta">@SerializedName(<span class="meta-string">"device_id"</span>)</span> <span class="keyword">val</span> deviceId: String? = <span class="literal">null</span>,</span><br><span class="line">        <span class="meta">@SerializedName(<span class="meta-string">"user_name"</span>)</span> <span class="keyword">val</span> userName: String? = <span class="literal">null</span></span><br><span class="line">    ) {</span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">toString</span><span class="params">()</span></span>: String {</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"StarUserStoreOp(deviceId=<span class="variable">$deviceId</span>, name=<span class="variable">$userName</span>)"</span></span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">external</span> <span class="function"><span class="keyword">fun</span> <span class="title">nativeDeleteStarUserList</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    context: <span class="type">NativeResponseCallback</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    paramJsonString: <span class="type">String</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">"C"</span></span><br><span class="line"><span class="function">JNIEXPORT <span class="keyword">void</span> JNICALL</span></span><br><span class="line"><span class="function"><span class="title">Java_com_danale_edge_usersdk_jni_UserSdkWrapper_nativeDeleteStarUserList</span><span class="params">(JNIEnv *env, jobject thiz,</span></span></span><br><span class="line"><span class="params"><span class="function">                                                                         jobject context,</span></span></span><br><span class="line"><span class="params"><span class="function">                                                                         jstring param_json_string)</span> </span>{</span><br><span class="line">    jboolean isCopy = JNI_TRUE;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *param_json_string_chars = env-&gt;<span class="built_in">GetStringUTFChars</span>(param_json_string,</span><br><span class="line">                                                                 &amp;isCopy);</span><br><span class="line">    jobject ctx_ref = env-&gt;<span class="built_in">NewGlobalRef</span>(context);</span><br><span class="line">    <span class="built_in">APP_LOG_I</span>(<span class="string">"nativeDeleteStarUserList, ref=%p"</span>, ctx_ref);</span><br><span class="line">    <span class="built_in">dip_pub_user_delete_star_users</span>(ctx_ref,</span><br><span class="line">                                   <span class="keyword">const_cast</span>&lt;<span class="keyword">char</span> *&gt;(param_json_string_chars),</span><br><span class="line">                                   app_dip_fe_usr_sdk_general_json_callback);</span><br><span class="line">    env-&gt;<span class="built_in">ReleaseStringUTFChars</span>(param_json_string, param_json_string_chars);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @brief 批量删除指定星标用户集合</span></span><br><span class="line"><span class="comment"> * @param [in]args_json.device_id                 设备id</span></span><br><span class="line"><span class="comment"> * @param [in]args_json.star_user_list           需要删除的星标用户列表</span></span><br><span class="line"><span class="comment"> * @param [in]args_json.star_user_list.user_name 星标用户名</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> example:</span></span><br><span class="line"><span class="comment"> 请求参数示例</span></span><br><span class="line"><span class="comment"> {</span></span><br><span class="line"><span class="comment">"star_user_list":[{</span></span><br><span class="line"><span class="comment">"device_id": "xxxxxxxxxxxxxx",</span></span><br><span class="line"><span class="comment">"user_name": "xxxxxxxxxxxxxx",</span></span><br><span class="line"><span class="comment">}]</span></span><br><span class="line"><span class="comment"> }</span></span><br><span class="line"><span class="comment"> 删除成功返回0，失败返回相应错误码</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">dip_pub_user_delete_star_users</span><span class="params">(dip_fe_usr_sdk_ctx ctx, <span class="keyword">char</span> *args_json,</span></span></span><br><span class="line"><span class="params"><span class="function">                                           dip_fe_usr_sdk_json_callback callback)</span></span>;</span><br></pre></td></tr></tbody></table></figure><h2 id="定义接口sdk"><a href="#定义接口sdk" class="headerlink" title="定义接口sdk"></a>定义接口sdk</h2><p>通过sdk绑定到Op上</p><p><code>com/danale/edge/usersdk/usecase/UserSdkUseCase.kt</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取星标好友列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getStarUserList</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    id: <span class="type">String</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>: Single&lt;StarUserLoadOp.Response&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加星标好友</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">storeStarUser</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    deviceId: <span class="type">String</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    userName: <span class="type">String</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>: Completable</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除星标好友</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">deleteStarUser</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    deviceId: <span class="type">String</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    userName: <span class="type">String</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>: Completable</span><br></pre></td></tr></tbody></table></figure><p><code>com/danale/edge/usersdk/usecase/UserSdkUseCaseImpl.kt</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getStarUserList</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    id: <span class="type">String</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>: Single&lt;StarUserLoadOp.Response&gt; {</span><br><span class="line">    <span class="keyword">return</span> StarUserLoadOp(StarUserLoadOp.Param(id), logger, gsonInst)</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">storeStarUser</span><span class="params">(deviceId: <span class="type">String</span>, userName: <span class="type">String</span>)</span></span>: Completable {</span><br><span class="line">    <span class="keyword">return</span> StarUserStoreOp(</span><br><span class="line">        StarUserStoreOp.Param(</span><br><span class="line">            listOf(</span><br><span class="line">                StarUserStoreOp.StarUserListInfo(</span><br><span class="line">                    deviceId,</span><br><span class="line">                    userName</span><br><span class="line">                )</span><br><span class="line">            )</span><br><span class="line">        ), logger, gsonInst</span><br><span class="line">    ).flatMapCompletable {</span><br><span class="line">        Completable.complete()</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">deleteStarUser</span><span class="params">(deviceId: <span class="type">String</span>, userName: <span class="type">String</span>)</span></span>: Completable {</span><br><span class="line">    <span class="keyword">return</span> StarUserDeleteOp(</span><br><span class="line">        StarUserDeleteOp.Param(</span><br><span class="line">            listOf(</span><br><span class="line">                StarUserDeleteOp.StarUserListInfo(</span><br><span class="line">                    deviceId,</span><br><span class="line">                    userName</span><br><span class="line">                )</span><br><span class="line">            )</span><br><span class="line">        ), logger, gsonInst</span><br><span class="line">    ).flatMapCompletable {</span><br><span class="line">        Completable.complete()</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="业务逻辑实现"><a href="#业务逻辑实现" class="headerlink" title="业务逻辑实现"></a>业务逻辑实现</h2><h3 id="Fragment"><a href="#Fragment" class="headerlink" title="Fragment"></a>Fragment</h3><p>定义用于展示用户列表的Fragment</p><p><code>com/danale/edge/ui/devicecontrol/common/StarUserFragment.kt</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.danale.edge.ui.devicecontrol.common</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater</span><br><span class="line"><span class="keyword">import</span> android.view.View</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup</span><br><span class="line"><span class="keyword">import</span> androidx.databinding.DataBindingUtil</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.ViewModelProvider</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.<span class="keyword">get</span></span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.LinearLayoutManager</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.R</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.base.BaseFragment</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.databinding.FragmentStarUserBinding</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StarUserFragment</span> : <span class="type">BaseFragment</span></span>() {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> binding: FragmentStarUserBinding</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> viewModel: StarUserViewModel</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateView</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">        inflater: <span class="type">LayoutInflater</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">        container: <span class="type">ViewGroup</span>?,</span></span></span><br><span class="line"><span class="params"><span class="function">        savedInstanceState: <span class="type">Bundle</span>?</span></span></span><br><span class="line"><span class="params"><span class="function">    )</span></span>: View {</span><br><span class="line">        binding = DataBindingUtil.inflate(inflater, R.layout.fragment_star_user, container, <span class="literal">false</span>)</span><br><span class="line">        binding.lifecycleOwner = viewLifecycleOwner</span><br><span class="line"></span><br><span class="line">        binding.componentTitleBar.apply {</span><br><span class="line">            leftIconRes = R.mipmap.ic_back_black</span><br><span class="line">            title = getString(R.string.text_star_user)</span><br><span class="line">            responder = <span class="keyword">this</span><span class="symbol">@StarUserFragment</span></span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        binding.recyclerView.apply {</span><br><span class="line">            layoutManager =</span><br><span class="line">                LinearLayoutManager(requireContext(), LinearLayoutManager.VERTICAL, <span class="literal">false</span>)</span><br><span class="line">            itemAnimator?.changeDuration = <span class="number">0L</span> <span class="comment">// 关闭变化动画防止刷新内容时闪烁</span></span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        viewModel = ViewModelProvider(requireActivity()).<span class="keyword">get</span>()</span><br><span class="line">        binding.viewModel = <span class="keyword">this</span>.viewModel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> binding.root</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onResume</span><span class="params">()</span></span> {</span><br><span class="line">        <span class="keyword">super</span>.onResume()</span><br><span class="line">        setStatusBarDarkText(<span class="literal">true</span>)</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>定义对应的Fragment绑定</p><p><code>layout/fragment_star_user.xml</code></p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">layout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">"viewModel"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">"com.danale.edge.ui.devicecontrol.common.StarUserViewModel"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@color/app_std_background_gray"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">com.danale.edge.ui.common.view.TopSafeAreaGuideLine</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/safe_area_top_guide"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintGuide_begin</span>=<span class="string">"24dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">tools:ignore</span>=<span class="string">"MissingConstraints"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/component_title_bar"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">layout</span>=<span class="string">"@layout/component_title_bar"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">"@id/safe_area_top_guide"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">androidx.recyclerview.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/recycler_view"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:adapter</span>=<span class="string">"@{viewModel.starUserAdapter}"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:clipToPadding</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:overScrollMode</span>=<span class="string">"never"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:paddingBottom</span>=<span class="string">"24dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">"@id/component_title_bar"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="ViewModel"><a href="#ViewModel" class="headerlink" title="ViewModel"></a>ViewModel</h3><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.danale.edge.ui.devicecontrol.common</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Application</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.viewModelScope</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.base.BaseViewModel</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.foundation.privacy.Fuzzy</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.ui.common.callback.RecyclerItemOnClick</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.ui.common.groupie.StarUserItem</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.ui.common.recycler.RecyclerListViewHolder</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.usersdk.operation.StarUserLoadOp</span><br><span class="line"><span class="keyword">import</span> com.xwray.groupie.GroupieAdapter</span><br><span class="line"><span class="keyword">import</span> com.xwray.groupie.Section</span><br><span class="line"><span class="keyword">import</span> dagger.hilt.android.lifecycle.HiltViewModel</span><br><span class="line"><span class="keyword">import</span> kotlinx.coroutines.Dispatchers</span><br><span class="line"><span class="keyword">import</span> kotlinx.coroutines.launch</span><br><span class="line"><span class="keyword">import</span> kotlinx.coroutines.rx3.await</span><br><span class="line"><span class="keyword">import</span> kotlinx.coroutines.rx3.awaitLast</span><br><span class="line"><span class="keyword">import</span> kotlinx.coroutines.rx3.awaitSingleOrNull</span><br><span class="line"><span class="keyword">import</span> kotlinx.coroutines.withContext</span><br><span class="line"><span class="keyword">import</span> javax.inject.Inject</span><br><span class="line"></span><br><span class="line"><span class="meta">@HiltViewModel</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StarUserViewModel</span> <span class="meta">@Inject</span> <span class="keyword">constructor</span></span>(application: Application) :</span><br><span class="line">    BaseViewModel(application), RecyclerItemOnClick&lt;RecyclerListViewHolder&gt; {</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用于加载页面的Adapter</span></span><br><span class="line">    <span class="keyword">val</span> starUserAdapter = GroupieAdapter()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取的星标列表</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> starUserList: StarUserLoadOp.Response? = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用一个map存储获得的星标列表中的用户id</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> starUserMap: MutableMap&lt;String, <span class="built_in">Boolean</span>&gt; = mutableMapOf()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 最终列表中的数据格式</span></span><br><span class="line">    <span class="keyword">data</span> <span class="class"><span class="keyword">class</span> <span class="title">StarFriend</span></span>(</span><br><span class="line">        <span class="keyword">var</span> name: String?,</span><br><span class="line">        <span class="keyword">var</span> url: String?,</span><br><span class="line">        <span class="keyword">var</span> isStar: <span class="built_in">Boolean</span>,</span><br><span class="line">        <span class="keyword">var</span> nameId: String?</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 最终求交集的星标列表</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> starFriendList = ArrayList&lt;StarFriend&gt;()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设备id</span></span><br><span class="line">    <span class="keyword">var</span> deviceId32: String? = <span class="literal">null</span></span><br><span class="line">        <span class="keyword">set</span>(value) {</span><br><span class="line">            logger.d(TAG, <span class="string">"setDeviceId=<span class="subst">${Fuzzy.interval(value)}</span>"</span>)</span><br><span class="line">            field = value</span><br><span class="line"></span><br><span class="line">            viewModelScope.launch {</span><br><span class="line">                <span class="comment">// 获取的好友列表</span></span><br><span class="line">                loadPlatformContactList()</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取星标好友列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">suspend</span> <span class="function"><span class="keyword">fun</span> <span class="title">loadStarFriendList</span><span class="params">()</span></span> {</span><br><span class="line">        starUserList = withContext(Dispatchers.IO) {</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                deviceId32?.let {</span><br><span class="line">                    sdk.getStarUserList(it).await()</span><br><span class="line">                }</span><br><span class="line">            } <span class="keyword">catch</span> (e: Exception) {</span><br><span class="line">                toastError(e)</span><br><span class="line">                <span class="literal">null</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        logger.d(TAG, <span class="string">"loadStarFriendList, starUserList=<span class="variable">$starUserList</span>"</span>)</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加载好友列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">suspend</span> <span class="function"><span class="keyword">fun</span> <span class="title">loadPlatformContactList</span><span class="params">(refresh: <span class="type">Boolean</span> = <span class="literal">false</span>)</span></span> {</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="comment">// 获取的星标列表</span></span><br><span class="line">            loadStarFriendList()</span><br><span class="line">            <span class="keyword">val</span> nonNullList = starUserList?.deviceIdList ?: emptyList()</span><br><span class="line">            <span class="keyword">if</span> (nonNullList.isNotEmpty()) nonNullList.forEach {</span><br><span class="line">                starUserMap[it.userName] = <span class="literal">true</span></span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取的好友列表</span></span><br><span class="line">            withContext(Dispatchers.IO) {</span><br><span class="line">                sdk.getFriendsList(forceReFetch = refresh).awaitLast()?.map { it -&gt;</span><br><span class="line">                    <span class="comment">// 用户名</span></span><br><span class="line">                    <span class="keyword">val</span> displayName = <span class="keyword">if</span> (it.remarkName?.isNotEmpty() == <span class="literal">true</span>) {</span><br><span class="line">                        it.remarkName</span><br><span class="line">                    } <span class="keyword">else</span> {</span><br><span class="line">                        it.likeName</span><br><span class="line">                    }</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 用户头像</span></span><br><span class="line">                    <span class="keyword">val</span> url = withContext(Dispatchers.IO) {</span><br><span class="line">                        it.userName?.let { it1 -&gt;</span><br><span class="line">                            sdk.getPhotoUrlByPlatformUserName(it1).awaitSingleOrNull()</span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 添加数据</span></span><br><span class="line">                    starFriendList.add(</span><br><span class="line">                        StarFriend(</span><br><span class="line">                            displayName,</span><br><span class="line">                            url,</span><br><span class="line">                            starUserMap[it.userName] !== <span class="literal">null</span>,</span><br><span class="line">                            it.userName</span><br><span class="line">                        )</span><br><span class="line">                    )</span><br><span class="line"></span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            logger.i(TAG, <span class="string">"loadPlatformContactList, starFriendList= <span class="variable">$starFriendList</span>"</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 构建列表</span></span><br><span class="line">            buildSettingItems()</span><br><span class="line"></span><br><span class="line">        } <span class="keyword">catch</span> (e: Exception) {</span><br><span class="line">            toastError(e)</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构建列表</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">buildSettingItems</span><span class="params">()</span></span> {</span><br><span class="line">        starUserAdapter.apply {</span><br><span class="line">            add(Section().apply {</span><br><span class="line">                <span class="keyword">for</span> ((i, item) <span class="keyword">in</span> starFriendList.withIndex()) {</span><br><span class="line">                    item.url?.let { url -&gt;</span><br><span class="line">                        item.name?.let { name -&gt;</span><br><span class="line">                            StarUserItem(</span><br><span class="line">                                list = starFriendList,  <span class="comment">// 传入最新的列表获得isStar属性</span></span><br><span class="line">                                avatar = url,  <span class="comment">// 头像链接</span></span><br><span class="line">                                name = name,  <span class="comment">// 用户名</span></span><br><span class="line">                                clickListener = { _ -&gt;</span><br><span class="line">                                    <span class="keyword">if</span> (!item.isStar) {</span><br><span class="line">                                        <span class="comment">// 存</span></span><br><span class="line">                                        viewModelScope.launch {</span><br><span class="line">                                            withContext(Dispatchers.IO) {</span><br><span class="line">                                                <span class="keyword">try</span> {</span><br><span class="line">                                                    deviceId32?.let { did -&gt;</span><br><span class="line">                                                        item.nameId?.let { nameId -&gt;</span><br><span class="line">                                                            sdk.storeStarUser(</span><br><span class="line">                                                                did,</span><br><span class="line">                                                                nameId</span><br><span class="line">                                                            ).await()</span><br><span class="line">                                                        }</span><br><span class="line">                                                    }</span><br><span class="line">                                                    <span class="comment">// 更新列表</span></span><br><span class="line">                                                    starFriendList[i] =</span><br><span class="line">                                                        StarFriend(name, url, <span class="literal">true</span>, item.nameId)</span><br><span class="line">                                                } <span class="keyword">catch</span> (e: Exception) {</span><br><span class="line">                                                    logger.d(TAG, <span class="string">"error, <span class="variable">$e</span>"</span>)</span><br><span class="line">                                                }</span><br><span class="line"></span><br><span class="line">                                            }</span><br><span class="line">                                          <span class="comment">// 通知Adapter刷新数据</span></span><br><span class="line">                                            starUserAdapter.notifyItemChanged(i, <span class="number">0</span>)</span><br><span class="line">                                        } </span><br><span class="line">                                    } <span class="keyword">else</span> {</span><br><span class="line">                                        <span class="comment">// 删</span></span><br><span class="line">                                        viewModelScope.launch {</span><br><span class="line">                                            withContext(Dispatchers.IO) {</span><br><span class="line">                                                <span class="keyword">try</span> {</span><br><span class="line">                                                    deviceId32?.let { did -&gt;</span><br><span class="line">                                                        item.nameId?.let { nameId -&gt;</span><br><span class="line">                                                            sdk.deleteStarUser(</span><br><span class="line">                                                                did,</span><br><span class="line">                                                                nameId</span><br><span class="line">                                                            ).await()</span><br><span class="line">                                                        }</span><br><span class="line">                                                    }</span><br><span class="line">                                                    starFriendList[i] =</span><br><span class="line">                                                        StarFriend(name, url, <span class="literal">false</span>, item.nameId)</span><br><span class="line">                                                } <span class="keyword">catch</span> (e: Exception) {</span><br><span class="line">                                                    logger.d(TAG, <span class="string">"error, <span class="variable">$e</span>"</span>)</span><br><span class="line">                                                }</span><br><span class="line"></span><br><span class="line">                                            }</span><br><span class="line">                                            starUserAdapter.notifyItemChanged(i, <span class="number">0</span>)</span><br><span class="line">                                        }</span><br><span class="line">                                    }</span><br><span class="line">                                }</span><br><span class="line">                            )</span><br><span class="line">                        }</span><br><span class="line">                    }?.let { StarUserItem -&gt;</span><br><span class="line">                        add(</span><br><span class="line">                            StarUserItem</span><br><span class="line">                        )</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            })</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onClickItem</span><span class="params">(viewHolder: <span class="type">RecyclerListViewHolder</span>)</span></span> {</span><br><span class="line">        logger.d(TAG, <span class="string">"onClickItem, viewHolder=<span class="variable">$viewHolder</span>"</span>)</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="StarUserItem"><a href="#StarUserItem" class="headerlink" title="StarUserItem"></a>StarUserItem</h3><p>定义一个用于展示用户的组件</p><p><code>com/danale/edge/ui/common/groupie/StarUserItem.kt</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.danale.edge.ui.common.groupie</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.<span class="keyword">annotation</span>.SuppressLint</span><br><span class="line"><span class="keyword">import</span> android.view.View</span><br><span class="line"><span class="keyword">import</span> androidx.databinding.DataBindingUtil</span><br><span class="line"><span class="keyword">import</span> coil.load</span><br><span class="line"><span class="keyword">import</span> coil.transform.RoundedCornersTransformation</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.R</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.databinding.RecyclerGroupieItemStarUserBinding</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.ui.devicecontrol.common.StarUserViewModel</span><br><span class="line"><span class="keyword">import</span> com.xwray.groupie.viewbinding.BindableItem</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StarUserItem</span></span>(</span><br><span class="line">    <span class="keyword">var</span> list: ArrayList&lt;StarUserViewModel.StarFriend&gt; = ArrayList(),</span><br><span class="line">    <span class="keyword">var</span> avatar: String,</span><br><span class="line">    <span class="keyword">var</span> name: String = <span class="string">""</span>,</span><br><span class="line">    <span class="keyword">val</span> clickListener: ((View) -&gt; <span class="built_in">Unit</span>)? = <span class="literal">null</span></span><br><span class="line">) : BindableItem&lt;RecyclerGroupieItemStarUserBinding&gt;() {</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressLint(<span class="meta-string">"ClickableViewAccessibility"</span>)</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">bind</span><span class="params">(viewBinding: <span class="type">RecyclerGroupieItemStarUserBinding</span>, position: <span class="type">Int</span>)</span></span> {</span><br><span class="line">        viewBinding.let {</span><br><span class="line">            it.ivUserAvatar.load(<span class="keyword">this</span>.avatar) {</span><br><span class="line">                placeholder(R.mipmap.clipart_default_avatar_round)</span><br><span class="line">                error(R.mipmap.clipart_default_avatar_round)</span><br><span class="line">                transformations(RoundedCornersTransformation(<span class="number">36f</span>))</span><br><span class="line">            }</span><br><span class="line">            it.name = <span class="keyword">this</span>.name</span><br><span class="line">            it.switchAccessory.isSelected = <span class="keyword">this</span>.list[position].isStar</span><br><span class="line">            it.switchAccessory.setOnClickListener(clickListener)</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getLayout</span><span class="params">()</span></span>: <span class="built_in">Int</span> {</span><br><span class="line">        <span class="keyword">return</span> R.layout.recycler_groupie_item_star_user</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">initializeViewBinding</span><span class="params">(view: <span class="type">View</span>)</span></span>: RecyclerGroupieItemStarUserBinding {</span><br><span class="line">        <span class="keyword">return</span> DataBindingUtil.bind(view) ?: <span class="keyword">throw</span> IllegalStateException(<span class="string">"unable to bind view"</span>)</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>每次调用会进入<code>bind</code>方法，所以传入一个List列表，根据列表中的<code>isStar</code>属性判断是否是星标用户</li><li>头像不能直接显示，要通过<code>load</code>方法加载图片<ul><li><code>placeholder</code>：默认图片</li><li><code>error</code>： 出现错误时的图片</li><li><code>transformations</code>： 图片相关操作，这里定义了图片圆角</li></ul></li><li><code>getLayout</code>用于绑定到页面布局文件</li></ul><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">layout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">"name"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">"String"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">"isStar"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">"Boolean"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">import</span> <span class="attr">type</span>=<span class="string">"android.view.View"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.coordinatorlayout.widget.CoordinatorLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:background</span>=<span class="string">"@color/black"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginHorizontal</span>=<span class="string">"16dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:minHeight</span>=<span class="string">"56dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">tools:background</span>=<span class="string">"@color/white"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">androidx.appcompat.widget.LinearLayoutCompat</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/group_title"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginVertical</span>=<span class="string">"15dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginStart</span>=<span class="string">"16dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_constraintEnd_toStartOf</span>=<span class="string">"@id/switch_accessory"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">androidx.appcompat.widget.AppCompatImageView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">"@+id/iv_user_avatar"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">"45dp"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">"45dp"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:focusable</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">androidx.appcompat.widget.AppCompatTextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginStart</span>=<span class="string">"10dp"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:alpha</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:text</span>=<span class="string">"@{name}"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">"15sp"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">tools:text</span>=<span class="string">"Subtitle Placeholder"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">tools:visibility</span>=<span class="string">"visible"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">androidx.appcompat.widget.LinearLayoutCompat</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">androidx.appcompat.widget.AppCompatImageButton</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/switch_accessory"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"24dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"24dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginStart</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginEnd</span>=<span class="string">"16dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:background</span>=<span class="string">"@drawable/ic_star_user"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:clickable</span>=<span class="string">"@{true}"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_constraintStart_toEndOf</span>=<span class="string">"@id/group_title"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"0.5dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginHorizontal</span>=<span class="string">"16dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:background</span>=<span class="string">"@color/app_std_separator_line"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">androidx.coordinatorlayout.widget.CoordinatorLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><iframe height="498" width="510" src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/work/%E6%98%9F%E6%A0%87%E7%94%A8%E6%88%B7/%E6%98%9F%E6%A0%87%E7%94%A8%E6%88%B7.mp4"></iframe>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;h2 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h2&gt;&lt;p&gt;实现星</summary>
      
    
    
    
    <category term="有在认真上班" scheme="https://kenken-xr.github.io/blog/categories/%E6%9C%89%E5%9C%A8%E8%AE%A4%E7%9C%9F%E4%B8%8A%E7%8F%AD/"/>
    
    
    <category term="写了什么新功能" scheme="https://kenken-xr.github.io/blog/tags/%E5%86%99%E4%BA%86%E4%BB%80%E4%B9%88%E6%96%B0%E5%8A%9F%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>视频导入和导出</title>
    <link href="https://kenken-xr.github.io/blog/2023/03/24/%E8%A7%86%E9%A2%91%E7%9A%84%E5%AF%BC%E5%85%A5%E5%92%8C%E5%AF%BC%E5%87%BA/"/>
    <id>https://kenken-xr.github.io/blog/2023/03/24/%E8%A7%86%E9%A2%91%E7%9A%84%E5%AF%BC%E5%85%A5%E5%92%8C%E5%AF%BC%E5%87%BA/</id>
    <published>2023-03-24T02:58:47.000Z</published>
    <updated>2023-09-14T02:06:33.986Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>由于在视频的算法计算和同步时是一次性计算完成，导致回顾时不能重新定位到需求位置(有人经过、有声音)，需要将视频可以导出，同时可以导入到把视频重新放到pipeline中可复现</p><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><ol><li>导出文件 <ol><li>有一个用户操作的入口 [分享菜单]  </li><li>导出后是一个mp4完整文件/ 原始数据格式(0000001是一帧的开头，根据标识保存数据)</li></ol></li><li>读取文件读成pipeline的输入</li><li>文件转换成一帧</li></ol><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><h3 id="pipelineFactory"><a href="#pipelineFactory" class="headerlink" title="pipelineFactory"></a><code>pipelineFactory</code></h3><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">object</span> DemoPipelineFactory {</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">createVideoPipeline</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">        sink: <span class="type">EventSink</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">        ai: <span class="type">IntelligenceRepository</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">        logger: <span class="type">Logger</span></span></span></span><br><span class="line"><span class="params"><span class="function">    )</span></span>: LabelPipeline&lt;Bitmap&gt; {</span><br><span class="line">        <span class="keyword">val</span> facePipelineBuilder = LabelPipeline.Builder&lt;List&lt;MarkedFace&gt;&gt;(logger)</span><br><span class="line">        <span class="keyword">val</span> facePipeline = facePipelineBuilder</span><br><span class="line">            .sinkTo(sink)</span><br><span class="line">            .addOp(HMSFaceVerifier(ai, logger))</span><br><span class="line">            .build()</span><br><span class="line">        <span class="keyword">val</span> facePipeSplitter = SplitExtractor(facePipeline, GoogleMLKitFaceDetector(logger))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">val</span> videoPipeBuilder = LabelPipeline.Builder&lt;Bitmap&gt;(logger)</span><br><span class="line">        <span class="keyword">return</span> videoPipeBuilder</span><br><span class="line">            .sinkTo(sink)</span><br><span class="line">            .addOp(facePipeSplitter)</span><br><span class="line"><span class="comment">// .addOp(HMSSceneDetector()) // TODO 接入新的标签回调</span></span><br><span class="line">            .addOp(TFLiteObjectDetector(ModelName.SSD_MOBILE_NET_V1, ai, logger))</span><br><span class="line">            .build()</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">createAudioPcmPipeline</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">        eventSink: <span class="type">EventSink</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">        intelligenceRepository: <span class="type">IntelligenceRepository</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">        logger: <span class="type">Logger</span></span></span></span><br><span class="line"><span class="params"><span class="function">    )</span></span>: LabelPipeline&lt;ShortArray&gt; {</span><br><span class="line">        <span class="keyword">val</span> audioPipeBuilder = LabelPipeline.Builder&lt;ShortArray&gt;(logger)</span><br><span class="line">        <span class="keyword">return</span> audioPipeBuilder</span><br><span class="line">            .sinkTo(eventSink)</span><br><span class="line">            .addOp(YAMNetAudioClassifier(intelligenceRepository, logger))</span><br><span class="line">            .build()</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="LabelPipeLine"><a href="#LabelPipeLine" class="headerlink" title="LabelPipeLine"></a><code>LabelPipeLine</code></h3><p><code>com/danale/edge/intelligence/pipe/LabelPipeline.kt</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">LabelPipeline</span>&lt;<span class="type">T : Any</span>&gt;</span>(</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> extractors: List&lt;LabelExtractor&lt;T&gt;&gt;,</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> logger: Logger,</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> providedSink: EventSink?</span><br><span class="line">) : Closeable {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span> {</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">val</span> TAG = <span class="string">"LabelPipeline"</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">init</span> {</span><br><span class="line">        extractors.forEach {</span><br><span class="line">            <span class="keyword">if</span> (providedSink != <span class="literal">null</span>) {</span><br><span class="line">                logger.i(TAG, <span class="string">"init, sink <span class="subst">${it.hashCode()}</span> to <span class="subst">${providedSink.hashCode()}</span>"</span>)</span><br><span class="line">                it.bindEventSink(providedSink)</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">process</span><span class="params">(item: <span class="type">T</span>, metaData: <span class="type">LabeledObject</span>.<span class="type">MetaData</span>)</span></span>: Single&lt;LabeledObject&lt;T&gt;&gt; {</span><br><span class="line">        <span class="keyword">var</span> single = Single.just(LabeledObject(ConcurrentHashMap(), item, metaData = metaData))</span><br><span class="line">        <span class="keyword">for</span> (op <span class="keyword">in</span> extractors) {</span><br><span class="line">            single = single.flatMap { op.extractLabel(it).toSingleDefault(it) }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> single</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Builder</span>&lt;<span class="type">T : Any</span>&gt;</span>(<span class="keyword">val</span> logger: Logger) {</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">val</span> list = LinkedList&lt;LabelExtractor&lt;T&gt;&gt;()</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">var</span> sink: EventSink? = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">sinkTo</span><span class="params">(sink: <span class="type">EventSink</span>)</span></span>: Builder&lt;T&gt; {</span><br><span class="line">            <span class="keyword">this</span>.sink = sink</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span></span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">addOp</span><span class="params">(extractor: <span class="type">LabelExtractor</span>&lt;<span class="type">T</span>&gt;)</span></span>: Builder&lt;T&gt; {</span><br><span class="line">            list.addLast(extractor)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span></span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">build</span><span class="params">()</span></span>: LabelPipeline&lt;T&gt; {</span><br><span class="line">            <span class="keyword">return</span> LabelPipeline(list, logger, sink)</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">close</span><span class="params">()</span></span> {</span><br><span class="line">        <span class="keyword">for</span> (op <span class="keyword">in</span> extractors) {</span><br><span class="line">            op.flushSession(providedSink)</span><br><span class="line">            op.close()</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">LabelExtractor</span>&lt;<span class="type">T : Any</span>&gt; : <span class="type">Closeable</span>, <span class="type">EventSource {</span></span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Extractor执行计算</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">extractLabel</span><span class="params">(item: <span class="type">LabeledObject</span>&lt;<span class="type">T</span>&gt;)</span></span>: Completable</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 告知计算已结束，Extractor应将尚未上报的事件进行上报</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">flushSession</span><span class="params">(sink: <span class="type">EventSink</span>?)</span></span> {}</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">labelKey</span><span class="params">(sourceType: <span class="type">String</span>, category: <span class="type">String</span>, vendor: <span class="type">String</span>, vendorKey: <span class="type">String</span>)</span></span>: String {</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"<span class="variable">$sourceType</span>:<span class="variable">$category</span>:<span class="variable">$vendor</span>:<span class="variable">$vendorKey</span>"</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="视频导出"><a href="#视频导出" class="headerlink" title="视频导出"></a>视频导出</h2><p>通过ByteBuffer导出成MP4格式视频</p><p><code>com/danale/edge/ui/flow/VideoFlowViewModel.kt</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">attachPlayer</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">        surface: <span class="type">Surface</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">        clipDri: <span class="type">String</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">        clipDataSource: <span class="type">ByteBufferVideoSource</span>? = <span class="literal">null</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">        positionResponder: <span class="type">ClipPositionResponder</span>? = <span class="literal">null</span></span></span></span><br><span class="line"><span class="params"><span class="function">    )</span></span> {</span><br><span class="line">        logger.d(</span><br><span class="line">            TAG,</span><br><span class="line">            <span class="string">"attachPlayer, clipDri=<span class="subst">${Fuzzy.interval(clipDri)}</span>, data=<span class="subst">${clipDataSource?.hashCode()}</span>"</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        positionResponder?.let {</span><br><span class="line">            <span class="comment">// 弱引用保存播放进度的响应体</span></span><br><span class="line">            weakPositionResponder = WeakReference(it)</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        loadPlayerExecutor.submit {</span><br><span class="line">            detachPlayerSync()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (player == <span class="literal">null</span>) {</span><br><span class="line">                logger.i(TAG, <span class="string">"attachPlayer, instantiate"</span>)</span><br><span class="line">                player = IjkPlayerProvider.provideIjkPlayerDefaultConfig()</span><br><span class="line">            }</span><br><span class="line">            player?.apply {</span><br><span class="line">                <span class="keyword">try</span> {</span><br><span class="line">                    setSurface(surface)</span><br><span class="line">                    setOnPreparedListener {</span><br><span class="line">                      <span class="comment">// 开始播放视频</span></span><br><span class="line">                    }</span><br><span class="line">                    setOnErrorListener { mediaPlayer, errArg1, errArg2 -&gt;</span><br><span class="line">                        <span class="comment">// 错误被处理</span></span><br><span class="line">                    }</span><br><span class="line">                    setOnCompletionListener {</span><br><span class="line">                        <span class="comment">// 视频播放完毕</span></span><br><span class="line">                    }</span><br><span class="line">                } <span class="keyword">catch</span> (e: Exception) {</span><br><span class="line">                    logger.e(TAG, <span class="string">"attachPlayer, null mp"</span>, e)</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (clipDataSource != <span class="literal">null</span>) {</span><br><span class="line">                logger.i(TAG, <span class="string">"attachPlayer, use exist data"</span>)</span><br><span class="line">                <span class="keyword">try</span> {</span><br><span class="line">                    <span class="comment">// 播放已有视频</span></span><br><span class="line">                } <span class="keyword">catch</span> (e: Exception) {}</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                logger.i(TAG, <span class="string">"attachPlayer, load clip <span class="subst">${Fuzzy.interval(clipDri)}</span>"</span>)</span><br><span class="line">                <span class="keyword">val</span> latch = CountDownLatch(<span class="number">1</span>)</span><br><span class="line">                dataSubscription = sdk.getBlobWithDri(clipDri)</span><br><span class="line">                    .subscribeOn(Schedulers.io())</span><br><span class="line">                    .subscribeBy(</span><br><span class="line">                        onSuccess = {</span><br><span class="line">                            logger.i(TAG, <span class="string">"attachPlayer, blob ok"</span>)</span><br><span class="line">                            <span class="keyword">try</span> {</span><br><span class="line">                                <span class="keyword">val</span> <span class="keyword">data</span> = ByteBufferVideoSource()</span><br><span class="line">                                <span class="keyword">data</span>.load(it)</span><br><span class="line">                                preparePlayer(<span class="keyword">data</span>)</span><br><span class="line"></span><br><span class="line">                                <span class="comment">/***保存bytebuffer****/</span></span><br><span class="line">                               saveBytebuffer(it, clipDri.split(<span class="string">"clip_"</span>)[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">                            } <span class="keyword">catch</span> (e: Exception) {}</span><br><span class="line">                            latch.countDown()</span><br><span class="line">                        },</span><br><span class="line">                        onError = {}</span><br><span class="line">                    )</span><br><span class="line">                latch.await()</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><p>其中<code>data.load(it)</code>是获取视频来源，<code>it</code>是ByteBuffer格式，通过保<code>it</code>为MP4格式可以实现视频的导出，不同的视频通过<code>clipDri</code>加以区分</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取存储路径</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">getPath</span><span class="params">()</span></span>: String {</span><br><span class="line">    <span class="keyword">val</span> result = (Environment.getExternalStorageDirectory().toString()</span><br><span class="line">            + File.separator + Environment.DIRECTORY_DCIM</span><br><span class="line">            + File.separator + <span class="string">"Camera"</span> + File.separator)</span><br><span class="line">    <span class="keyword">val</span> file = File(result)</span><br><span class="line">    <span class="keyword">if</span> (!file.exists()) {</span><br><span class="line">        file.mkdir()</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> result + File.separator</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 保存ByteBuffer</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">saveBytebuffer</span><span class="params">(byteBuffer: <span class="type">ByteBuffer</span>, fileName: <span class="type">String</span>)</span></span>{</span><br><span class="line">    logger.d(TAG, <span class="string">"attachPlayer, save bytebuffer"</span>)</span><br><span class="line">    <span class="keyword">val</span> file = File(getPath()+ fileName + <span class="string">".mp4"</span>)</span><br><span class="line">    logger.d(TAG, <span class="string">"attachPlayer, file=<span class="variable">$file</span>"</span>)</span><br><span class="line">    <span class="keyword">if</span>(!file.exists()){</span><br><span class="line">        file.createNewFile();</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">val</span> os: OutputStream = FileOutputStream(file,<span class="literal">true</span>)</span><br><span class="line">    os.write(byteBuffer.array())</span><br><span class="line">    os.flush()</span><br><span class="line">    os.close()</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><code>clipDri</code>是String格式，但直接将其存为文件名会有非法字符，<code>[D*]dri:data_worm:kv:blob:grid/827f8b9cfbb780df63f56fe6e7bef03c:clip_f00b3dd5c79411edaa64d54fbc172c8c</code></p><p>通过截取拿到<code>clip_</code>后的部分组成文件名</p><h2 id="视频导入"><a href="#视频导入" class="headerlink" title="视频导入"></a>视频导入</h2><h3 id="图片导入"><a href="#图片导入" class="headerlink" title="图片导入"></a>图片导入</h3><p>通过<code>ffmpeg</code>将mp4视频文件分割成jpg图片文件</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i  test.mp4 -r 10 -f image2 %05d.jpg</span><br></pre></td></tr></tbody></table></figure><ul><li>-i : 指定输入文件</li><li>-r : 帧数 10</li><li>-f : 指定格式化的格式为image2</li><li>image2后面跟着的是文件名</li><li>%5d：以为5位数按正序编号</li></ul><p>将图片放入到app的文件夹中，由于手机的安全性，放入其他文件夹会读不到文件<code>/sdcard/Android/data/com.alcidae.edgeapp/files</code></p><p>通过<code>context.getExternalFilesDir(null)</code>获取到文件夹路径，存入每个图片的名称</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">getPics</span><span class="params">()</span></span>: MutableList&lt;String&gt; {</span><br><span class="line">    logger.d(TAG, <span class="string">"start getPics, <span class="subst">${context.getExternalFilesDir(null)}</span>"</span>)</span><br><span class="line">    <span class="keyword">val</span> fileNames: MutableList&lt;String&gt; = mutableListOf()</span><br><span class="line">    <span class="keyword">val</span> fileTree = File(<span class="string">"<span class="subst">${context.getExternalFilesDir(null)}</span>/test"</span>).walk()</span><br><span class="line">    fileTree.maxDepth(<span class="number">1</span>) <span class="comment">//需遍历的目录层次为1，即无须检查子目录</span></span><br><span class="line">        .filter {</span><br><span class="line">            it.isFile</span><br><span class="line">        } <span class="comment">//只挑选文件，不处理文件夹</span></span><br><span class="line">        .filter {</span><br><span class="line">            it.extension <span class="keyword">in</span> listOf(<span class="string">"jpg"</span>)</span><br><span class="line">        }<span class="comment">//选择扩展名为jpg的文件</span></span><br><span class="line">        .forEach {</span><br><span class="line">            fileNames.add(it.absolutePath)</span><br><span class="line">        }<span class="comment">//循环 处理符合条件的文件</span></span><br><span class="line">    <span class="keyword">return</span> fileNames</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>通过循环读取图片，并将图片转成bitmap输入到pipeline</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SuppressLint(<span class="meta-string">"CheckResult"</span>)</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">pipelineFromPic</span><span class="params">(files: <span class="type">MutableList</span>&lt;<span class="type">String</span>&gt;)</span></span> {</span><br><span class="line">    <span class="keyword">for</span> (i <span class="keyword">in</span>  <span class="number">0</span> until files.size){</span><br><span class="line">        <span class="keyword">val</span> file = File(files[i])</span><br><span class="line"></span><br><span class="line">        <span class="comment">//readBytes读取字节数组形式的文件内容</span></span><br><span class="line">        <span class="keyword">val</span> bytes = file.readBytes()</span><br><span class="line">        <span class="comment">//decodeByteArray从字节数组解析图片</span></span><br><span class="line">        <span class="keyword">val</span> currBitmap = BitmapFactory.decodeByteArray(bytes, <span class="number">0</span>, bytes.size)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">val</span> metaData =</span><br><span class="line">            LabeledObject.MetaData(dataTimestamp = i.toLong())  <span class="comment">// 新建data 承载源数据</span></span><br><span class="line">        videoPipeline.process(currBitmap, metaData)</span><br><span class="line">            <span class="comment">// 扁平化</span></span><br><span class="line">            .flatMap {</span><br><span class="line">                <span class="keyword">val</span> elapsedNano = it.getElapsedMillis()</span><br><span class="line">                logger.d(TAG, <span class="string">"for, inferenceTime = <span class="variable">$elapsedNano</span>"</span>)</span><br><span class="line">                it.obj.recycle()  <span class="comment">// 释放与此位图关联的本机对象，并清除对像素数据的引用</span></span><br><span class="line">                <span class="keyword">return</span><span class="symbol">@flatMap</span> Single.just(it)  <span class="comment">// 转换为发出该对象的Single</span></span><br><span class="line">            }</span><br><span class="line">            .subscribeBy(</span><br><span class="line">                onSuccess = {</span><br><span class="line">                    logger.d(TAG, <span class="string">"for, onSuccess, i=<span class="variable">$i</span>, labeledObject = <span class="variable">$it</span>"</span>)</span><br><span class="line">                },</span><br><span class="line">                onError = {</span><br><span class="line">                    logger.d(TAG, <span class="string">"for, onError, i=<span class="variable">$i</span>, throwable = <span class="variable">$it</span>"</span>)</span><br><span class="line">                    close()</span><br><span class="line">                },</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    videoPipeline.close()</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> files = getPics()</span><br><span class="line"></span><br><span class="line">pipelineFromPic(files)</span><br></pre></td></tr></tbody></table></figure><h3 id="音频导入"><a href="#音频导入" class="headerlink" title="音频导入"></a>音频导入</h3><p>通过ffmpeg工具将mp4文件转成pcm文件</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i test.mp4 test.mp3</span><br><span class="line">ffmpeg -i test.mp3 -ar 48000 -ac 2 -f s16le test.pcm</span><br></pre></td></tr></tbody></table></figure><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SuppressLint(<span class="meta-string">"CheckResult"</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">videoPipeline</span><span class="params">()</span></span> {</span><br><span class="line">    <span class="keyword">val</span> file = File(<span class="string">"<span class="subst">${context.getExternalFilesDir(null)}</span>/test/test.pcm"</span>)</span><br><span class="line">    <span class="keyword">val</span> bytes = file.readBytes()</span><br><span class="line">    <span class="keyword">val</span> metaData = LabeledObject.MetaData(dataTimestamp = <span class="number">1.</span>toLong())</span><br><span class="line"></span><br><span class="line">    logger.d(TAG, <span class="string">"bytes.size= <span class="subst">${bytes.size}</span>"</span>)</span><br><span class="line">    <span class="keyword">val</span> step = <span class="number">640</span>  <span class="comment">// 每次读取的大小</span></span><br><span class="line">    <span class="keyword">val</span> num = floor((bytes.size / step).toDouble())  <span class="comment">// 循环次数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">0</span> until num.toInt()) {</span><br><span class="line">        <span class="keyword">val</span> byte = bytes.slice(i..i + step)  <span class="comment">// 截取pcm</span></span><br><span class="line">        <span class="keyword">val</span> shorts = ShortArray(byte.size / <span class="number">2</span>) {</span><br><span class="line">            (byte[it * <span class="number">2</span>].toUByte().toInt() + (byte[(it * <span class="number">2</span>) + <span class="number">1</span>].toInt() shl <span class="number">8</span>)).toShort()</span><br><span class="line">        }  <span class="comment">// 转换成shortArray</span></span><br><span class="line"></span><br><span class="line">        Maybe.fromSingle(audioPipeline.process(shorts, metaData)</span><br><span class="line">            .flatMap {</span><br><span class="line">                <span class="keyword">val</span> elapsedNano = it.getElapsedMillis()</span><br><span class="line">                logger.d(TAG, <span class="string">"audioPipe, inferenceTime = <span class="variable">$elapsedNano</span>"</span>)</span><br><span class="line">                <span class="keyword">return</span><span class="symbol">@flatMap</span> Single.just(it)</span><br><span class="line">            }).subscribeBy(</span><br><span class="line">            onSuccess = {</span><br><span class="line">                logger.d(TAG, <span class="string">"for, onSuccess, labeledObject = <span class="variable">$it</span>"</span>)</span><br><span class="line">            },</span><br><span class="line">            onError = {</span><br><span class="line">                logger.d(TAG, <span class="string">"for, onError, throwable = <span class="variable">$it</span>"</span>)</span><br><span class="line">                close()</span><br><span class="line">            },</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">    audioPipeline.close()</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;h2 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h2&gt;&lt;p&gt;由于在</summary>
      
    
    
    
    <category term="有在认真上班" scheme="https://kenken-xr.github.io/blog/categories/%E6%9C%89%E5%9C%A8%E8%AE%A4%E7%9C%9F%E4%B8%8A%E7%8F%AD/"/>
    
    
    <category term="写了什么新功能" scheme="https://kenken-xr.github.io/blog/tags/%E5%86%99%E4%BA%86%E4%BB%80%E4%B9%88%E6%96%B0%E5%8A%9F%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>设置页面</title>
    <link href="https://kenken-xr.github.io/blog/2023/03/15/%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2/"/>
    <id>https://kenken-xr.github.io/blog/2023/03/15/%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2/</id>
    <published>2023-03-15T02:02:47.000Z</published>
    <updated>2023-09-14T02:06:33.986Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>设置页面动态生成</p><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><ol><li>展示的内容完全通过配置确定</li><li>设置项的值目前有开关，数值和枚举三种情况，预留未来扩展</li><li> 设置项的描述支持标题和副标题，预留未来扩展</li><li>支持跳转二级页面</li><li>支持分组</li></ol><h2 id="预计周期"><a href="#预计周期" class="headerlink" title="预计周期"></a>预计周期</h2><p>1～2周</p><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><h2 id="实现数据获取接口"><a href="#实现数据获取接口" class="headerlink" title="实现数据获取接口"></a>实现数据获取接口</h2><h3 id="配置接口类型"><a href="#配置接口类型" class="headerlink" title="配置接口类型"></a>配置接口类型</h3><p>新建一个operation文件用来定义接口的入参和出参</p><p><code>com/danale/edge/usersdk/operation/GetDeviceSettingListOp.kt</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.danale.edge.usersdk.operation</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.danale.edge.foundation.log.Logger</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.usersdk.jni.BaseJsonOperation</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.usersdk.jni.BaseResponse</span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson</span><br><span class="line"><span class="keyword">import</span> com.google.gson.annotations.SerializedName</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GetDeviceSettingListOp</span> </span>(<span class="keyword">val</span> param: Param, logger: Logger, gson: Gson) :</span><br><span class="line">    BaseJsonOperation&lt;GetDeviceSettingListOp.Response&gt;(logger, gson) {</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 这里是回调</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">unmarshallSerializedResponse</span><span class="params">(jsonOutput: <span class="type">String</span>?)</span></span>: Response {</span><br><span class="line">        <span class="keyword">val</span> response = Response()</span><br><span class="line">        <span class="keyword">val</span> array = gson.fromJson(jsonOutput, Array&lt;ResultBean&gt;::<span class="keyword">class</span>.java)</span><br><span class="line">        response.list = array</span><br><span class="line">        <span class="keyword">return</span> response</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 传入数据</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">performOperation</span><span class="params">(context: <span class="type">CallbackContext</span>)</span></span> {</span><br><span class="line">        context.nativeResponseCallback(<span class="number">0</span>, <span class="number">0</span>, <span class="string">""</span>, mockList)  <span class="comment">// 在这里使用mock数据</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 入参</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Param</span></span>(</span><br><span class="line">        <span class="meta">@SerializedName(<span class="meta-string">"device_id"</span>)</span> <span class="keyword">val</span> deviceId: String,</span><br><span class="line">        <span class="meta">@SerializedName(<span class="meta-string">"device_type"</span>)</span> <span class="keyword">val</span> deviceType: <span class="built_in">Int</span>,</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 出参</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Response</span> : <span class="type">BaseResponse</span></span>() {</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 返回一个Array</span></span><br><span class="line">        <span class="keyword">var</span> list: Array&lt;ResultBean&gt;? = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">toString</span><span class="params">()</span></span>: String {</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"Response(list=<span class="subst">${list?.contentToString()}</span>)"</span></span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ResultBean</span> </span>{</span><br><span class="line"></span><br><span class="line">        <span class="meta">@SerializedName(<span class="meta-string">"name"</span>)</span></span><br><span class="line">        <span class="keyword">val</span> name: String? = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">        <span class="meta">@SerializedName(<span class="meta-string">"items"</span>)</span></span><br><span class="line">        <span class="keyword">val</span> items: Array&lt;Item&gt;? = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">toString</span><span class="params">()</span></span>: String {</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"ResultBean(name=<span class="variable">$name</span>, items=<span class="variable">$items</span>)"</span></span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Item</span> </span>{</span><br><span class="line"></span><br><span class="line">        <span class="meta">@SerializedName(<span class="meta-string">"id"</span>)</span></span><br><span class="line">        <span class="keyword">val</span> id: String? = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">        <span class="meta">@SerializedName(<span class="meta-string">"type"</span>)</span></span><br><span class="line">        <span class="keyword">val</span> type: String? = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">        <span class="meta">@SerializedName(<span class="meta-string">"subId"</span>)</span></span><br><span class="line">        <span class="keyword">val</span> subId: String? = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">toString</span><span class="params">()</span></span>: String {</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"Item(id=<span class="variable">$id</span>, type=<span class="variable">$type</span>, subId=<span class="variable">$subId</span>)"</span></span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>mock数据如下</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    {</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"text_basic_setting"</span>,</span><br><span class="line">        <span class="attr">"items"</span>: [</span><br><span class="line">            {</span><br><span class="line">                <span class="attr">"id"</span>: <span class="string">"text_device_name"</span>,</span><br><span class="line">                <span class="attr">"type"</span>: <span class="string">"String"</span></span><br><span class="line">            },</span><br><span class="line">            {</span><br><span class="line">                <span class="attr">"id"</span>: <span class="string">"text_device_info"</span>,</span><br><span class="line">                <span class="attr">"type"</span>: <span class="string">"Fragment"</span></span><br><span class="line">            },</span><br><span class="line">            {</span><br><span class="line">                <span class="attr">"id"</span>: <span class="string">"text_service_net"</span>,</span><br><span class="line">                <span class="attr">"type"</span>: <span class="string">"Fragment"</span></span><br><span class="line">            },</span><br><span class="line">            {</span><br><span class="line">                <span class="attr">"id"</span>: <span class="string">"Synchronize"</span>,</span><br><span class="line">                <span class="attr">"subId"</span>: <span class="string">"SynchronizeDescribe"</span>,</span><br><span class="line">                <span class="attr">"type"</span>: <span class="string">"Boolean"</span></span><br><span class="line">            }</span><br><span class="line">        ]</span><br><span class="line">    },</span><br><span class="line">    {</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"text_device_setting"</span>,</span><br><span class="line">        <span class="attr">"items"</span>: [</span><br><span class="line">            {</span><br><span class="line">                <span class="attr">"id"</span>: <span class="string">"text_device_flip"</span>,</span><br><span class="line">                <span class="attr">"subId"</span>: <span class="string">"flipDescribe"</span>,</span><br><span class="line">                <span class="attr">"type"</span>: <span class="string">"Boolean"</span></span><br><span class="line">            }</span><br><span class="line">        ]</span><br><span class="line">    }</span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure><h3 id="接口定义和实现"><a href="#接口定义和实现" class="headerlink" title="接口定义和实现"></a>接口定义和实现</h3><p>在userSdk中定义接口路径</p><p><code>com/danale/edge/usersdk/usecase/UserSdkUseCase.kt</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取设备设置列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getDeviceSettingList</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    id: <span class="type">String</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    type: <span class="type">Int</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>: Single&lt;GetDeviceSettingListOp.Response&gt;</span><br></pre></td></tr></tbody></table></figure><p>在userSdkImpl中实现</p><p><code>com/danale/edge/usersdk/usecase/UserSdkUseCaseImpl.kt</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getDeviceSettingList</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    id: <span class="type">String</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    type: <span class="type">Int</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>: Single&lt;GetDeviceSettingListOp.Response&gt; {</span><br><span class="line">    <span class="keyword">return</span> GetDeviceSettingListOp(GetDeviceSettingListOp.Param(id, type), logger, gsonInst)</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="数据获取"><a href="#数据获取" class="headerlink" title="数据获取"></a>数据获取</h3><p>在viewModel中获取数据</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取设备设置列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">loadSettingList</span><span class="params">()</span></span> {</span><br><span class="line">  viewModelScope.launch {</span><br><span class="line">    <span class="keyword">val</span> list = withContext(Dispatchers.IO) {</span><br><span class="line">      <span class="keyword">try</span> {</span><br><span class="line">        deviceId32?.let {</span><br><span class="line">            logger.d(TAG, <span class="string">"loadSettingList, getDeviceSettingList"</span>)</span><br><span class="line">            sdk.getDeviceSettingList(it, deviceTypeCode).await()</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">      } <span class="keyword">catch</span> (e: Exception) {</span><br><span class="line">        toastError(e)</span><br><span class="line">        <span class="literal">null</span></span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">when</span> (title) {</span><br><span class="line">    <span class="string">"text_basic_setting"</span> -&gt; {</span><br><span class="line">        add(Section().apply {</span><br><span class="line">            setHeader(SectionHeaderItem(getString(R.string.text_setting_basic)))</span><br><span class="line">            <span class="keyword">when</span> (item.id) {</span><br><span class="line">                <span class="string">"text_setting_basic_device_name"</span> -&gt; {</span><br><span class="line">                    add(nameItem)</span><br><span class="line">                }</span><br><span class="line">                <span class="string">"text_setting_basic_device_info"</span> -&gt; {</span><br><span class="line">                    add(</span><br><span class="line">                        StatusItem(</span><br><span class="line">                            getString(R.string.text_setting_basic_device_info),</span><br><span class="line">                            actionId = ACTION_NAV_ID_DEVICE_INFO</span><br><span class="line">                        )</span><br><span class="line">                    )</span><br><span class="line">                }</span><br><span class="line">                <span class="string">"text_setting_basic_device_network"</span> -&gt; {</span><br><span class="line">                    add(</span><br><span class="line">                        StatusItem(</span><br><span class="line">                            getString(R.string.text_setting_basic_device_network),</span><br><span class="line">                            actionId = ACTION_NAV_ID_DEVICE_NETWORK</span><br><span class="line">                        )</span><br><span class="line">                    )</span><br><span class="line">                }</span><br><span class="line">                <span class="string">"Synchronize"</span> -&gt; {</span><br><span class="line">                    add(</span><br><span class="line">                        SwitchItem(</span><br><span class="line">                            getString(R.string.text_allow_metered_sync),</span><br><span class="line">                            subTitle = getString(R.string.text_allow_metered_sync_tip),</span><br><span class="line">                            backgroundResId = R.drawable.bg_round_bottom,</span><br><span class="line">                            showSeparator = <span class="literal">false</span>,</span><br><span class="line">                            loadBlock = { item -&gt;</span><br><span class="line">                                <span class="keyword">val</span> useMeteredData =</span><br><span class="line">                                    preference.getAllowMeteredDataCompute()</span><br><span class="line">                                logger.d(TAG, <span class="string">"load, useMeteredData, <span class="variable">$useMeteredData</span>"</span>)</span><br><span class="line">                                (item <span class="keyword">as</span>? SwitchItem)?.isChecked = useMeteredData</span><br><span class="line">                            },</span><br><span class="line">                            checkedListener = { button, isChecked -&gt;</span><br><span class="line">                                logger.d(</span><br><span class="line">                                    TAG,</span><br><span class="line">                                    <span class="string">"cellular sync change, <span class="variable">$isChecked</span>, <span class="variable">$button</span>"</span></span><br><span class="line">                                )</span><br><span class="line">                                preference.setAllowMeteredDataCompute(isChecked)</span><br><span class="line">                            }</span><br><span class="line">                        ))</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        })</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">    <span class="string">"text_setting_device"</span> -&gt; {</span><br><span class="line">        add(Section().apply {</span><br><span class="line">            setHeader(SectionHeaderItem(getString(R.string.text_setting_device)))</span><br><span class="line">            <span class="keyword">when</span> (item.id) {</span><br><span class="line">                <span class="string">"text_setting_ipc_flip_state"</span> -&gt; {</span><br><span class="line">                    add(</span><br><span class="line">                        SwitchItem(</span><br><span class="line">                            getString(R.string.text_setting_ipc_flip_state),</span><br><span class="line">                            subTitle = getString(R.string.text_setting_ipc_flip_state_tip),</span><br><span class="line">                            backgroundResId = R.drawable.bg_round_bottom,</span><br><span class="line">                            showSeparator = <span class="literal">false</span>,</span><br><span class="line">                            loadBlock = { item -&gt;</span><br><span class="line">                                logger.d(TAG, <span class="string">"loadBlock, flip, <span class="variable">$item</span>"</span>)</span><br><span class="line">                                <span class="keyword">val</span> state = deviceThingInfo?.run {</span><br><span class="line">                                    performOnIOWithDefault(<span class="literal">null</span>) {</span><br><span class="line">                                        sdk.getDeviceFlipStatusWithCache(<span class="keyword">this</span>).await()</span><br><span class="line">                                    }</span><br><span class="line">                                } ?: DpFlipState.NORMAL</span><br><span class="line">                                logger.d(TAG, <span class="string">"loadBlock, flip state, <span class="variable">$state</span>"</span>)</span><br><span class="line">                                (item <span class="keyword">as</span>? SwitchItem)?.isChecked =</span><br><span class="line">                                    (state == DpFlipState.UP_SIDE_DOWN)</span><br><span class="line">                            },</span><br><span class="line">                            checkedListener = { button, isChecked -&gt;</span><br><span class="line">                                logger.d(</span><br><span class="line">                                    TAG,</span><br><span class="line">                                    <span class="string">"checkedListener, flip, <span class="variable">$isChecked</span>, <span class="variable">$button</span>"</span></span><br><span class="line">                                )</span><br><span class="line">                                <span class="keyword">val</span> state =</span><br><span class="line">                                    <span class="keyword">if</span> (isChecked) DpFlipState.UP_SIDE_DOWN <span class="keyword">else</span> DpFlipState.NORMAL</span><br><span class="line">                                viewModelScope.launch {</span><br><span class="line">                                    performOnIOWithDefault(<span class="literal">null</span>) {</span><br><span class="line">                                        deviceThingInfo?.let {</span><br><span class="line">                                            sdk.setDeviceFlipStatusWithCache(it, state)</span><br><span class="line">                                                .await()</span><br><span class="line">                                        }</span><br><span class="line">                                    }</span><br><span class="line">                                }</span><br><span class="line">                            }</span><br><span class="line">                        ))</span><br><span class="line">                }</span><br><span class="line"></span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">        })</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/work/%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2/has%20not%20been%20initialized.png"></p><p><code>com/danale/edge/appbiz/ApplicationBusinessModule.kt</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Module</span></span><br><span class="line"><span class="meta">@InstallIn(SingletonComponent::class)</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">ApplicationBusinessModule</span> </span>{</span><br><span class="line">    <span class="meta">@Binds</span></span><br><span class="line">    <span class="meta">@Singleton</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">bindSettingItemFactory</span><span class="params">(impl: <span class="type">SettingItemFactory</span>)</span></span>: SettingItemRepository</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><code>com/danale/edge/ui/devicecontrol/setting/SettingItemRepository.kt</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.danale.edge.ui.devicecontrol.setting</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">SettingItemRepository</span> </span>{</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><code>com/danale/edge/ui/devicecontrol/setting/DeviceSettingListViewModel.kt</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置项map</span></span><br><span class="line"><span class="meta">@Inject</span></span><br><span class="line"><span class="keyword">lateinit</span> <span class="keyword">var</span> settingItem: SettingItemFactory</span><br></pre></td></tr></tbody></table></figure><p><code>com/danale/edge/ui/devicecontrol/setting/SettingItemFactory.kt</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SettingItemFactory</span> <span class="meta">@Inject</span> <span class="keyword">constructor</span></span>(</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> preference: AppPrefRepository</span><br><span class="line">) :SettingItemRepository {</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">syncAction</span><span class="params">(item: <span class="type">BaseSettingItem</span>&lt;<span class="type">RecyclerGroupieItemSwitchBinding</span>&gt;)</span></span>: <span class="built_in">Boolean</span> {</span><br><span class="line">        <span class="keyword">val</span> useMeteredData = preference.getAllowMeteredDataCompute()</span><br><span class="line">        (item <span class="keyword">as</span>? SwitchItem)?.isChecked = useMeteredData</span><br><span class="line">        <span class="keyword">return</span> useMeteredData</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;h2 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h2&gt;&lt;p&gt;设置页</summary>
      
    
    
    
    <category term="有在认真上班" scheme="https://kenken-xr.github.io/blog/categories/%E6%9C%89%E5%9C%A8%E8%AE%A4%E7%9C%9F%E4%B8%8A%E7%8F%AD/"/>
    
    
    <category term="写了什么新功能" scheme="https://kenken-xr.github.io/blog/tags/%E5%86%99%E4%BA%86%E4%BB%80%E4%B9%88%E6%96%B0%E5%8A%9F%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>20230228</title>
    <link href="https://kenken-xr.github.io/blog/2023/02/28/20230228/"/>
    <id>https://kenken-xr.github.io/blog/2023/02/28/20230228/</id>
    <published>2023-02-28T11:52:24.000Z</published>
    <updated>2023-09-14T02:06:33.983Z</updated>
    
    <content type="html"><![CDATA[<h1 id="今天吃什么"><a href="#今天吃什么" class="headerlink" title="今天吃什么"></a>今天吃什么</h1><p>吃菜包子<br>不好吃</p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230228/%E6%97%A9%E9%A5%AD"></p><p>吃沙拉<br>这个好好吃</p><blockquote><p>染七沙拉.三文治.热轻食</p></blockquote><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230228/%E4%B8%AD%E9%A5%AD"></p><p>吃黑椒牛排<br>好吃<br><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230228/%E6%99%9A%E9%A5%AD"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;今天吃什么&quot;&gt;&lt;a href=&quot;#今天吃什么&quot; class=&quot;headerlink&quot; title=&quot;今天吃什么&quot;&gt;&lt;/a&gt;今天吃什么&lt;/h1&gt;&lt;p&gt;吃菜包子&lt;br&gt;不好吃&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent</summary>
      
    
    
    
    <category term="今天在腾讯吃什么" scheme="https://kenken-xr.github.io/blog/categories/%E4%BB%8A%E5%A4%A9%E5%9C%A8%E8%85%BE%E8%AE%AF%E5%90%83%E4%BB%80%E4%B9%88/"/>
    
    
  </entry>
  
  <entry>
    <title>基本的一些东西</title>
    <link href="https://kenken-xr.github.io/blog/2023/02/28/%E5%9F%BA%E6%9C%AC%E7%9A%84%E4%B8%80%E4%BA%9B%E4%B8%9C%E8%A5%BF/"/>
    <id>https://kenken-xr.github.io/blog/2023/02/28/%E5%9F%BA%E6%9C%AC%E7%9A%84%E4%B8%80%E4%BA%9B%E4%B8%9C%E8%A5%BF/</id>
    <published>2023-02-28T02:51:47.000Z</published>
    <updated>2023-09-14T02:06:33.984Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Log运行日志"><a href="#Log运行日志" class="headerlink" title="Log运行日志"></a>Log运行日志</h1><p>Android 采用Log工具打印日志，它将各类日志划分为五个级:</p><ul><li><p>Log.eE表示错误信息，比如可能导致程序崩溃的异常。</p></li><li><p>Log.w:表示警告信息。</p></li><li><p>Log.i:表示一般消息。</p></li><li><p>Log.d:表示调试信息，可把程序运行时的变量值打印出来，方便跟踪调试。</p></li><li><p>Log.v:表示冗余信息。</p></li></ul><h1 id="工程目录结构"><a href="#工程目录结构" class="headerlink" title="工程目录结构"></a>工程目录结构</h1><h2 id="App工程目录结构"><a href="#App工程目录结构" class="headerlink" title="App工程目录结构"></a>App工程目录结构</h2><p>App工程分为两个层次，第一个层次是项目，另一个层次是模块。</p><p>模块依附于项目，每个项目至少有一个模块，也能拥有多个模块。<br>一般所言的“编译运行App”，指的是运行某个模块，而非运行某个项目，因为模块才对应实际的App。</p><p>App项目下面有两个分类: </p><ul><li>app（代表app模块)  下面有3个子目录</li><li>Gradle Scripts，主要是工程的编译配置文件</li></ul><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/study/android%E5%BC%80%E5%8F%91/%E5%9F%BA%E6%9C%AC%E7%9A%84%E4%B8%80%E4%BA%9B%E4%B8%9C%E8%A5%BF/%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95"></p><ul><li><p>app（代表app模块）</p><ul><li><p>manifests子目录，下面只有一个XML文件，即AndroidManifest.xml，它是App的运行配置文件。</p></li><li><p>java子目录，下面有3个com.example.myapp包，其中第一个包存放当前模块的Java源代码，后<br>面两个包存放测试用的Java代码。</p></li><li><p>res子目录，存放当前模块的资源文件</p><ul><li>drawable目录存放图形描述文件与图片文件。</li><li>layout目录存放App页面的布局文件。</li><li>mipmap目录存放App的启动图标。</li><li>values目录存放一些常量定义文件，例如字符串常量strings.xml、像素常量dimens.xml、颜色常<br>量colors.xml、样式风格定义styles.xml等。  </li></ul></li><li><p>Gradle Scripts</p><ul><li>build.gradle，该文件分为项目级与模块级两种，用于描述App工程的编译规则。</li><li>proguard-rules.pro，该文件用于描述Java代码的混淆规则。</li><li>gradle.properties，该文件用于配置编译工程的命令行参数，一般无须改动。</li><li>settings.gradle，该文件配置了需要编译哪些模块。初始内容为include ‘:app’，表示只编译app模块。</li><li>local.properties，项目的本地配置文件，它在工程编译时自动生成，用于描述开发者电脑的环境配置，包括SDK的本地路径、NDK的本地路径等。</li></ul></li></ul></li></ul><h2 id="编译配置文件build-gradle"><a href="#编译配置文件build-gradle" class="headerlink" title="编译配置文件build.gradle"></a>编译配置文件build.gradle</h2><p>项目级别的build.gradle指定了当前项目的总体编译规则，打开该文件在buildscript下面找到repositories和dependencies两个节点，其中repositories节点用于设置Android Studio插件的网络仓库地址，而dependencies节点用于设置gradle插件的版本号。由于官方的谷歌仓库位于国外，下载速度相对较慢，因此可在repositories节点添加阿里云的仓库地址，方便国内开发者下载相关插件。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">buildscript {</span><br><span class="line">  repositories {</span><br><span class="line">    <span class="comment">// 以下四行添加阿里云的仓库地址，方便国内开发者下载相关插件</span></span><br><span class="line">    maven { url <span class="string">'https://maven.aliyun.com/repository/jcenter'</span> }</span><br><span class="line">    maven { url <span class="string">'https://maven.aliyun.com/repository/google'</span>}</span><br><span class="line">    maven { url <span class="string">'https://maven.aliyun.com/repository/gradle-plugin'</span>}</span><br><span class="line">    maven { url <span class="string">'https://maven.aliyun.com/repository/public'</span>}</span><br><span class="line">    google()</span><br><span class="line">    jcenter()</span><br><span class="line">  } </span><br><span class="line">dependencies {</span><br><span class="line">    <span class="comment">// 配置gradle插件版本，下面的版本号就是Android Studio的版本号</span></span><br><span class="line">    classpath <span class="string">'com.android.tools.build:gradle:4.1.0'</span></span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>模块级别的build.gradle对应于具体模块，每个模块都有自己的build.gradle，它指定了当前模块的详细编译规则。  </p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">plugins {</span><br><span class="line">    id <span class="string">'com.android.application'</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">android {</span><br><span class="line">  <span class="comment">// 指定编译用的SDK版本号。比如30表示使用Android 11.0编译</span></span><br><span class="line">    compileSdk <span class="number">30</span>,</span><br><span class="line">  <span class="comment">// 指定编译工具的版本号。这里的头两位数字必须与compileSdkVersion保持一致，具体的版本号可在sdk安装目录的“sdk\build-tools”下找到</span></span><br><span class="line">buildToolsVersion <span class="string">"30.0.3,</span></span><br><span class="line"><span class="string">    defaultConfig {</span></span><br><span class="line"><span class="string">      // 指定该模块的应用编号，也就是App的包名</span></span><br><span class="line"><span class="string">        applicationId "</span>com.dongnaoedu.myapplication<span class="string">"</span></span><br><span class="line"><span class="string">        // 指定App适合运行的最小SDK版本号。比如19表示至少要在Android 4.4上运行</span></span><br><span class="line"><span class="string">        minSdkVersion 19</span></span><br><span class="line"><span class="string">        // 指定目标设备的SDK版本号。表示App最希望在哪个版本的Android上运行</span></span><br><span class="line"><span class="string">        targetSdkVersion 30</span></span><br><span class="line"><span class="string">        // 指定App的应用版本号</span></span><br><span class="line"><span class="string">        versionCode 1</span></span><br><span class="line"><span class="string">        // 指定App的应用版本名称</span></span><br><span class="line"><span class="string">        versionName "</span><span class="number">1.0</span><span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        testInstrumentationRunner "</span>androidx.test.runner.AndroidJUnitRunner<span class="string">"</span></span><br><span class="line"><span class="string">    }</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    buildTypes {</span></span><br><span class="line"><span class="string">        release {</span></span><br><span class="line"><span class="string">            minifyEnabled false</span></span><br><span class="line"><span class="string">            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'</span></span><br><span class="line"><span class="string">        }</span></span><br><span class="line"><span class="string">    }</span></span><br><span class="line"><span class="string">}</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// 指定App编译的依赖信息</span></span><br><span class="line"><span class="string">dependencies {</span></span><br><span class="line"><span class="string">    // 指定引用jar包的路径</span></span><br><span class="line"><span class="string">    implementation fileTree(dir: 'libs', include: ['*.jar'])</span></span><br><span class="line"><span class="string">    // 指定编译Android的高版本支持库。如AppCompatActivity必须指定编译appcompat库</span></span><br><span class="line"><span class="string">    //appcompat库各版本见https://mvnrepository.com/artifact/androidx.appcompat/appcompat</span></span><br><span class="line"><span class="string">    implementation 'androidx.appcompat:appcompat:1.2.0'</span></span><br><span class="line"><span class="string">    // 指定单元测试编译用的junit版本号</span></span><br><span class="line"><span class="string">    testImplementation 'junit:junit:4.13'</span></span><br><span class="line"><span class="string">    androidTestImplementation 'androidx.test.ext:junit:1.1.2'</span></span><br><span class="line"><span class="string">    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0</span></span><br><span class="line"><span class="string">}</span></span><br></pre></td></tr></tbody></table></figure><h2 id="运行配置文件AndroidManifest-xml"><a href="#运行配置文件AndroidManifest-xml" class="headerlink" title="运行配置文件AndroidManifest.xml"></a>运行配置文件AndroidManifest.xml</h2><p><code>AndroidManifest.xml</code>指定了App的运行配置信息，它是一个XML描述文件  </p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag"><span class="attr">package</span>=<span class="string">"com.example.chapter02"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:allowBackup</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:roundIcon</span>=<span class="string">"@mipmap/ic_launcher_round"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:supportsRtl</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:theme</span>=<span class="string">"@style/AppTheme"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".Main2Activity"</span>&gt;</span><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- activity节点指定了该App拥有的活动页面信息，其中拥有android.intent.action.MAIN的activity说明它是入口页面 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><code>AndroidManifest.xml</code>的根节点为manifest，它的package属性指定了该App的包名。manifest下面有个application节点</p><ul><li><code>android:allowBackup</code>，是否允许应用备份。允许用户备份系统应用和第三方应用的apk安装包和应用数据，以便在刷机或者数据丢失后恢复应用，用户即可通过adb backup和adb restore来进行<br>对应用数据的备份和恢复。为true表示允许，为false则表示不允许。</li><li><code>android:icon</code>，指定App在手机屏幕上显示的图标。</li><li><code>android:label</code>，指定App在手机屏幕上显示的名称。</li><li><code>android:roundIcon</code>，指定App的圆角图标。</li><li><code>android:supportsRtl</code>，是否支持阿拉伯语／波斯语这种从右往左的文字排列顺序。为true表示支持，为false则表示不支持。</li><li><code>android:theme</code>，指定App的显示风格。  </li></ul><p>application下面还有个activity节点，它是活动页面的注册声明，只有在<code>AndroidManifest.xml</code>中正确配置了activity节点，才能在运行时访问对应的活动页面。初始配置的MainActivity正是App的默认主页，之所以说该页面是App主页，是因为它的activity节点内部还配置了以下的过滤信息  </p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>其中<code>action</code>节点设置的<code>android.intent.action.MAIN</code>表示该页面是App的入口页面，启动App时会最先打开该页面。</p><p>而<code>category</code>节点设置的<code>android.intent.category.LAUNCHER</code>决定了是否在手机屏幕上显示App图标，如果同时有两个activity节点内部都设置了android.intent.category.LAUNCHER，那么桌面就会显示两个App图标。  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Log运行日志&quot;&gt;&lt;a href=&quot;#Log运行日志&quot; class=&quot;headerlink&quot; title=&quot;Log运行日志&quot;&gt;&lt;/a&gt;Log运行日志&lt;/h1&gt;&lt;p&gt;Android 采用Log工具打印日志，它将各类日志划分为五个级:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;</summary>
      
    
    
    
    <category term="有在认真上班" scheme="https://kenken-xr.github.io/blog/categories/%E6%9C%89%E5%9C%A8%E8%AE%A4%E7%9C%9F%E4%B8%8A%E7%8F%AD/"/>
    
    
    <category term="Android" scheme="https://kenken-xr.github.io/blog/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>简单控件</title>
    <link href="https://kenken-xr.github.io/blog/2023/02/28/%E7%AE%80%E5%8D%95%E6%8E%A7%E4%BB%B6/"/>
    <id>https://kenken-xr.github.io/blog/2023/02/28/%E7%AE%80%E5%8D%95%E6%8E%A7%E4%BB%B6/</id>
    <published>2023-02-28T02:51:47.000Z</published>
    <updated>2023-09-14T02:06:33.985Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/study/android%E5%BC%80%E5%8F%91/%E7%AE%80%E5%8D%95%E6%8E%A7%E4%BB%B6/%E7%AE%80%E5%8D%95%E6%8E%A7%E4%BB%B6.png" alt="简单控件"></p><h1 id="文本显示"><a href="#文本显示" class="headerlink" title="文本显示"></a>文本显示</h1><h2 id="设置文本内容"><a href="#设置文本内容" class="headerlink" title="设置文本内容"></a>设置文本内容</h2><ul><li><p>在 XML 文件中通过属性 android:text 设置文本，在XML文件中引用（@string/xxx）</p><ul><li>```xml<br><textview android:id="@+id/tv_hello" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="你好，世界"><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 在 Java 代码中调用文本视图对象的 setText 方法设置文本</span><br><span class="line">  引用字符串资源，在Java代码中引用（R.string.xxx）</span><br><span class="line"></span><br><span class="line">  - ```java</span><br><span class="line">    // 获取名为tv_hello的文本视图</span><br><span class="line">    TextView tv_hello = findViewById(R.id.tv_hello);</span><br><span class="line">    tv_hello.setText("你好，世界"); // 设置tv_hello的文字内容</span><br></pre></td></tr></tbody></table></figure></textview></li></ul></li></ul><h2 id="设置文本的大小"><a href="#设置文本的大小" class="headerlink" title="设置文本的大小"></a>设置文本的大小</h2><p>TextView允许设置文本内容，也允许设置文本大小，在Java代码中调用setTextSize方法，即可指定文本大小 </p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 从布局文件中获取名叫tv_sp的文本视图</span></span><br><span class="line">TextView tv_sp = findViewById(R.id.tv_sp);</span><br><span class="line">tv_sp.setTextSize(<span class="number">30</span>); <span class="comment">// 设置tv_sp的文本大小</span></span><br></pre></td></tr></tbody></table></figure><p>XML文件要求在字号数字后面写明单位类型，常见的字号单位主要有px、dp、sp 3种，分别介绍如下。</p><h3 id="px"><a href="#px" class="headerlink" title="px"></a>px</h3><p>px是手机屏幕的最小显示单位，它与设备的显示屏有关。一般来说，同样尺寸的屏幕（比如6英寸手机），如果看起来越清晰，则表示像素密度越高，以px计量的分辨率也越大。</p><h3 id="dp"><a href="#dp" class="headerlink" title="dp"></a>dp</h3><p>dp有时也写作dip，指的是与设备无关的显示单位，它只与屏幕的尺寸有关。一般来说，同样尺寸的屏幕以dp计量的分辨率是相同的，比如同样是6英寸手机，无论它由哪个厂家生产，其分辨率换算成dp单位都是一个大小。</p><h3 id="sp（推荐）"><a href="#sp（推荐）" class="headerlink" title="sp（推荐）"></a>sp（推荐）</h3><p>sp的原理跟dp差不多，但它专门用来设置字体大小。手机在系统设置里可以调整字体的大小（小、标准、大、超大）。设置普通字体时，同数值dp和sp的文字看起来一样大；如果设置为大字体，用dp设置的文字没有变化，用sp设置的文字就变大了。</p><p>字体大小采用不同单位的话，显示的文字大小各不相同。例如，30px、30dp、30sp这3个字号，在不同手机上的显示大小有所差异。有的手机像素密度较低，一个dp相当于两个px，此时30px等同于15dp；<br>有的手机像素密度较高，一个dp相当于3个px，此时30px等同于10dp。假设某个App的内部文本使用字号30px，则该App安装到前一部手机的字体大小为15dp，安装到后一部手机的字体大小为10dp，显然后一部手机显示的文本会更小。  </p><table><thead><tr><th>名称</th><th>解释</th></tr></thead><tbody><tr><td>px（Pixel像 素）</td><td>也称为图像元素，是作为图像构成的基本单元，单个像素的大小并不固定，跟随 屏幕大小和像素数量的关系变化，一个像素点为1px。</td></tr><tr><td>Resolution （分辨率）</td><td>是指屏幕的垂直和水平方向的像素数量，如果分辨率是 1920*1080 ，那就是垂 直方向有 1920 个像素，水平方向有 1080 个像素。</td></tr><tr><td>Dpi（像素密 度）</td><td>是指屏幕上每英寸（1英寸 = 2.54 厘米）距离中有多少个像素点。</td></tr><tr><td>Density（密 度）</td><td>是指屏幕上每平方英寸（2.54 ^ 2 平方厘米）中含有的像素点数量。</td></tr><tr><td>Dip / dp (设 备独立像素)</td><td>也可以叫做dp，长度单位，同一个单位在不同的设备上有不同的显示效果，具体 效果根据设备的密度有关，详细的公式请看下面 。</td></tr></tbody></table><h2 id="设置文本的颜色"><a href="#设置文本的颜色" class="headerlink" title="设置文本的颜色"></a>设置文本的颜色</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 从布局文件中获取名为tv_code_system的文本视图</span></span><br><span class="line">TextView tv_code_system = findViewById(R.id.tv_code_system);</span><br><span class="line"><span class="comment">// 将tv_code_system的文字颜色设置系统自带的绿色</span></span><br><span class="line">tv_code_system.setTextColor(Color.GREEN);</span><br></pre></td></tr></tbody></table></figure><p>注意属性android:background和setBackgroundResource方法，它俩用来设置控件的背景，不单单是背景颜色，还包括背景图片。</p><h1 id="视图基础"><a href="#视图基础" class="headerlink" title="视图基础"></a>视图基础</h1><h2 id="设置视图的宽高"><a href="#设置视图的宽高" class="headerlink" title="设置视图的宽高"></a>设置视图的宽高</h2><p>手机屏幕是块长方形区域，较短的那条边叫作宽，较长的那条边叫作高。App控件通常也是长方形状，控件宽度通过属性android:layout_width表达，控件高度通过属性android:layout_height表达，宽高的取值主要有下列3种：</p><ul><li><code>match_parent</code>：表示与上级视图保持一致。上级视图的尺寸有多大，当前视图的尺寸就有多大。</li><li><code>wrap_content</code>：表示与内容自适应。对于文本视图来说，内部文字需要多大的显示空间，当前视图就要占据多大的尺寸。但最宽不能超过上级视图的宽度，一旦超过就要换行；最高不能超过上级视图<br>的高度，一旦超过就会隐藏。</li><li>以<code>dp</code>为单位的具体尺寸，比如300dp，表示宽度或者高度就是这么大。  </li></ul><h2 id="设置视图的间距"><a href="#设置视图的间距" class="headerlink" title="设置视图的间距"></a>设置视图的间距</h2><p>每个TextView标签都携带新的属性<code>android:layout_marginTop="5dp"</code>，该属性的作用是让当前视图与上方间隔一段距离。同理，<br><code>android:layout_marginLeft</code>让当前视图与左边间隔一段距离，<code>android:layout_marginRight</code>让当前视图与右边间隔一段距离，<code>android:layout_marginBottom</code>让当前视图与下方间隔一段距离。如果上下左右都间隔同样的距离，还能使用<code>android:layout_margin</code>一次性设置四周的间距。</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><span class="comment">&lt;!-- 最外层的布局背景为蓝色 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"300dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"#00AAFF"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 中间层的布局背景为黄色 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_margin</span>=<span class="string">"20dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"#FFFF99"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:padding</span>=<span class="string">"60dp"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 最内层的视图背景为红色 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">"#FF0000"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/study/android%E5%BC%80%E5%8F%91/%E7%AE%80%E5%8D%95%E6%8E%A7%E4%BB%B6/%E8%A7%86%E5%9B%BE%E9%97%B4%E8%B7%9D.png"><h2 id="设置视图的对齐方式"><a href="#设置视图的对齐方式" class="headerlink" title="设置视图的对齐方式"></a>设置视图的对齐方式</h2><p>在XML文件中通过属性<code>android:layout_gravity</code>可以指定当前视图的对齐方向，当属性值为top时表示视图朝上对齐，为bottom时表示视图朝下对齐，为left时表示视图靠左对齐，为right时表示视图靠右对齐。如果希望视图既朝上又靠左，则用竖线连接top与left，此时属性标记为<br><code>android:layout_gravity="top|left"</code>；如果希望视图既朝下又靠右，则用竖线连接bottom与right，此时属性标记为<code>android:layout_gravity="bottom|right"</code>。</p><p>注意<code>layout_gravity</code>规定的对齐方式，指的是当前视图往上级视图的哪个方向对齐，并非当前视图的内部对齐。若想设置内部视图的对齐方向，则需由当前视图的<code>android:gravity</code>指定，该属性一样拥有top、bottom、left、right 4种取值及其组合。</p><p><code>gravity</code>与<code>layout_gravity</code>的不同之处在于：layout_gravity设定了当前视图相对于上级视图的对齐方式，而gravity设定了下级视图相对于当前视图的对齐方式；前者决定了当前视图的位置，而后者决定了下级视图的位置。</p><h1 id="常用布局"><a href="#常用布局" class="headerlink" title="常用布局"></a>常用布局</h1><h2 id="线性布局LinearLayout"><a href="#线性布局LinearLayout" class="headerlink" title="线性布局LinearLayout"></a>线性布局LinearLayout</h2><p>线性布局像是用一根线把它的内部视图串起来，故而内部视图之间的排列顺序是固定的，要么从左到右排列，要么从上到下排列。</p><p>在XML文件中，LinearLayout通过属性<code>android:orientation</code>区分两种方向，其中从左到右排列叫作水平方向，属性值为horizontal；从上到下排列叫作垂直方向，属性值为vertical。</p><p>如果LinearLayout标签不指定具体方向，则系统默认该布局为水平方向排列，也就是默认<code>android:orientation="horizontal"  </code></p><p>除了方向之外，线性布局还有一个权重概念，所谓权重，指的是线性布局的下级视图各自拥有多大比例的宽高，在XML文件中通过属性<code>android:layout_weight</code>来表达。  </p><p>一旦设置了<code>layout_weight</code>属性值，便要求<code>layout_width</code>填0dp或者<code>layout_height</code>填0dp。如果<code>layout_width</code>填0dp，则<code>layout_weigh</code>t表示水平方向的权重，下级视图会从左往右分割线性布局；如果<code>layout_height</code>填0dp，则<code>layout_weight</code>表示垂直方向的权重，下级视图会从上往下分割线性布局。  </p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"横排第一个"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">"17sp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">"#000000"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"横排第二个"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">"17sp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">"#000000"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"竖排第一个"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">"17sp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">"#000000"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"竖排第二个"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">"17sp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">"#000000"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/study/android%E5%BC%80%E5%8F%91/%E7%AE%80%E5%8D%95%E6%8E%A7%E4%BB%B6/%E7%BA%BF%E6%80%A7%E5%B8%83%E5%B1%80%E6%9D%83%E9%87%8D.png" alt="线性布局权重"><h2 id="相对布局RelativeLayout"><a href="#相对布局RelativeLayout" class="headerlink" title="相对布局RelativeLayout"></a>相对布局RelativeLayout</h2><p>线性布局的下级视图是顺序排列着的，另一种相对布局的下级视图位置则由其他视图决定。相对布局名为RelativeLayout，因为下级视图的位置是相对位置，所以得有具体的参照物才能确定最终位置。</p><p>如果不设定下级视图的参照物，那么下级视图默认显示在RelativeLayout内部的左上角。用于确定下级视图位置的参照物分两种，一种是与该视图自身平级的视图；另一种是该视图的上级视图。</p><ol><li>属性值为true或者false<ol><li>android：layout_centerHrizontal 水平居中</li><li>android：layout_centerVertical 垂直居中</li><li>android：layout_centerInparent 相对于父控件完全居中</li><li>android：layout_alignParentBottom 贴紧父控件的下边缘</li><li>android：layout_alignParentLeft 贴紧父控件的左边缘</li><li>android：layout_alignParentRight 贴紧父控件的右边缘</li><li>android：layout_alignParentTop 贴紧父控件的上边缘</li><li>android：layout_alignWithParentIfMissing 如果对应的兄弟控件找不到的话，就以父控件作为参照物</li></ol></li><li>属性值必须为id的引用名“@id/id-name”<ol><li>android：layout_below 在某控件下方</li><li>android：layout_above 在某控件上方</li><li>android：layout_toLeftOf 在某控件的左边</li><li>android：layout_toRightOf 在某控件的右边</li><li>android：layout_alignTop 本控件的上边缘和某控件的上边缘对齐</li><li>android：layout_alignLeft 本控件的左边缘和某控件的左边缘对齐</li><li>android：layout_alignBottom 本控件的下边缘和某控件的下控件对齐</li><li>android：layout_alignRight 本控件的右边缘和某控件的有边缘对齐</li></ol></li><li>属性值为具体的像素值，如30dip，40px<ol><li>android：layout_marginBottom 离某控件底边缘的距离</li><li>android：layout_marginLeft 离某控件左边缘的距离</li><li>android：layout_marginRight 离某控件右边缘的距离</li><li>android：layout_marginTop 离某控件上边缘的距离</li></ol></li></ol><h2 id="网格布局GridLayout"><a href="#网格布局GridLayout" class="headerlink" title="网格布局GridLayout"></a>网格布局GridLayout</h2><p>网格布局默认从左往右、从上到下排列，它先从第一行从左往右放置下级视图，塞满之后另起一行放置其余的下级视图，如此循环往复直至所有下级视图都放置完毕。</p><p>为了判断能够容纳几行几列，网格布局新增了<code>android:columnCount</code>与<code>android:rowCount</code>两个属性，其中<code>columnCount</code>指定了网格的列数，即每行能放多少个视图；<code>rowCount</code>指定了网格的行数，即每列能放多少个视图。  </p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">GridLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:columnCount</span>=<span class="string">"2"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:rowCount</span>=<span class="string">"2"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--两行两列--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"60dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_columnWeight</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"#ffcccc"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"浅红色"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"#000000"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"17sp"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"60dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_columnWeight</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"#ffaa00"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"橙色"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"#000000"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"17sp"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"60dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_columnWeight</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"#00ff00"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"绿色"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"#000000"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"17sp"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"60dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_columnWeight</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"#660066"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"深紫色"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"#000000"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"17sp"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">GridLayout</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="滚动视图ScrollView"><a href="#滚动视图ScrollView" class="headerlink" title="滚动视图ScrollView"></a>滚动视图ScrollView</h2><p>与线性布局类似，滚动视图也分为垂直方向和水平方向两类，其中垂直滚动视图名为<code>ScrollView</code>，水平滚动视图名为<code>HorizontalScrollView</code>。这两个滚动视图的使用并不复杂，主要注意以下3点：</p><ol><li>垂直方向滚动时，<code>layout_width</code>属性值设置为<code>match_parent</code>，<code>layout_height</code>属性值设置为<code>wrap_content</code>。</li><li>水平方向滚动时，<code>layout_width</code>属性值设置为<code>wrap_content</code>，<code>layout_height</code>属性值设置为<code>match_parent</code>。</li><li>滚动视图节点下面必须且只能挂着一个子布局节点，否则会在运行时报错<code>Caused by： java.lang.IllegalStateException：ScrollView can host only one direct child</code>。  </li></ol><p>有时<code>ScrollView</code>的实际内容不够，又想让它充满屏幕，再增加一行<code>android:fillViewport</code>（该属性为true表示允许填满视图窗口 </p> <figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">android:layout_height="match_parent"</span><br><span class="line">android:fillViewport="true"</span><br></pre></td></tr></tbody></table></figure><h1 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h1><p>Button继承于TextView，因此它们拥有的属性都是共通的。</p><h2 id="textAllCaps"><a href="#textAllCaps" class="headerlink" title="textAllCaps"></a>textAllCaps</h2><p>对于TextView来说，text属性设置了什么文本，文本视图就显示什么文本。但对于Button来说，不管text属性设置的是大写字母还是小写字母，按钮控件都默认转成大写字母显示。比如在XML文件中加入下面的Button标签  </p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:text</span>=<span class="string">"Hello World"</span>/&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>编译运行后的App界面，按钮上显示全大写的“HELLO WORLD”，而非原来大小写混合的“Hello<br>World”。显然这个效果不符合预期，为此需要给Button标签补充textAllCaps属性，该属性默认为true表示全部转为大写，如果设置为false则表示不转为大写。 </p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:text</span>=<span class="string">"Hello World"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:textAllCaps</span>=<span class="string">"false"</span>/&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="点击事件"><a href="#点击事件" class="headerlink" title="点击事件"></a>点击事件</h2><p>除此之外，Button最重要的是点击事件。</p><ul><li><p>点击监听器：通过<code>setOnClickListener</code>方法设置。按钮被按住少于500毫秒时，会触发点击事件。</p><ul><li>```java<br>// 从布局文件中获取名为btn_click_single的按钮控件<br>Button btn_click_single = findViewById(R.id.btn_click_single);<br>// 给btn_click_single设置点击监听器，一旦用户点击按钮，就触发监听器的onClick方法<br>btn_click_single.setOnClickListener(new MyOnClickListener());// 定义一个点击监听器，它实现了接口View.OnClickListener<br>class MyOnClickListener implements View.OnClickListener {<br>  @Override<br>  public void onClick(View v) { // 点击事件的处理方法<pre><code>String desc = String.format("%s 点击了按钮：%s", ((Button) v).getText());tv_result.setText(desc); // 设置文本视图的文本内容</code></pre>  }<br>}<figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 长按监听器：通过`setOnLongClickListener`方法设置。按钮被按住超过500毫秒时，会触发长按事件。</span><br><span class="line"></span><br><span class="line">  - ```java</span><br><span class="line">    // 从布局文件中获取名为btn_click_public的按钮控件</span><br><span class="line">    Button btn_longclick_public = findViewById(R.id.btn_longclick_public);</span><br><span class="line">    // 设置长按监听器，一旦用户长按按钮，就触发监听器的onLongClick方法</span><br><span class="line">    btn_longclick_public.setOnLongClickListener(this);</span><br><span class="line">    </span><br><span class="line">    @Override</span><br><span class="line">    public boolean onLongClick(View v) { // 长按事件的处理方法</span><br><span class="line">      if (v.getId() == R.id.btn_longclick_public) { // 来自于按钮</span><br><span class="line">        btn_longclick_public</span><br><span class="line">        String desc = String.format("%s 长按了按钮：%s", ((Button)v).getText());</span><br><span class="line">        tv_result.setText(desc); // 设置文本视图的文本内容</span><br><span class="line">      } </span><br><span class="line">      return true;</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure></li></ul></li></ul><p>点击监听器和长按监听器不局限于按钮控件，其实它们都来源于视图基类View，凡是从View派生而来的各类控件，均可注册点击监听器和长按监听器。譬如文本视图TextView，其对象也能调用setOnClickListener方法与setOnLongClickListener方法，此时TextView控件就会响应点击动作和长按动作。</p><p>因为按钮存在按下和松开两种背景，便于提示用户该控件允许点击，但文本视图默认没有按压背景，不方便判断是否被点击，所以一般不会让文本视图处理点击事件和长按事件。  </p><h2 id="禁用与恢复按钮"><a href="#禁用与恢复按钮" class="headerlink" title="禁用与恢复按钮"></a>禁用与恢复按钮</h2><ul><li>不可用按钮：按钮不允许点击，即使点击也没反应，同时按钮文字为灰色。</li><li>可用按钮：按钮允许点击，点击按钮会触发点击事件，同时按钮文字为正常的黑色。  </li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">btn_test.setEnabled(<span class="keyword">true</span>); <span class="comment">// 启用当前控件</span></span><br><span class="line">btn_test.setEnabled(<span class="keyword">false</span>); <span class="comment">// 禁用当前控件</span></span><br></pre></td></tr></tbody></table></figure><h1 id="图像显示"><a href="#图像显示" class="headerlink" title="图像显示"></a>图像显示</h1><p>图片一般放在res/drawable目录下，设置图像显示一般有两种方法：</p><ol><li>在XML文件中，通过属性android:src设置图片资源，属性值格式形如 @drawable/不含扩展名的图片名称。</li><li>在Java代码中，调用setImageResource方法设置图片资源，方法参数格式形如 R.drawable.不含扩展名的图片名称。<br>（1）图像的缩放问题：<br>ImageView本身默认图片居中显示，若要改变图片的显示方式，可通过scaleType属性设定，该属性的取值说明如下：</li></ol><h2 id="图像视图ImageView"><a href="#图像视图ImageView" class="headerlink" title="图像视图ImageView"></a>图像视图ImageView</h2><p>由于图像通常保存为单独的图片文件，因此需要先把图片放到res/drawable目录，然后再去引用该图片的资源名称。XML文件通过属性android:src设置图片资源，属性值格式形如“@drawable/不含扩展名的图片名称”。  </p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:id</span>=<span class="string">"@+id/iv_scale"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_height</span>=<span class="string">"220dp"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:src</span>=<span class="string">"@drawable/apple"</span> /&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>ImageView本身默认图片居中显示，不管图片有多大抑或有多小，图像视图都会自动缩放图片，使之刚好够着ImageView的边界，并且缩放后的图片保持原始的宽高比例，看起来图片很完美地占据视图中央。这种缩放类型在XML文件中通过属性<code>android:scaleType</code>定义，即使图像视图未明确指定该属性，系统也会默认其值为fitCenter，表示让图像缩放后居中显示。  </p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:id</span>=<span class="string">"@+id/iv_scale"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_height</span>=<span class="string">"220dp"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:src</span>=<span class="string">"@drawable/apple"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:scaleType</span>=<span class="string">"fitCenter"</span>/&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>在Java代码中可调用<code>setScaleType</code>方法设置图像视图的缩放类型，其中<code>fitCenter</code>对应的类型为<code>ScaleType.FIT_CENTER</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将缩放类型设置为“保持宽高比例，缩放图片使其位于视图中间”</span></span><br><span class="line">iv_scale.setScaleType(ImageView.ScaleType.FIT_CENTER);</span><br></pre></td></tr></tbody></table></figure><p>可选值如下：</p><ul><li><code>fitXY</code>:对图像的横向与纵向进行独立缩放,使得该图片完全适应ImageView,但是图片的横纵比可能会发生改变</li><li><code>fitStart</code>:保持纵横比缩放图片,知道较长的边与Image的边长相等,缩放完成后将图片放在ImageView的左上角</li><li><code>fitCenter</code>:同上,缩放后放于中间;</li><li><code>fitEnd</code>:同上,缩放后放于右下角;</li><li><code>center</code>:保持原图的大小，显示在ImageView的中心。当原图的size大于ImageView的size，超过部分裁剪处理。</li><li><code>centerCrop</code>:保持横纵比缩放图片,知道完全覆盖ImageView,可能会出现图片的显示不完全</li><li><code>centerInside</code>:保持横纵比缩放图片,直到ImageView能够完全地显示图片</li><li><code>matrix</code>:默认值，不改变原图的大小，从ImageView的左上角开始绘制原图，原图超过ImageView的部分作裁剪处理</li></ul><h2 id="图像按钮ImageButton："><a href="#图像按钮ImageButton：" class="headerlink" title="图像按钮ImageButton："></a>图像按钮ImageButton：</h2><p>ImageButton是显示图片的图像按钮，但它继承自ImageView，而非继承Button。</p><p>ImageButton和Button之间的区别有：</p><ul><li>Button既可显示文本也可显示图片，ImageButton只能显示图片不能显示文本。</li><li>ImageButton上的图像可按比例缩放，而Button通过背景设置的图像会拉伸变形。</li><li>Button只能靠背景显示一张图片，而ImageButton可分别在前景和背景显示图片，从而实现两张图片叠加的效果。</li></ul><h2 id="同时展示文本与图像"><a href="#同时展示文本与图像" class="headerlink" title="同时展示文本与图像"></a>同时展示文本与图像</h2><p>Button标签通过属性android:drawableTop设置了文字上边的图标，若想变更图标所处的位置，<br>只要把drawableTop换成对应方向的属性即可</p><ul><li><code>drawableTop</code>：指定文字上方的图片。</li><li><code>drawableBottom</code>：指定文字下方的图片。</li><li><code>drawableLeft</code>：指定文字左边的图片。</li><li><code>drawableRight</code>：指定文字右边的图片。</li><li><code>drawablePadding</code>：指定图片与文字的间距。 </li></ul><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/study/android%E5%BC%80%E5%8F%91/%E7%AE%80%E5%8D%95%E6%8E%A7%E4%BB%B6/%E5%9B%BE%E6%A0%87%E6%96%87%E5%AD%97.png" alt="图标文字"> ]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kenken-xr/blog-images/images/study/android%E5%BC%80%E5%8F%91/%E7%AE%80%E5%8D%95%E6%8E%A7%E4%B</summary>
      
    
    
    
    <category term="有在认真上班" scheme="https://kenken-xr.github.io/blog/categories/%E6%9C%89%E5%9C%A8%E8%AE%A4%E7%9C%9F%E4%B8%8A%E7%8F%AD/"/>
    
    
    <category term="Android" scheme="https://kenken-xr.github.io/blog/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Activity</title>
    <link href="https://kenken-xr.github.io/blog/2023/02/28/Activity/"/>
    <id>https://kenken-xr.github.io/blog/2023/02/28/Activity/</id>
    <published>2023-02-28T02:51:47.000Z</published>
    <updated>2023-09-14T02:06:33.984Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/study/android%E5%BC%80%E5%8F%91/Activity/activity.png" alt="Activity"></p><h1 id="启停活动页面"><a href="#启停活动页面" class="headerlink" title="启停活动页面"></a>启停活动页面</h1><h2 id="Activity的启动和结束"><a href="#Activity的启动和结束" class="headerlink" title="Activity的启动和结束"></a>Activity的启动和结束</h2><p>从当前页面跳到新页面，跳转代码如下:<code>startActivity(new lIntent(源页面.this,目标页面.class));</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dongnaoedu.chapter04;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.ComponentName;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ActStartActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"ning"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        Log.d(TAG, <span class="string">"ActStartActivity onCreate"</span>);</span><br><span class="line">        setContentView(R.layout.activity_act_start);</span><br><span class="line">      <span class="comment">// setOnClickListener来自于View，故而允许直接给View对象注册点击监听器</span></span><br><span class="line">        findViewById(R.id.btn_act_next).setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>{   <span class="comment">// 点击事件的处理方法</span></span><br><span class="line">        <span class="comment">// 1.在Intent的构造函数中指定</span></span><br><span class="line">        <span class="comment">//Intent intent = new Intent(this, ActFinishActivity.class);</span></span><br><span class="line">        <span class="comment">// 2.调用意图对象的setClass方法指定</span></span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent();</span><br><span class="line">        <span class="comment">// intent.setClass(this,ActFinishActivity.class);</span></span><br><span class="line">        <span class="comment">// 3.调用意图对象的setComponent方法指定</span></span><br><span class="line">        ComponentName component = <span class="keyword">new</span> ComponentName(<span class="keyword">this</span>, ActFinishActivity.class);</span><br><span class="line">        intent.setComponent(component);</span><br><span class="line">        startActivity(intent);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>从当前页面回到上一个页面，相当于关闭当前页面，返回代码如下:<code>finish();//结束当前的活动页面</code></p><p>调用finish方法即可关闭当前页面，前述场景要求点击箭头图标或完成按钮都返回上一页面，则需给箭头图标和完成按钮分别注册点击监听器，然后在onClick方法中调用finish方法。  </p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 活动类直接实现点击监听器的接口View.OnClickListener</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ActFinishActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span> </span>{</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>{</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_act_finish);</span><br><span class="line">    <span class="comment">// 给箭头图标注册点击监听器，ImageView由View类派生而来</span></span><br><span class="line">    findViewById(R.id.iv_back).setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">// 给完成按钮注册点击监听器，Button也由View类派生而来</span></span><br><span class="line">    findViewById(R.id.btn_finish).setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">  } </span><br><span class="line">  </span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>{ <span class="comment">// 点击事件的处理方法</span></span><br><span class="line">    <span class="keyword">if</span> (v.getId() == R.id.iv_back || v.getId() == R.id.btn_finish) {</span><br><span class="line">      finish(); <span class="comment">// 结束当前的活动页面</span></span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>所谓“打开页面”或“关闭页面”沿用了浏览网页的叫法，对于App而言，页面的真实名称是“活动”—<br>Activity。打开某个页面其实是启动某个活动，所以有startActivity方法却无openActivity方法；关闭某个页面其实是结束某个活动，所以有finish方法却无close方法。  </p><h2 id="Activity的生命周期"><a href="#Activity的生命周期" class="headerlink" title="Activity的生命周期"></a>Activity的生命周期</h2><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/study/android%E5%BC%80%E5%8F%91/Activity/activity%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.webp" alt="Activity的生命周"></p><p>App引入活动的概念而非传统的页面概念，单从字面意思理解，页面更像是静态的，而活动更像是动态的。每次创建新的活动页面，自动生成的Java代码都给出了onCreate方法，该方法用于执行活动创建的相关操作，包括加载XML布局、设置文本视图的初始文字、注册按钮控件的点击监听，等等。onCreate方法所代表的创建动作，正是一个活动最开始的行为，除了onCreate，活动还有其他几种生命周期行为，它们对应的方法说明如下：</p><ul><li><code>onCreate</code>：创建活动。此时会把页面布局加载进内存，进入了初始状态。</li><li><code>onStart</code>：开启活动。此时会把活动页面显示在屏幕上，进入了就绪状态。</li><li><code>onResume</code>：恢复活动。此时活动页面进入活跃状态，能够与用户正常交互，例如允许响应用户的点击动作、允许用户输入文字等。</li><li><code>onPause</code>：暂停活动。此时活动页面进入暂停状态（也就是退回就绪状态），无法与用户正常交互。</li><li><code>onStop</code>：停止活动。此时活动页面将不在屏幕上显示。</li><li><code>onDestroy</code>：销毁活动。此时回收活动占用的系统资源，把页面从内存中清除掉。</li><li><code>onRestart</code>：重启活动。处于停止状态的活动，若想重新开启的话，无须经历onCreate的重复创建过程，而是走onRestart的重启过程。</li><li><code>onNewIntent</code>：重用已有的活动实例。  </li></ul><p>如果一个Activity已经启动过，并且存在当前应用的Activity任务栈中，启动模式为<code>singleTask</code>，<br><code>singleInstance或singleTop</code>(此时已在任务栈顶端)，那么在此启动或回到这个Activity的时候，不<br>会创建新的实例，也就是不会执行<code>onCreate</code>方法，而是执行<code>onNewIntent</code>方法。  </p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ActStartActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span> </span>{</span><br><span class="line">  </span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">        Log.d(TAG, <span class="string">"ActStartActivity onCreate"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStart</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>.onStart();</span><br><span class="line">        Log.d(TAG, <span class="string">"ActStartActivity onStart"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>.onResume();</span><br><span class="line">        Log.d(TAG, <span class="string">"ActStartActivity onResume"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onPause</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>.onPause();</span><br><span class="line">        Log.d(TAG, <span class="string">"ActStartActivity onPause"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStop</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>.onStop();</span><br><span class="line">        Log.d(TAG, <span class="string">"ActStartActivity onStop"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        Log.d(TAG, <span class="string">"ActStartActivity onDestroy"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onRestart</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>.onRestart();</span><br><span class="line">        Log.d(TAG, <span class="string">"ActStartActivity onRestart"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">onCreat</span><br><span class="line">onStart</span><br><span class="line">onResume</span><br><span class="line">onPause  跳转到另外一个页面</span><br><span class="line">onStop  当前activity不可见</span><br><span class="line">onRestart  返回到当前activity</span><br><span class="line">onStart</span><br><span class="line">onResume</span><br><span class="line">onPause  返回到桌面</span><br><span class="line">onStop</span><br><span class="line">onDestroy</span><br></pre></td></tr></tbody></table></figure><p>打开新页面的方法调用顺序为:onCreate→onStart→onResume<br>关闭旧页面的方法调用顺序为:onPause→onStop→onDestroy</p><h2 id="Activity的启动模式"><a href="#Activity的启动模式" class="headerlink" title="Activity的启动模式"></a>Activity的启动模式</h2><p>系统给每个正在运行的App都分配了活动栈，栈里面容纳着已经创建且尚未销毁的活动信息。鉴于栈是一种先进后出、后进先出的数据结构，故而后面入栈的活动总是先出栈，假设3个活动的入栈顺序为：活动A→活动B→活动C，则它们的出栈顺序将变为：活动C→活动B→活动A，可见活动C结束之后会返回活动B，而不是返回活动A或者别的地方。</p><p>假定某个App分配到的活动栈大小为3，该App先后打开两个活动，此时活动栈的变动情况如图所示</p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/study/android%E5%BC%80%E5%8F%91/Activity/%E4%B8%A4%E4%B8%AA%E6%B4%BB%E5%8A%A8%E5%85%88%E5%90%8E%E5%85%A5%E6%A0%88.png" alt="入栈"></p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/study/android%E5%BC%80%E5%8F%91/Activity/%E4%B8%A4%E4%B8%AA%E6%B4%BB%E5%8A%A8%E5%85%88%E5%90%8E%E5%87%BA%E6%A0%88.png" alt="出栈"></p><p>Android允许在创建活动时指定该活动的启动模式，通过启动模式控制活动的出入栈行为。App提供了两种办法用于设置活动页面的启动模式，其一是修改<code>AndroidManifest.xml</code>，在指定的activity节点添加属性<code>android:launchMode</code>，表示本活动以哪个启动模式运行。其二是在代码中调用<code>Intent</code>对象的<code>setFlags</code>方法，表明后续打开的活动页面采用该启动标志。</p><p>打开<code>AndroidManifest.xml</code>，给<code>activity</code>节点添加属性<code>android:launchMode</code>，属性值填入<code>standard</code>表示采取标准模式，当然不添加属性的话默认就是标准模式。具体的activity节点配置内容示例如下：</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".JumpFirstActivity"</span> <span class="attr">android:launchMode</span>=<span class="string">"standard"</span> /&gt;</span>  </span><br></pre></td></tr></tbody></table></figure><ul><li><p><code>Standard</code>：标准模式，也是系统默认的启动模式。每次启动都会创建一个新的Activity实例，不管这个实例在栈中是否已经存上。Activity所在的任务栈为启动新Activity B的Activity A所在任务栈。具体就是Activity A所在的任务栈为S1，Activity A启动Activity B，那么Activty B的实例被创建后，会将Activity B的实例压入任务栈S1中。</p></li><li><p><code>SingleTop</code>：栈顶复用模式。在这种启动模式下，如果新Activity已经在任务栈的栈顶，那么，将不会重新创建新Activity，同时<code>onNewIntent()</code>方法被回调，通过此方法参数可以获取到请求信息。需要注意的是此Activity的<code>onCreate()</code>和<code>onStart()</code>方法也不会被调用。比如：有四个Activity，分别为ABCD，Activity D的<code>LaunchMode</code>是<code>SingleTop</code>模式；</p><ul><li>如果，在任务栈中四个Activity的排列是ABCD的顺序，此时，启动Activity D，由于Activity D位于任务栈栈顶，那么就不会创建Activity D实例，系统会调用Activity D的<code>onNewIntent()</code>方法。此时，Activity在任务栈中的顺序依然是ABCD。</li><li>如果，在任务栈中四个Activity的排列是ADBC的顺序，此时，启动Activity D，由于Activity D没有位于任务栈栈顶，那么，就会创建Activity D的新实例，并压下任务栈中。此时，Activity在任务栈中的顺序是ADBCD。</li></ul></li><li><p><code>SingleTask</code>：栈内复用模式。这是一种单实例模式，在这种模式下，只要Activity在一个任务栈中存在，那么多次启动此Activity都不会创建新的实例，和<code>SingleTop</code>一样，系统会调用其<code>onNewIntent()</code>方法。具体一点就是，有一个Activity A，并启动Activity A。首先寻找Activity A所需的任务栈，如果任务栈不存在，则创建任务栈并将Activity A压入栈中。如果Activity A所需的任务栈已经存在，则看Activity A在任务栈中，是否存在实例，如果不存在实例，就会创建新的实例并压入栈中；如果Activity A实例在已经存在的任务栈中，则将Activity A的实例调到栈顶，由于<code>SingleTask</code>有<code>clearTop</code>效果，在Activity A实例之上的所有Activity都会被出栈，直至Activity A到栈顶为止。比如：有四个Activity，分别为ABCD，并且Activity B的<code>launchMode</code>为<code>SingleTask</code>，此时启动Activity B。</p></li><li><ul><li>如果，Activity B所需的任务栈不存在，此时会创建其任务栈S1并将Activity B压入栈中。</li><li>如果，Activity B所需的任务栈S1已经存在，此时会在任务栈S1中查看Activity B的实例是否在栈中存在。假如，Activity B的实例在任务栈S1中存在，并且当前任务栈中已经存在几个Activity，在任务栈中的排列为ABCD，那么，此时启动Activity B，不会再创建Activity B的实例，系统会调用其Activity B的<code>onNewIntent()</code>方法。并且将Activity B调至栈顶，由于<code>SingleTask</code>有<code>clearTop</code>效果，CD两个Activity会被出栈，直至Activity B被调到栈顶。</li><li>如果，Activity B所需的任务栈S1已经存在，此时会在任务栈S1中查看是否存在Activity B的实例，如果不存在，则在任务栈S1中创建Activity B的实例，并压入任务栈S1中。</li></ul></li><li><p><code>SingleInstance</code>：单实例模式。这是一种加强版的<code>SingleTask</code>模式，它除了具有<code>SingleTask</code>的所有特性外，还加强了一点，就是具有此模式的Activity只能单独位于一个任务栈中。换句话说就是，一个Activity B是<code>SingleInstance</code>模式，在启动Activity B时，会创建Activity B所需的任务栈S2，并将Activity B压入栈中，并且这个任务栈S2，只会有一个Activity，那就是Activity B。由于栈内复用模式，再次启动Activity B时，均不会再创建Activity B的实例，系统会调用Activity B的<code>onNewIntent()</code>方法。除非，Activity B所需的任务栈S2被系统销毁，否则不会再创建Activity B的实例。</p></li></ul><p>Android App在创建任务栈时，默认使用的是包名为任务栈名称，当前也可以自定义指定任务栈名称，比如：</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:name</span>=<span class="string">".SecondActivity"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:launchMode</span>=<span class="string">"singleInstance"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:taskAffinity</span>=<span class="string">"com.example.task.task.SecondActivity11"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:allowTaskReparenting</span>=<span class="string">"true"</span>/&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>其中，属性<code>taskAffinity</code>与<code>allowTaskReparenting</code>是配合使用的，<code>taskAffinity</code>指定任务栈名称。属性<code>taskAffinity</code>只有在<code>SingleTask</code>和<code>SingleInstance</code>模式下有效。</p><h3 id="默认启动模式standard"><a href="#默认启动模式standard" class="headerlink" title="默认启动模式standard"></a>默认启动模式standard</h3><p>该模式可以被设定，不在 manifest 设定时候，Activity 的默认模式就是 standard。在该模式下，启动的 Activity 会依照启动顺序被依次压入 Task 栈中  </p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/study/android%E5%BC%80%E5%8F%91/Activity/%E9%BB%98%E8%AE%A4%E5%90%AF%E5%8A%A8%E6%A8%A1%E5%BC%8F.png"></p><h3 id="栈顶复用模式-singleTop"><a href="#栈顶复用模式-singleTop" class="headerlink" title="栈顶复用模式 singleTop"></a>栈顶复用模式 singleTop</h3><p>在该模式下，如果栈顶 Activity 为我们要新建的 Activity（目标Activity），那么就不会重复创建新的Activity  </p><p>适合开启渠道多、多应用开启调用的 Activity，通过这种设置可以避免已经创建过的 Activity 被重复创建，多数通过动态设置使用  </p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/study/android%E5%BC%80%E5%8F%91/Activity/%E6%A0%88%E9%A1%B6%E5%A4%8D%E7%94%A8%E6%A8%A1%E5%BC%8F.png"></p><h3 id="栈内复用模式-singleTask"><a href="#栈内复用模式-singleTask" class="headerlink" title="栈内复用模式 singleTask"></a>栈内复用模式 singleTask</h3><p>与 <code>singleTop</code>模式相似，只不过 <code>singleTop</code> 模式是只是针对栈顶的元素，而 <code>singleTask</code> 模式下，如果task 栈内存在目标 Activity 实例，则将 task 内的对应 Activity 实例之上的所有 Activity 弹出栈，并将对应 Activity 置于栈顶，获得焦点。  </p><p><strong>应用场景</strong></p><ul><li>程序主界面：不希望主界面被创建多次，而且在主界面退出的时候退出整个 App 是最好的效果。</li><li>耗费系统资源的Activity：对于那些及其耗费系统资源的 Activity，将其设为 <code>singleTask</code>模式，减少资源耗费。  </li></ul><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/study/android%E5%BC%80%E5%8F%91/Activity/%E6%A0%88%E5%86%85%E5%A4%8D%E7%94%A8%E6%A8%A1%E5%BC%8F.png"></p><h3 id="全局唯一模式-singleInstance"><a href="#全局唯一模式-singleInstance" class="headerlink" title="全局唯一模式 singleInstance"></a>全局唯一模式 singleInstance</h3><p>在该模式下，我们会为目标 Activity 创建一个新的 Task 栈，将目标 Activity 放入新的 Task，并让目标Activity获得焦点。新的 Task 有且只有这一个 Activity 实例。 如果已经创建过目标Activity 实例，则不会创建新的 Task，而是将以前创建过的 Activity 唤醒。</p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/study/android%E5%BC%80%E5%8F%91/Activity/%E5%85%A8%E5%B1%80%E5%94%AF%E4%B8%80%E6%A8%A1%E5%BC%8F.png"></p><h2 id="动态设置启动模式"><a href="#动态设置启动模式" class="headerlink" title="动态设置启动模式"></a>动态设置启动模式</h2><p>通过 Intent 动态设置 Activity启动模式 ， 如果同时有动态和静态设置，那么动态的优先级更高。  </p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">intent.setFlags();</span><br></pre></td></tr></tbody></table></figure><h3 id="FLAG-ACTIVITY-NEW-TASK"><a href="#FLAG-ACTIVITY-NEW-TASK" class="headerlink" title="FLAG_ACTIVITY_NEW_TASK"></a>FLAG_ACTIVITY_NEW_TASK</h3><p>跟 <code>singleInstance</code> 很相似，在给目标 Activity 设立此 Flag 后，会根据目标 Activity 的 <code>affinity </code>进行匹配，如果已经存在与其<code>affinity</code> 相同的 task，则将目标 Activity 压入此 Task。反之没有的话，则新建一个 task，新建的 task 的 <code>affinity</code> 值与目标 Activity 相同，然后将目标 Activity 压入此栈。</p><p>但它与 <code>singleInstance</code> 有不同的点，两点需要注意的地方：</p><ul><li>新的 Task 没有说只能存放一个目标 Activity，只是说决定是否新建一个 Task，而<code>singleInstance</code>模式下新的 Task 只能放置一个目标 Activity。</li><li>在同一应用下，如果 Activity 都是默认的 <code>affinity</code>，那么此 Flag 无效，而<code>singleInstance</code> 默认情况也会创建新的 Task。  </li></ul><h3 id="FLAG-ACTIVITY-SINGLE-TOP"><a href="#FLAG-ACTIVITY-SINGLE-TOP" class="headerlink" title="FLAG_ACTIVITY_SINGLE_TOP"></a>FLAG_ACTIVITY_SINGLE_TOP</h3><p>与静态设置中的 singleTop 效果相同  </p><h3 id="FLAG-ACTIVITY-CLEAR-TOP"><a href="#FLAG-ACTIVITY-CLEAR-TOP" class="headerlink" title="FLAG_ACTIVITY_CLEAR_TOP"></a>FLAG_ACTIVITY_CLEAR_TOP</h3><p>目标 Activity 会检查 Task 中是否存在此实例，如果没有则添加压入栈。如果有，就将位于 Task 中的对应 Activity 其上的所有 Activity 弹出栈，此时有以下两种情况：</p><ul><li><p>如果同时设置 <code>Flag_ACTIVITY_SINGLE_TOP</code> ，则直接使用栈内的对应 Activity。</p><ul><li>```java<br>intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);<figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 没有设置，则将栈内的对应 Activity 销毁重新创建。</span><br><span class="line"></span><br><span class="line">按位或运算符</span><br><span class="line">运算规则：0|0=0 0|1=1 1|0=1 1|1=1</span><br><span class="line">总结：参加运算的两个对象只要有一个为1，其值为1。</span><br><span class="line">例如：3|5即 0000 0011| 0000 0101 = 0000 0111，因此，3|5的值得7  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 在活动之间传递消息 </span><br><span class="line"></span><br><span class="line">## 显式Intent和隐式Intent</span><br><span class="line"></span><br><span class="line">Intent就是传递消息，是各个组件之间信息沟通的桥梁</span><br><span class="line"></span><br><span class="line">既能在Activity之间沟通，又能在Activity与Service之间沟通，也能在Activity与Broadcast之间沟通。总而言之，Intent用于Android各组件之间的通信，它主要完成下列3部分工作：</span><br><span class="line"></span><br><span class="line">- 标明本次通信请求从哪里来、到哪里去、要怎么走。</span><br><span class="line">- 发起方携带本次通信需要的数据内容，接收方从收到的意图中解析数据。</span><br><span class="line">- 发起方若想判断接收方的处理结果，意图就要负责让接收方传回应答的数据内容  </span><br><span class="line"></span><br><span class="line">Intent的组成部分见表  </span><br><span class="line"></span><br><span class="line">| 元素名称  | 设置方法     | 说明与用途                        |</span><br><span class="line">| --------- | ------------ | --------------------------------- |</span><br><span class="line">| Component | setComponent | 组件，它指定意图的来源与目标      |</span><br><span class="line">| Action    | setAction    | 动作，它指定意图的动作行为        |</span><br><span class="line">| Data      | setData      | 即Uri，它指定动作要操纵的数据路径 |</span><br><span class="line">| Category  | addCategory  | 类别，它指定意图的操作类别        |</span><br><span class="line">| Type      | setType      | 数据类型，它指定消息的数据类型    |</span><br><span class="line">| Extras    | putExtras    | 扩展信息，它指定装载的包裹信息    |</span><br><span class="line">| Flags     | setFlags     | 标志位，它指定活动的启动标志      |</span><br><span class="line"></span><br><span class="line">指定意图对象的目标有两种表达方式，一种是显式Intent，另一种是隐式Intent。  </span><br><span class="line"></span><br><span class="line">### 显式Intent</span><br><span class="line"></span><br><span class="line">直接指定来源活动与目标活动，属于精确匹配</span><br><span class="line"></span><br><span class="line">在构建一个意图对象时，需要指定两个参数，</span><br><span class="line"></span><br><span class="line">第一个参数表示跳转的来源页面，即“来源Activity.this”；</span><br><span class="line">第二个参数表示待跳转的页面，即“目标Activity.class”。</span><br><span class="line"></span><br><span class="line">具体的意图构建方式有如下3种：</span><br><span class="line"></span><br><span class="line">1. 在Intent的构造函数中指定，示例代码如下：</span><br><span class="line"></span><br><span class="line">   1. ```java</span><br><span class="line">      Intent intent = new Intent(this, ActNextActivity.class); // 创建一个目标确定的意图</span><br></pre></td></tr></tbody></table></figure></li></ul></li></ul><ol start="2"><li><p>调用意图对象的setClass方法指定，示例代码如下：</p><ol><li>```java<br>Intent intent = new Intent(); // 创建一个新意图<br>intent.setClass(this, ActNextActivity.class); // 设置意图要跳转的目标活动<figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">3. 调用意图对象的setComponent方法指定，示例代码如下：  </span><br><span class="line"></span><br><span class="line">   1. ```java</span><br><span class="line">      Intent intent = new Intent(); // 创建一个新意图</span><br><span class="line">      // 创建包含目标活动在内的组件名称对象</span><br><span class="line">      ComponentName component = new ComponentName(this, ActNextActivity.class);</span><br><span class="line">      intent.setComponent(component); // 设置意图携带的组件信息</span><br></pre></td></tr></tbody></table></figure></li></ol></li></ol><h3 id="隐式Intent"><a href="#隐式Intent" class="headerlink" title="隐式Intent"></a>隐式Intent</h3><p>没有明确指定要跳转的目标活动，只给出一个动作字符串让系统自动匹配，属于模糊匹配  </p><p>通常App不希望向外部暴露活动名称，只给出一个事先定义好的标记串，这样大家约定俗成、按图索骥就好，隐式Intent便起到了标记过滤作用。这个动作名称标记串，可以是自己定义的动作，也可以是已有的系统动作。</p><p>常见系统动作的取值说明见表  </p><table><thead><tr><th>Intent 类的系统动作常量名</th><th>系统动作的常量值</th><th>说明</th></tr></thead><tbody><tr><td>ACTION_MAIN</td><td>android.intent.action.MAIN</td><td>App启动时的入口</td></tr><tr><td>ACTION_VIEW</td><td>android.intent.action.VIEW</td><td>向用户显示数据</td></tr><tr><td>ACTION_SEND</td><td>android.intent.action.SEND</td><td>分享内容</td></tr><tr><td>ACTION_CALL</td><td>android.intent.action.CALL</td><td>直接拨号</td></tr><tr><td>ACITON_DIAL</td><td>android.intent.action.DIAL</td><td>准备拨号</td></tr><tr><td>ACTION_SENDTO</td><td>android.intent.action.SENDTO</td><td>发送短信</td></tr><tr><td>ACTION_ANSWER</td><td>android.intent.action.ANSWER</td><td>接听电话</td></tr></tbody></table><p>动作名称既可以通过<code>setAction</code>方法指定，也可以通过构造函数<code>Intent(String action)</code>直接生成意图对象。当然，由于动作是模糊匹配，因此有时需要更详细的路径，比如仅知道某人住在天通苑小区，并不能直接找到他家，还得说明他住在天通苑的哪一期、哪栋楼、哪一层、哪一个单元。</p><p>Uri和Category便是这样的路径与门类信息，Uri数据可通过构造函数<code>Intent(String action, Uri uri)</code>在生成对象时一起指定，也可通过<code>setData</code>方法指定；Category可通过<code>addCategory</code>方法指定，之所以用add而不用set方法，是因为一个意图允许设置多个Category，方便一起过滤。  </p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">String phoneNo = <span class="string">"12345"</span>;</span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent(); <span class="comment">// 创建一个新意图</span></span><br><span class="line">intent.setAction(Intent.ACTION_DIAL); <span class="comment">// 设置意图动作为准备拨号</span></span><br><span class="line">Uri uri = Uri.parse(<span class="string">"tel:"</span> + phoneNo); <span class="comment">// 声明一个拨号的Uri</span></span><br><span class="line">intent.setData(uri); <span class="comment">// 设置意图前往的路径</span></span><br><span class="line">startActivity(intent); <span class="comment">// 启动意图通往的活动页面</span></span><br></pre></td></tr></tbody></table></figure><p>隐式Intent还用到了过滤器的概念，把不符合匹配条件的过滤掉，剩下符合条件的按照优先顺序调用。</p><p>譬如创建一个App模块，<code>AndroidManifest.xml</code>里的<code>intent-filter</code>就是配置文件中的过滤器。像最常见的首页活动MainAcitivity，它的activity节点下面便设置了action和category的过滤条件。其中<code>android.intent.action.MAIN</code>表示App的入口动作，而<code>android.intent.category.LAUNCHER</code>表示在桌面上显示App图标，配置样例如下  </p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="向下一个Activity发送数据"><a href="#向下一个Activity发送数据" class="headerlink" title="向下一个Activity发送数据"></a>向下一个Activity发送数据</h2><p>Intent对象的setData方法只指定到达目标的路径，并非本次通信所携带的参数信息，真正的参数信息存放在Extras中。Intent重载了很多种putExtra方法传递各种类型的参数，包括整型、双精度型、字符串等基本数据类型，甚至Serializable这样的序列化结构。只是调用putExtra方法显然不好管理，像送快递一样大小包裹随便扔，不但找起来不方便，丢了也难以知道。所以Android引入了Bundle概念，可以把Bundle理解为超市的寄包柜或快递收件柜，大小包裹由Bundle统一存取，方便又安全。</p><p>Bundle内部用于存放消息的数据结构是Map映射，既可添加或删除元素，还可判断元素是否存在。开发者若要把Bundle数据全部打包好，只需调用一次意图对象的putExtras方法；若要把Bundle数据全部取出来，也只需调用一次意图对象的getExtras方法。Bundle对象操作各类型数据的读写方法说明见表  </p><table><thead><tr><th>数据类型</th><th>读方法</th><th>写方法</th></tr></thead><tbody><tr><td>整型数</td><td>getInt</td><td>putInt</td></tr><tr><td>浮点数</td><td>getFloat</td><td>putFloat</td></tr><tr><td>双精度数</td><td>getDouble</td><td>putDouble</td></tr><tr><td>布尔值</td><td>getBoolean</td><td>putBoolean</td></tr><tr><td>字符串</td><td>getString</td><td>putString</td></tr><tr><td>字符串数组</td><td>getStringArray</td><td>putStringArray</td></tr><tr><td>字符串列表</td><td>getStringArrayList</td><td>putStringArrayList</td></tr><tr><td>可序列化结构</td><td>getSerializable</td><td>putSerializable</td></tr></tbody></table><p>一个活动之间传递数据的例子，首先在上一个活动使用包裹封装好数据，把包裹塞给意图对象，再调用<code>startActivity</code>方法跳到意图指定的目标活动  </p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个意图对象，准备跳到指定的活动页面</span></span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, ActReceiveActivity.class);</span><br><span class="line">Bundle bundle = <span class="keyword">new</span> Bundle(); <span class="comment">// 创建一个新包裹</span></span><br><span class="line"><span class="comment">// 往包裹存入名为request_time的字符串</span></span><br><span class="line">bundle.putString(<span class="string">"request_time"</span>, DateUtil.getNowTime());</span><br><span class="line"><span class="comment">// 往包裹存入名为request_content的字符串</span></span><br><span class="line">bundle.putString(<span class="string">"request_content"</span>, tv_send.getText().toString());</span><br><span class="line">intent.putExtras(bundle); <span class="comment">// 把快递包裹塞给意图</span></span><br><span class="line">startActivity(intent); <span class="comment">// 跳转到意图指定的活动页面</span></span><br></pre></td></tr></tbody></table></figure><p>然后在下一个活动中获取意图携带的快递包裹，从包裹取出各参数信息，并将传来的数据显示到文本视图。  </p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 从布局文件中获取名为tv_receive的文本视图</span></span><br><span class="line">TextView tv_receive = findViewById(R.id.tv_receive);</span><br><span class="line"><span class="comment">// 从上一个页面传来的意图中获取快递包裹</span></span><br><span class="line">Bundle bundle = getIntent().getExtras();</span><br><span class="line"><span class="comment">// 从包裹中取出名为request_time的字符串</span></span><br><span class="line">String request_time = bundle.getString(<span class="string">"request_time"</span>);</span><br><span class="line"><span class="comment">// 从包裹中取出名为request_content的字符串</span></span><br><span class="line">String request_content = bundle.getString(<span class="string">"request_content"</span>);</span><br><span class="line">String desc = String.format(<span class="string">"收到请求消息：\n请求时间为%s\n请求内容为%s"</span>,</span><br><span class="line">request_time, request_content);</span><br><span class="line">tv_receive.setText(desc); <span class="comment">// 把请求消息的详情显示在文本视图上</span></span><br></pre></td></tr></tbody></table></figure><h2 id="向上一个Activity返回数据"><a href="#向上一个Activity返回数据" class="headerlink" title="向上一个Activity返回数据"></a>向上一个Activity返回数据</h2><p>数据传递经常是相互的，上一个页面不但把请求数据发送到下一个页面，有时候还要处理下一个页面的应答数据，所谓应答发生在下一个页面返回到上一个页面之际。如果只把请求数据发送到下一个页面，上一个页面调用startActivity方法即可；如果还要处理下一个页面的应答数据，此时就得分多步处理</p><ol><li><p>上一个页面打包好请求数据，调用<code>startActivityForResult</code>方法执行跳转动作，表示需要处理下一个页面的应答数据，该方法的第二个参数表示请求代码，它用于标识每个跳转的唯一性。  </p><ol><li>```java<br>String request = “你吃饭了吗？来我家吃吧”;<br>// 创建一个意图对象，准备跳到指定的活动页面<br>Intent intent = new Intent(this, ActResponseActivity.class);<br>Bundle bundle = new Bundle(); // 创建一个新包裹<br>// 往包裹存入名为request_time的字符串<br>bundle.putString(“request_time”, DateUtil.getNowTime());<br>// 往包裹存入名为request_content的字符串<br>bundle.putString(“request_content”, request);<br>intent.putExtras(bundle); // 把快递包裹塞给意图<br>// 期望接收下个页面的返回数据。第二个参数为本次请求代码<br>startActivityForResult(intent, 0);<figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">2. 下一个页面接收并解析请求数据，进行相应处理。  </span><br><span class="line"></span><br><span class="line">   1. ```java</span><br><span class="line">      // 从上一个页面传来的意图中获取快递包裹</span><br><span class="line">      Bundle bundle = getIntent().getExtras();</span><br><span class="line">      // 从包裹中取出名为request_time的字符串</span><br><span class="line">      String request_time = bundle.getString("request_time");</span><br><span class="line">      // 从包裹中取出名为request_content的字符串</span><br><span class="line">      String request_content = bundle.getString("request_content");</span><br><span class="line">      String desc = String.format("收到请求消息：\n请求时间为%s\n请求内容为%s",</span><br><span class="line">      request_time, request_content);</span><br><span class="line">      tv_request.setText(desc); // 把请求消息的详情显示在文本视图上</span><br></pre></td></tr></tbody></table></figure></li></ol></li><li><p>下一个页面在返回上一个页面时，打包应答数据并调用<code>setResult</code>方法返回数据包裹。<code>setResult</code>方法的第一个参数表示应答代码（成功还是失败），第二个参数为携带包裹的意图对象。  </p><ol><li>```java<br>String response = “我吃过了，还是你来我家吃”;<br>Intent intent = new Intent(); // 创建一个新意图<br>Bundle bundle = new Bundle(); // 创建一个新包裹<br>// 往包裹存入名为response_time的字符串<br>bundle.putString(“response_time”, DateUtil.getNowTime());<br>// 往包裹存入名为response_content的字符串<br>bundle.putString(“response_content”, response);<br>intent.putExtras(bundle); // 把快递包裹塞给意图<br>// 携带意图返回上一个页面。RESULT_OK表示处理成功<br>setResult(Activity.RESULT_OK, intent);<br>finish(); // 结束当前的活动页面<figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">4. 上一个页面重写方法`onActivityResult`，该方法的输入参数包含请求代码和结果代码，其中请求代码用于判断这次返回对应哪个跳转，结果代码用于判断下一个页面是否处理成功。如果下一个页面处理成功，再对返回数据解包操作  </span><br><span class="line"></span><br><span class="line">   1. ```java</span><br><span class="line">      // 从下一个页面携带参数返回当前页面时触发。其中requestCode为请求代码，</span><br><span class="line">      // resultCode为结果代码，intent为下一个页面返回的意图对象</span><br><span class="line">      @Override</span><br><span class="line">      protected void onActivityResult(int requestCode, int resultCode, Intent intent){ // 接收返回数据</span><br><span class="line">        super.onActivityResult(requestCode, resultCode, intent);</span><br><span class="line">        // 意图非空，且请求代码为之前传的0，结果代码也为成功</span><br><span class="line">        if (intent!=null &amp;&amp; requestCode==0 &amp;&amp; resultCode== Activity.RESULT_OK) {</span><br><span class="line">          Bundle bundle = intent.getExtras(); // 从返回的意图中获取快递包裹</span><br><span class="line">          // 从包裹中取出名叫response_time的字符串</span><br><span class="line">          String response_time = bundle.getString("response_time");</span><br><span class="line">          // 从包裹中取出名叫response_content的字符串</span><br><span class="line">          String response_content = bundle.getString("response_content");</span><br><span class="line">          String desc = String.format("收到返回消息：\n应答时间为：%s\n应答内容为：%s",</span><br><span class="line">          response_time, response_content);</span><br><span class="line">          tv_response.setText(desc); // 把返回消息的详情显示在文本视图上</span><br><span class="line">        }</span><br><span class="line">      }</span><br></pre></td></tr></tbody></table></figure></li></ol></li></ol><h1 id="为活动补充附加信息"><a href="#为活动补充附加信息" class="headerlink" title="为活动补充附加信息"></a>为活动补充附加信息</h1><p>可以把字符串参数放到字符串资源文件中，待App运行之时再从资源文件读取字符串值；接着还能在AndroidManifest.xml中给指定活动配置专门的元数据，App运行时即可获取对应活动的元数据信息；然后利用元数据的resource属性配置更复杂的XML定义，从而为App注册在长按桌面之时弹出的快捷菜单。  </p><h2 id="利用资源文件配置字符串"><a href="#利用资源文件配置字符串" class="headerlink" title="利用资源文件配置字符串"></a>利用资源文件配置字符串</h2><p>利用Bundle固然能在页面跳转的时候传送数据，但这仅限于在代码中传递参数，如果要求临时修改某个参数的数值，就得去改Java代码。然而直接修改Java代码有两个弊端：</p><p>代码文件那么多，每个文件又有许多行代码，一下子还真不容易找到修改的地方。</p><p>每次改动代码都得重新编译，让Android Studio编译的功夫也稍微费点时间。</p><p>有鉴于此，对于可能手工变动的参数，通常把参数名称与参数值的对应关系写入配置文件，由程序在运行时读取配置文件，这样只需修改配置文件就能改变对应数据了。<code>res\values</code>目录下面的<code>strings.xml</code>就用来配置字符串形式的参数，打开该文件，发现里面已经存在名为app_name的字符串参数，它配置的是当前模块的应用名称。现在可于app_name下方补充一行参数配置，参数名称叫作“weather_str”，参数值则为“晴天”，具体的配置内容如下所示：  </p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"weather_str"</span>&gt;</span>晴天<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>接着打开活动页面的Java代码，调用<code>getString</code>方法即可根据<code>R.string.参数名称</code>获得指定参数的字符串值。  </p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 显示字符串资源</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showStringResource</span><span class="params">()</span> </span>{</span><br><span class="line">  String value = getString(R.string.weather_str); <span class="comment">// 从strings.xml获取名叫weather_str的字符串值</span></span><br><span class="line">  tv_resource.setText(<span class="string">"来自字符串资源：今天的天气是"</span>+value); <span class="comment">// 在文本视图上显示文字</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>上面的<code>getString</code>方法来自于<code>Context</code>类，由于页面所在的活动类<code>AppCompatActivity</code>追根溯源来自<code>Context这</code>个抽象类，因此凡是活动页面代码都能直接调用<code>getString</code>方法。  </p><h2 id="利用元数据传递配置信息"><a href="#利用元数据传递配置信息" class="headerlink" title="利用元数据传递配置信息"></a>利用元数据传递配置信息</h2><p>尽管资源文件能够配置字符串参数，然而有时候为安全起见，某个参数要给某个活动专用，并不希望其他活动也能获取该参数，此时就不方便到处使用getString了。</p><p>Activity提供了元数据（Metadata）的概念，元数据是一种描述其他数据的数据，它相当于描述固定活动的参数信息。打开<code>AndroidManifest.xml</code>，在测试活动的activity节点内部添加<code>meta-data</code>标签，通过属性name指定元数据的名称，通过属性value指定元数据的值。仍以天气为例，添加<code>meta-data</code>标签之后的activity节点如下所示：</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".MetaDataActivity"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">"weather"</span> <span class="attr">android:value</span>=<span class="string">"晴天"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>元数据的value属性既可直接填字符串，也可引用strings.xml已定义的字符串资源，引用格式形如<br><code>@string/字符串的资源名称</code>。下面便是采取引用方式的activity节点配置：</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".MetaDataActivity"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:name</span>=<span class="string">"weather"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:value</span>=<span class="string">"@string/weather_str"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>配置好了activity节点的<code>meta-data</code>标签，再回到Java代码获取元数据信息，获取步骤分为下列3步：</p><ul><li>调用getPackageManager方法获得当前应用的包管理器。</li><li>调用包管理器的getActivityInfo方法获得当前活动的信息对象。</li><li>活动信息对象的metaData是Bundle包裹类型，调用包裹对象的getString即可获得指定名称的参数值。</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 显示配置的元数据</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showMetaData</span><span class="params">()</span> </span>{</span><br><span class="line">  <span class="keyword">try</span> {</span><br><span class="line">    PackageManager pm = getPackageManager(); <span class="comment">// 获取应用包管理器</span></span><br><span class="line">    <span class="comment">// 从应用包管理器中获取当前的活动信息</span></span><br><span class="line">    ActivityInfo act = pm.getActivityInfo(getComponentName(),PackageManager.GET_META_DATA);</span><br><span class="line">    Bundle bundle = act.metaData; <span class="comment">// 获取活动附加的元数据信息</span></span><br><span class="line">    String value = bundle.getString(<span class="string">"weather"</span>); <span class="comment">// 从包裹中取出名叫weather的字符串</span></span><br><span class="line">    tv_meta.setText(<span class="string">"来自元数据信息：今天的天气是"</span>+value); <span class="comment">// 在文本视图上显示文字</span></span><br><span class="line">  } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="给应用页面注册快捷方式"><a href="#给应用页面注册快捷方式" class="headerlink" title="给应用页面注册快捷方式"></a>给应用页面注册快捷方式</h2><p>元数据不单单能传递简单的字符串参数，还能传送更复杂的资源数据  </p><p>元数据的meta-data标签除了name属性和value属性，还拥有resource属性，该属性可指定一个XML文件，表示元数据想要的复杂信息保存于XML数据之中  </p><p>借助元数据以及指定的XML配置可以完成快捷方式功能</p><p>首先打开<code>res/values</code>目录下的<code>strings.xml</code>，在<code>resources</code>节点内部添加下述的3组（每组两个，共6个）字符串配置，每组都代表一个菜单项，每组又分为长名称和短名称，平时优先展示长名称，当长名称放不下时才展示短名称。这3组6个字符串的配置定义示例如下  </p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"first_short"</span>&gt;</span>first<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"first_long"</span>&gt;</span>启停活动<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"second_short"</span>&gt;</span>second<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"second_long"</span>&gt;</span>来回跳转<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"third_short"</span>&gt;</span>third<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"third_long"</span>&gt;</span>登录返回<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>接着在res目录下创建名为xml的文件夹，并在该文件夹创建<code>shortcuts.xml</code>，这个XML文件用来保存3组菜单项的快捷方式定义  </p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shortcuts</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">shortcut</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:enabled</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:shortcutId</span>=<span class="string">"first"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:shortcutLongLabel</span>=<span class="string">"@string/first_long"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:shortcutShortLabel</span>=<span class="string">"@string/first_short"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">intent</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:action</span>=<span class="string">"android.intent.action.VIEW"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:targetClass</span>=<span class="string">"com.dongnaoedu.chapter04.ActStartActivity"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:targetPackage</span>=<span class="string">"com.dongnaoedu.chapter04"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">categories</span> <span class="attr">android:name</span>=<span class="string">"android.shortcut.conversation"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">shortcut</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">shortcut</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:enabled</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:shortcutId</span>=<span class="string">"second"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:shortcutLongLabel</span>=<span class="string">"@string/second_long"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:shortcutShortLabel</span>=<span class="string">"@string/second_short"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">intent</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:action</span>=<span class="string">"android.intent.action.VIEW"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:targetClass</span>=<span class="string">"com.dongnaoedu.chapter04.JumpFirstActivity"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:targetPackage</span>=<span class="string">"com.dongnaoedu.chapter04"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">categories</span> <span class="attr">android:name</span>=<span class="string">"android.shortcut.conversation"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">shortcut</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">shortcut</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:enabled</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:shortcutId</span>=<span class="string">"third"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:shortcutLongLabel</span>=<span class="string">"@string/third_long"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:shortcutShortLabel</span>=<span class="string">"@string/third_short"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">intent</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:action</span>=<span class="string">"android.intent.action.VIEW"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:targetClass</span>=<span class="string">"com.dongnaoedu.chapter04.LoginInputActivity"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:targetPackage</span>=<span class="string">"com.dongnaoedu.chapter04"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">categories</span> <span class="attr">android:name</span>=<span class="string">"android.shortcut.conversation"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">shortcut</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shortcuts</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>由上述的XML例子中看到，每个shortcut节点都代表了一个菜单项，该节点的各属性说明如下：</p><ul><li><code>shortcutId</code>：快捷方式的编号。</li><li><code>enabled</code>：是否启用快捷方式。true表示启用，false表示禁用。</li><li><code>icon</code>：快捷菜单左侧的图标。</li><li><code>shortcutShortLabel</code>：快捷菜单的短标签。</li><li><code>shortcutLongLabel</code>：快捷菜单的长标签。优先展示长标签的文本，长标签放不下时才展示短标签的文本。</li></ul><p>以上的节点属性仅仅指明了每项菜单的基本规格，点击菜单项之后的跳转动作还要由<code>shortcut</code>内部的intent节点定义，该节点主要有<code>targetPackage</code>与<code>targetClass</code>两个属性需要修改，其中<code>targetPackage</code>属性固定为当前App的包名，而<code>targetClass</code>属性描述了菜单项对应的活动类完整路径。</p><p>然后打开<code>AndroidManifest.xml</code>，找到<code>MainActivity</code>所在的<code>activity</code>节点，在该节点内部补充如下的元数据配置，其中<code>name</code>属性为<code>android.app.shortcuts</code>，而<code>resource</code>属性为<code>@xml/shortcuts</code>：</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">"android.app.shortcuts"</span><span class="attr">android:resource</span>=<span class="string">"@xml/shortcuts"</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>这行元数据的作用，是告诉App首页有个快捷方式菜单，其资源内容参见位于xml目录下的<code>shortcuts.xml</code>。完整的activity节点配置示例如下  </p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 指定快捷方式。在桌面上长按应用图标，就会弹出@xml/shortcuts所描述的快捷菜单 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">"android.app.shortcuts"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:resource</span>=<span class="string">"@xml/shortcuts"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/study/android%E5%BC%80%E5%8F%91/Activity/%E7%BB%99%E5%BA%94%E7%94%A8%E6%B3%A8%E5%86%8C%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F.png" alt="注册快捷方式"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kenken-xr/blog-images/images/study/android%E5%BC%80%E5%8F%91/Activity/activity.png&quot; alt=&quot;Acti</summary>
      
    
    
    
    <category term="有在认真上班" scheme="https://kenken-xr.github.io/blog/categories/%E6%9C%89%E5%9C%A8%E8%AE%A4%E7%9C%9F%E4%B8%8A%E7%8F%AD/"/>
    
    
    <category term="Android" scheme="https://kenken-xr.github.io/blog/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>20230227</title>
    <link href="https://kenken-xr.github.io/blog/2023/02/27/20230227/"/>
    <id>https://kenken-xr.github.io/blog/2023/02/27/20230227/</id>
    <published>2023-02-27T11:56:43.000Z</published>
    <updated>2023-09-14T02:06:33.983Z</updated>
    
    <content type="html"><![CDATA[<h1 id="今天吃什么"><a href="#今天吃什么" class="headerlink" title="今天吃什么"></a>今天吃什么</h1><p>吃蒸饺</p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230227/%E6%97%A9%E9%A5%AD"></p><p>吃沙拉<br>一般般 </p><blockquote><p>超能鹿战队</p></blockquote><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230227/%E4%B8%AD%E9%A5%AD"></p><p>吃肉夹馍</p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230227/%E6%99%9A%E9%A5%AD"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;今天吃什么&quot;&gt;&lt;a href=&quot;#今天吃什么&quot; class=&quot;headerlink&quot; title=&quot;今天吃什么&quot;&gt;&lt;/a&gt;今天吃什么&lt;/h1&gt;&lt;p&gt;吃蒸饺&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ken</summary>
      
    
    
    
    <category term="今天在腾讯吃什么" scheme="https://kenken-xr.github.io/blog/categories/%E4%BB%8A%E5%A4%A9%E5%9C%A8%E8%85%BE%E8%AE%AF%E5%90%83%E4%BB%80%E4%B9%88/"/>
    
    
  </entry>
  
  <entry>
    <title>直播界面适配平板大屏幕</title>
    <link href="https://kenken-xr.github.io/blog/2023/02/27/%E7%9B%B4%E6%92%AD%E7%95%8C%E9%9D%A2%E9%80%82%E9%85%8D%E5%B9%B3%E6%9D%BF%E5%A4%A7%E5%B1%8F%E5%B9%95/"/>
    <id>https://kenken-xr.github.io/blog/2023/02/27/%E7%9B%B4%E6%92%AD%E7%95%8C%E9%9D%A2%E9%80%82%E9%85%8D%E5%B9%B3%E6%9D%BF%E5%A4%A7%E5%B1%8F%E5%B9%95/</id>
    <published>2023-02-27T02:20:47.000Z</published>
    <updated>2023-09-14T02:06:33.985Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>直播界面适配平板大屏幕（车机屏幕）</p><h2 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h2><p>预计 2/15～2/17 + 2/20</p><h2 id="内容拆分"><a href="#内容拆分" class="headerlink" title="内容拆分"></a>内容拆分</h2><ol><li>检查登录页是否有显示异常（布局重叠）</li><li>新增页面<ol><li>设备列表Activity（仅横屏，复用设备卡片网格布局，点击进入直播查看Activity）</li><li> 直播查看Activity（仅横屏，只保留看直播视频功能）</li></ol></li><li> 临时修改跳转：启动APP直接进入新增的设备列表页</li><li>功能对接<ol><li>参考现有的直播页，利用已有的代码实现</li><li> 列表页点击卡片跳转设备直播页</li><li>进入直播页面就加载直播视频</li><li>加载失败的时候展示重试按钮（状态）</li><li>对接现有的播放器手势操作：滑动到边缘控制云台</li></ol></li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><p>强制Activity横屏或竖屏：<a href="https://blog.csdn.net/Smile_Qian/article/details/99187728">https://blog.csdn.net/Smile_Qian/article/details/99187728</a></p><ol><li><code>requestedOrientation = ActivityInfo.SCREEN_ORIENTATION_USER_PORTRAIT</code></li></ol></li><li><p>卡片网格布局：<a href="https://www.cnblogs.com/guanxinjing/p/13037271.html">https://www.cnblogs.com/guanxinjing/p/13037271.html</a></p></li><li><p>界面跳转封装：com.danale.edge.base.BaseNavigation</p></li><li><p>当前摄像头直播界面：com.danale.edge.ui.devicecontrol.ipc.IPCLiveFragment</p></li><li><p>视频渲染View手势处理封装类：com.danale.edge.ui.common.view.ScaleTextureView</p></li><li><p>设置点击图标拉起的启动Activity：</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span></span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="测试账号"><a href="#测试账号" class="headerlink" title="测试账号"></a>测试账号</h2><p>15105982803</p><p>App_2021</p><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><p>大概的逻辑</p><ul><li><p>主页面</p><ul><li><p><code>LandScapeListActivity</code>作为主页面，在里面放置<code>activity_land_scape_list</code>设备列表</p></li><li><p><code>activity_land_scape_list</code>中绑定对应的<code>LandScapeListViewModel</code></p></li><li><p><code>LandScapeListViewModel</code>中设置onclick函数，通过路由跳转到直播页面</p></li></ul></li><li><p>直播页</p><ul><li><code>LandScapeIPCActivity</code>作为直播的主页面，内部放置<code>DeviceListToIPCFragment</code>容器</li></ul></li></ul><h2 id="主页"><a href="#主页" class="headerlink" title="主页"></a>主页</h2><p>由于主页是通过Fragment切换动态创建的，所以首先创建一个新的Fragment放置设备列表</p><h3 id="LandScapeListActivity-kt"><a href="#LandScapeListActivity-kt" class="headerlink" title="LandScapeListActivity.kt"></a>LandScapeListActivity.kt</h3><p>创建主页的activity，绑定对应的xml布局文件</p><p><code>ui/devicelist/landscape/LandScapeListActivity.kt</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.danale.edge.ui.devicelist.landscape</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.R</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.base.BaseActivity</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LandScapeListActivity</span> : <span class="type">BaseActivity</span></span>() {</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> {</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_land_scape_list)  <span class="comment">// 布局文件</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="activity-land-scape-list-xml"><a href="#activity-land-scape-list-xml" class="headerlink" title="activity_land_scape_list.xml"></a>activity_land_scape_list.xml</h3><p>activity布局文件，内部套一个Fragment</p><p><code>layout/activity_land_scape_list.xml</code></p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">layout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".ui.VideoFlowActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:keepScreenOn</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@color/black"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">androidx.fragment.app.FragmentContainerView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/fragment_container"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">"com.danale.edge.ui.devicelist.landscape.LandScapeListFragment"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">tools:layout</span>=<span class="string">"@layout/fragment_land_scape_list"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="fragment-land-scape-list-xml"><a href="#fragment-land-scape-list-xml" class="headerlink" title="fragment_land_scape_list.xml"></a>fragment_land_scape_list.xml</h3><p>创建主页的Fragment组件，通过variable实现数据绑定</p><p>通过RecyclerView实现网格布局</p><p><code>layout/fragment_land_scape_list.xml</code></p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">layout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">"viewModel"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">"com.danale.edge.ui.devicelist.landscape.LandScapeListViewModel"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@color/app_std_background_gray"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">com.danale.edge.ui.common.view.TopSafeAreaGuideLine</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/safe_area_top_guide"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintGuide_begin</span>=<span class="string">"24dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">tools:ignore</span>=<span class="string">"MissingConstraints"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/component_title_bar"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">layout</span>=<span class="string">"@layout/component_title_bar"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">"@id/safe_area_top_guide"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">androidx.recyclerview.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/recycler_view"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">"@id/component_title_bar"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="LandScapeListFragment-kt"><a href="#LandScapeListFragment-kt" class="headerlink" title="LandScapeListFragment.kt"></a>LandScapeListFragment.kt</h3><p>实现Fragment的布局和绑定，添加binding和ViewModel，在<code>GridLayoutManager(requireContext(), 4)</code>处设置布局样式</p><p><code>com/danale/edge/ui/devicelist/landscape/LandScapeListFragment.kt</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.danale.edge.ui.devicelist.landscape</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater</span><br><span class="line"><span class="keyword">import</span> android.view.View</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup</span><br><span class="line"><span class="keyword">import</span> androidx.databinding.DataBindingUtil</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.ViewModelProvider</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.<span class="keyword">get</span></span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.GridLayoutManager</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.R</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.base.BaseFragment</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.databinding.FragmentLandScapeListBinding</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.usersdk.type.DeviceInfo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LandScapeListFragment</span> : <span class="type">BaseFragment</span></span>() {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> binding: FragmentLandScapeListBinding</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> viewModel: LandScapeListViewModel</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateView</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">        inflater: <span class="type">LayoutInflater</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">        container: <span class="type">ViewGroup</span>?,</span></span></span><br><span class="line"><span class="params"><span class="function">        savedInstanceState: <span class="type">Bundle</span>?</span></span></span><br><span class="line"><span class="params"><span class="function">    )</span></span>: View {</span><br><span class="line"></span><br><span class="line">        logger.i(TAG, <span class="string">"onCreateView"</span>)</span><br><span class="line"></span><br><span class="line">        binding =</span><br><span class="line">            DataBindingUtil.inflate(inflater, R.layout.fragment_land_scape_list, container, <span class="literal">false</span>)  <span class="comment">// 绑定数据</span></span><br><span class="line">        binding.lifecycleOwner = viewLifecycleOwner  <span class="comment">// 生命周期</span></span><br><span class="line"></span><br><span class="line">        viewModel = ViewModelProvider(requireActivity()).<span class="keyword">get</span>()  <span class="comment">// 绑定ViewModel</span></span><br><span class="line">        observeNavigation(viewModel)  <span class="comment">// 处理BaseViewModel的导航请求</span></span><br><span class="line"></span><br><span class="line">        binding.recyclerView.apply {</span><br><span class="line">            adapter = viewModel.adapterForClassCode(DeviceInfo.DEVICE_TYPE_IPC)</span><br><span class="line">            <span class="comment">// 一行四列</span></span><br><span class="line">            layoutManager = GridLayoutManager(requireContext(), <span class="number">4</span>)</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> binding.root</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onResume</span><span class="params">()</span></span> {</span><br><span class="line">        <span class="keyword">super</span>.onResume()</span><br><span class="line">        setStatusBarDarkText(<span class="literal">true</span>)  <span class="comment">// 切换状态栏文本颜色,true为深色</span></span><br><span class="line">        viewModel.loadDeviceList()  <span class="comment">// 加载设备列表</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="LandScapeListViewModel-kt"><a href="#LandScapeListViewModel-kt" class="headerlink" title="LandScapeListViewModel.kt"></a>LandScapeListViewModel.kt</h3><p>ViewModel文件，用来实现内部逻辑</p><p><code>com/danale/edge/ui/devicelist/landscape/LandScapeListViewModel.kt</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.danale.edge.ui.devicelist.landscape</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Application</span><br><span class="line"><span class="keyword">import</span> android.content.Intent</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.base.BaseNavigation</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.ui.devicelist.ListDeviceViewModel</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.ui.devicelist.card.CardAdapter</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.usersdk.type.DeviceInfo</span><br><span class="line"><span class="keyword">import</span> dagger.hilt.android.lifecycle.HiltViewModel</span><br><span class="line"><span class="keyword">import</span> javax.inject.Inject</span><br><span class="line"></span><br><span class="line"><span class="meta">@HiltViewModel</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LandScapeListViewModel</span> <span class="meta">@Inject</span> <span class="keyword">constructor</span></span>(application: Application) :</span><br><span class="line">    ListDeviceViewModel(application), CardAdapter.Delegate {</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *跳转直播</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">navigateDevicePage</span><span class="params">(item: <span class="type">DeviceInfo</span>)</span></span> {</span><br><span class="line">        <span class="keyword">val</span> type = item.getDeviceType()</span><br><span class="line">        <span class="keyword">if</span> (type != DeviceInfo.DEVICE_TYPE_IPC) <span class="keyword">return</span>  <span class="comment">// 判断设备类型</span></span><br><span class="line"></span><br><span class="line">        item.getDeviceInfoDid()?.let { did -&gt;</span><br><span class="line">            <span class="keyword">val</span> intent = Intent().apply {</span><br><span class="line">                putExtra(BaseNavigation.Constants.EXTRA_PLATFORM_DEVICE_ID_32, did)</span><br><span class="line">                putExtra(</span><br><span class="line">                    BaseNavigation.Constants.EXTRA_PLATFORM_DEVICE_LIKE_NAME,</span><br><span class="line">                    item.getDeviceInfoLikeName()</span><br><span class="line">                )</span><br><span class="line">            }</span><br><span class="line">            navigationRequiredEvent.postValue(</span><br><span class="line">                BaseNavigation(</span><br><span class="line">                    BaseNavigation.Route.CONTROL_LAND_SCAPE_IPC,  <span class="comment">// 进入直播页</span></span><br><span class="line">                    intent</span><br><span class="line">                )</span><br><span class="line">            )</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="直播页"><a href="#直播页" class="headerlink" title="直播页"></a>直播页</h2><h3 id="LandScapeIPCActivity-kt"><a href="#LandScapeIPCActivity-kt" class="headerlink" title="LandScapeIPCActivity.kt"></a>LandScapeIPCActivity.kt</h3><p>创建一个直播页的activity</p><p><code>com/danale/edge/ui/devicecontrol/landscape/LandScapeIPCActivity.kt</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.danale.edge.ui.devicecontrol.landscape</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> androidx.activity.viewModels</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.R</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.base.BaseActivity</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.base.BaseNavigation</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.foundation.privacy.Fuzzy</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.ui.devicecontrol.common.DeviceLiveViewModel</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * IPC入口Activity到直播页</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LandScapeIPCActivity</span> : <span class="type">BaseActivity</span></span>() {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> liveVm: DeviceLiveViewModel <span class="keyword">by</span> viewModels()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> {</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_land_scape_ipc)  <span class="comment">// 布局文件</span></span><br><span class="line"></span><br><span class="line">        intent?.let { intent -&gt;</span><br><span class="line">            intent.getStringExtra(BaseNavigation.Constants.EXTRA_PLATFORM_DEVICE_ID_32)</span><br><span class="line">                ?.let { did -&gt;</span><br><span class="line">                    logger.d(TAG, <span class="string">"onCreate, did=<span class="subst">${Fuzzy.interval(did)}</span>"</span>)</span><br><span class="line">                    liveVm.deviceId32 = did</span><br><span class="line">                }</span><br><span class="line">            intent.getStringExtra(BaseNavigation.Constants.EXTRA_PLATFORM_DEVICE_LIKE_NAME)</span><br><span class="line">                ?.let { name -&gt;</span><br><span class="line">                    logger.d(TAG, <span class="string">"onCreate, name=<span class="subst">${Fuzzy.interval(name)}</span>"</span>)</span><br><span class="line">                    liveVm.observableDeviceName.<span class="keyword">set</span>(name)</span><br><span class="line">                }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="activity-land-scape-ipc-xml"><a href="#activity-land-scape-ipc-xml" class="headerlink" title="activity_land_scape_ipc.xml"></a>activity_land_scape_ipc.xml</h3><p><code>layout/activity_land_scape_ipc.xml</code></p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".ui.devicecontrol.landscape.LandScapeIPCActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.fragment.app.FragmentContainerView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/fragment_container_ipc"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">"com.danale.edge.ui.devicecontrol.landscape.LandScapeIPCLiveFragment"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:layout</span>=<span class="string">"@layout/fragment_land_scape_ipc_live"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="fragment-land-scape-ipc-live-xml"><a href="#fragment-land-scape-ipc-live-xml" class="headerlink" title="fragment_land_scape_ipc_live.xml"></a>fragment_land_scape_ipc_live.xml</h3><p><code>layout/fragment_land_scape_ipc_live.xmll</code></p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">layout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">"viewModel"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">"com.danale.edge.ui.devicecontrol.common.DeviceLiveViewModel"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">import</span> <span class="attr">type</span>=<span class="string">"android.view.View"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@color/black"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!--顶部安全距离--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">com.danale.edge.ui.common.view.TopSafeAreaGuideLine</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/safe_area_top_guide"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintGuide_begin</span>=<span class="string">"24dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">tools:ignore</span>=<span class="string">"MissingConstraints"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">com.danale.edge.ui.common.view.ScaleTextureView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/texture_view"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">androidx.appcompat.widget.LinearLayoutCompat</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">"start"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:paddingHorizontal</span>=<span class="string">"12dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:paddingVertical</span>=<span class="string">"4dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:visibility</span>=<span class="string">"visible"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">"@id/safe_area_top_guide"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="comment">&lt;!--返回按钮--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">androidx.appcompat.widget.AppCompatImageView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/iv_back_icon"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"48dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"48dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginHorizontal</span>=<span class="string">"3dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginVertical</span>=<span class="string">"15dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:padding</span>=<span class="string">"6dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:srcCompat</span>=<span class="string">"@mipmap/ic_back_white"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">androidx.appcompat.widget.LinearLayoutCompat</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!--重新加载组件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">com.github.ybq.android.spinkit.SpinKitView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">style</span>=<span class="string">"@style/SpinKitView.ThreeBounce"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:visibility</span>=<span class="string">"@{viewModel.observableVideoState.showLoadingUi ? View.VISIBLE : View.GONE}"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:SpinKit_Color</span>=<span class="string">"@color/white"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"@id/texture_view"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"@id/texture_view"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"@id/texture_view"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"@id/texture_view"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">androidx.appcompat.widget.AppCompatTextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">"@drawable/bg_round_color"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:backgroundTint</span>=<span class="string">"@color/app_std_white_20"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:onClick</span>=<span class="string">"@{viewModel::onClickLoadLiveVideo}"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:paddingHorizontal</span>=<span class="string">"24dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:paddingVertical</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"@string/text_retry_loading"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">"@color/white"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:visibility</span>=<span class="string">"@{viewModel.observableVideoState.showErrorUi ? View.VISIBLE : View.GONE}"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"@id/texture_view"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">"@id/texture_view"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">"@id/texture_view"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"@id/texture_view"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/work/%E8%BD%A6%E6%9C%BA%E5%B1%8F%E5%B9%95%E9%80%82%E9%85%8D/%E7%9B%B4%E6%92%AD%E9%A1%B5xml.png"></p><h3 id="LandScapeIPCLiveFragment-kt"><a href="#LandScapeIPCLiveFragment-kt" class="headerlink" title="LandScapeIPCLiveFragment.kt"></a>LandScapeIPCLiveFragment.kt</h3><p><code>com/danale/edge/ui/devicecontrol/landscape/LandScapeIPCLiveFragment.kt</code></p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.danale.edge.ui.devicecontrol.landscape</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.res.Configuration</span><br><span class="line"><span class="keyword">import</span> android.graphics.SurfaceTexture</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> android.view.*</span><br><span class="line"><span class="keyword">import</span> androidx.activity.result.ActivityResultLauncher</span><br><span class="line"><span class="keyword">import</span> androidx.activity.result.contract.ActivityResultContracts</span><br><span class="line"><span class="keyword">import</span> androidx.databinding.DataBindingUtil</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.ViewModelProvider</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.<span class="keyword">get</span></span><br><span class="line"><span class="keyword">import</span> com.danale.edge.R</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.base.BaseFragment</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.databinding.FragmentLandScapeIpcLiveBinding</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.foundation.media.PcmTrack</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.ui.common.view.ScaleTextureView</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.ui.devicecontrol.common.DeviceLiveViewModel</span><br><span class="line"><span class="keyword">import</span> com.danale.edge.usersdk.usecase.UserSdkUseCase</span><br><span class="line"><span class="keyword">import</span> javax.inject.Inject</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 直播页具体内容</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LandScapeIPCLiveFragment</span> : <span class="type">BaseFragment</span></span>(), TextureView.SurfaceTextureListener {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> binding: FragmentLandScapeIpcLiveBinding</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> viewModel: DeviceLiveViewModel</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> requestPermissionLauncher: ActivityResultLauncher&lt;String&gt;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> surfaceCallback: ((Surface) -&gt; <span class="built_in">Unit</span>)? = <span class="literal">null</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> surface: Surface? = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Inject</span></span><br><span class="line">    <span class="keyword">lateinit</span> <span class="keyword">var</span> sdk: UserSdkUseCase</span><br><span class="line"></span><br><span class="line">    <span class="keyword">lateinit</span> <span class="keyword">var</span> deviceId32: String</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateView</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">        inflater: <span class="type">LayoutInflater</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">        container: <span class="type">ViewGroup</span>?,</span></span></span><br><span class="line"><span class="params"><span class="function">        savedInstanceState: <span class="type">Bundle</span>?</span></span></span><br><span class="line"><span class="params"><span class="function">    )</span></span>: View {</span><br><span class="line">        binding =</span><br><span class="line">            DataBindingUtil.inflate(</span><br><span class="line">                inflater,</span><br><span class="line">                R.layout.fragment_land_scape_ipc_live,</span><br><span class="line">                container,</span><br><span class="line">                <span class="literal">false</span></span><br><span class="line">            )  <span class="comment">// 数据绑定</span></span><br><span class="line">        binding.lifecycleOwner = viewLifecycleOwner  <span class="comment">// 生命周期</span></span><br><span class="line"></span><br><span class="line">        viewModel = ViewModelProvider(requireActivity()).<span class="keyword">get</span>()  <span class="comment">// ViewModel（使用原有的</span></span><br><span class="line">        binding.viewModel = <span class="keyword">this</span>.viewModel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        deviceId32 = viewModel.deviceId32.toString()  <span class="comment">// 获取设备id</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 云台控制</span></span><br><span class="line">        binding.textureView.surfaceTextureListener = <span class="keyword">this</span></span><br><span class="line">        binding.textureView.setCanTouch(<span class="literal">true</span>)</span><br><span class="line">        binding.textureView.setScaleTextureOnTouchLimitListener(<span class="keyword">object</span> :</span><br><span class="line">            ScaleTextureView.ScaleTextureOnTouchLimitListener {</span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onLeftLimit</span><span class="params">()</span></span> {</span><br><span class="line">                logger.d(TAG, <span class="string">"video gesture, left limit"</span>)</span><br><span class="line">                viewModel.setPtzNeedStop(<span class="literal">false</span>)</span><br><span class="line">                viewModel.sendRequest(DeviceLiveViewModel.IPCDirection.LEFT)</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onRightLimit</span><span class="params">()</span></span> {</span><br><span class="line">                logger.d(TAG, <span class="string">"video gesture, right limit"</span>)</span><br><span class="line">                viewModel.setPtzNeedStop(<span class="literal">false</span>)</span><br><span class="line">                viewModel.sendRequest(DeviceLiveViewModel.IPCDirection.RIGHT)</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onTopLimit</span><span class="params">()</span></span> {</span><br><span class="line">                logger.d(TAG, <span class="string">"video gesture, top limit"</span>)</span><br><span class="line">                viewModel.setPtzNeedStop(<span class="literal">false</span>)</span><br><span class="line">                viewModel.sendRequest(DeviceLiveViewModel.IPCDirection.TOP)</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onBottomLimit</span><span class="params">()</span></span> {</span><br><span class="line">                logger.d(TAG, <span class="string">"video gesture, bottom limit"</span>)</span><br><span class="line">                viewModel.setPtzNeedStop(<span class="literal">false</span>)</span><br><span class="line">                viewModel.sendRequest(DeviceLiveViewModel.IPCDirection.BOTTOM)</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onFinish</span><span class="params">()</span></span> {</span><br><span class="line">                logger.d(TAG, <span class="string">"video gesture, finish"</span>)</span><br><span class="line">                viewModel.setPtzNeedStop(<span class="literal">true</span>)</span><br><span class="line">                viewModel.sendRequest(DeviceLiveViewModel.IPCDirection.STOP)</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onScale</span><span class="params">(scale: <span class="type">Float</span>)</span></span> {</span><br><span class="line">                logger.d(TAG, <span class="string">"video gesture, scale <span class="variable">$scale</span>"</span>)</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onOnlyClick</span><span class="params">()</span></span> {</span><br><span class="line">                logger.d(TAG, <span class="string">"video gesture, click"</span>)</span><br><span class="line">                viewModel.toggleOverlayVisible()</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">        })</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 返回按钮</span></span><br><span class="line">        binding.ivBackIcon.setOnClickListener {</span><br><span class="line">            onBackPressed()</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        requestPermissionLauncher =</span><br><span class="line">            registerForActivityResult(ActivityResultContracts.RequestPermission()) {</span><br><span class="line">                logger.d(TAG, <span class="string">"mic permission result, it=<span class="variable">$it</span>"</span>)</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> binding.root</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onResume</span><span class="params">()</span></span> {</span><br><span class="line">        <span class="keyword">super</span>.onResume()</span><br><span class="line">        PcmTrack.startAudioTrackSync()</span><br><span class="line">        ensureSurface {</span><br><span class="line">            viewModel.startLive(it)</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onPause</span><span class="params">()</span></span> {</span><br><span class="line">        <span class="keyword">super</span>.onPause()</span><br><span class="line">        PcmTrack.releaseAudioTrackSync()</span><br><span class="line">        viewModel.releaseDeviceAndPlayer()</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">ensureSurface</span><span class="params">(callback: (<span class="type">Surface</span>) -&gt; <span class="type">Unit</span>)</span></span> {</span><br><span class="line">        <span class="keyword">val</span> s = surface</span><br><span class="line">        <span class="keyword">if</span> (s != <span class="literal">null</span>) {</span><br><span class="line">            callback(s)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            surfaceCallback = callback</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onSurfaceTextureAvailable</span><span class="params">(surface: <span class="type">SurfaceTexture</span>, width: <span class="type">Int</span>, height: <span class="type">Int</span>)</span></span> {</span><br><span class="line">        logger.i(TAG, <span class="string">"onSurfaceTextureAvailable"</span>)</span><br><span class="line">        <span class="keyword">val</span> s = Surface(surface)</span><br><span class="line">        <span class="keyword">this</span>.surface = s</span><br><span class="line">        surfaceCallback?.let {</span><br><span class="line">            it(s)</span><br><span class="line">        }</span><br><span class="line">        surfaceCallback = <span class="literal">null</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onSurfaceTextureSizeChanged</span><span class="params">(surface: <span class="type">SurfaceTexture</span>, width: <span class="type">Int</span>, height: <span class="type">Int</span>)</span></span> {</span><br><span class="line">        logger.i(TAG, <span class="string">"onSurfaceTextureSizeChanged"</span>)</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onSurfaceTextureDestroyed</span><span class="params">(surface: <span class="type">SurfaceTexture</span>)</span></span>: <span class="built_in">Boolean</span> {</span><br><span class="line">        logger.i(TAG, <span class="string">"onSurfaceTextureDestroyed"</span>)</span><br><span class="line">        <span class="keyword">this</span>.surface = <span class="literal">null</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onSurfaceTextureUpdated</span><span class="params">(surface: <span class="type">SurfaceTexture</span>)</span></span> {}</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onConfigurationChanged</span><span class="params">(newConfig: <span class="type">Configuration</span>)</span></span> {</span><br><span class="line">        <span class="keyword">super</span>.onConfigurationChanged(newConfig)</span><br><span class="line">        viewModel.setOrientation(newConfig.orientation)</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="云台控制"><a href="#云台控制" class="headerlink" title="云台控制"></a>云台控制</h3><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">sendRequest</span><span class="params">(direction: <span class="type">IPCDirection</span>)</span></span> {</span><br><span class="line">        <span class="keyword">val</span> did = deviceId32 ?: <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">val</span> thing = deviceThingInfo ?: <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        viewModelScope.launch {</span><br><span class="line">            <span class="keyword">val</span> stop = DpCommand(<span class="string">"direction"</span>, <span class="string">"8"</span>, <span class="string">"1"</span>)</span><br><span class="line">            <span class="keyword">val</span> flipState = performOnIOWithDefault(DpFlipState.NORMAL) {</span><br><span class="line">                sdk.getDeviceFlipStatusWithCache(thing).await()</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">          <span class="comment">// 判断旋转的方向</span></span><br><span class="line">          <span class="comment">// DpFlipState.UP_SIDE_DOWN是设备倒置的时候，需要调转方向</span></span><br><span class="line">            <span class="keyword">val</span> request = <span class="keyword">when</span> (direction) {</span><br><span class="line">                IPCDirection.LEFT -&gt; <span class="keyword">if</span> (flipState == DpFlipState.UP_SIDE_DOWN) {</span><br><span class="line">                    DpCommand(<span class="string">"direction"</span>, <span class="string">"8"</span>, <span class="string">"5"</span>)</span><br><span class="line">                } <span class="keyword">else</span> {</span><br><span class="line">                    DpCommand(<span class="string">"direction"</span>, <span class="string">"8"</span>, <span class="string">"4"</span>)</span><br><span class="line">                }</span><br><span class="line">                IPCDirection.RIGHT -&gt; <span class="keyword">if</span> (flipState == DpFlipState.UP_SIDE_DOWN) {</span><br><span class="line">                    DpCommand(<span class="string">"direction"</span>, <span class="string">"8"</span>, <span class="string">"4"</span>)</span><br><span class="line">                } <span class="keyword">else</span> {</span><br><span class="line">                    DpCommand(<span class="string">"direction"</span>, <span class="string">"8"</span>, <span class="string">"5"</span>)</span><br><span class="line">                }</span><br><span class="line">                IPCDirection.TOP -&gt; <span class="keyword">if</span> (flipState == DpFlipState.UP_SIDE_DOWN) {</span><br><span class="line">                    DpCommand(<span class="string">"direction"</span>, <span class="string">"8"</span>, <span class="string">"3"</span>)</span><br><span class="line">                } <span class="keyword">else</span> {</span><br><span class="line">                    DpCommand(<span class="string">"direction"</span>, <span class="string">"8"</span>, <span class="string">"2"</span>)</span><br><span class="line">                }</span><br><span class="line">                IPCDirection.BOTTOM -&gt; <span class="keyword">if</span> (flipState == DpFlipState.UP_SIDE_DOWN) {</span><br><span class="line">                    DpCommand(<span class="string">"direction"</span>, <span class="string">"8"</span>, <span class="string">"2"</span>)</span><br><span class="line">                } <span class="keyword">else</span> {</span><br><span class="line">                    DpCommand(<span class="string">"direction"</span>, <span class="string">"8"</span>, <span class="string">"3"</span>)</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">else</span> -&gt; stop</span><br><span class="line">            }</span><br><span class="line">            withContext(Dispatchers.IO) {</span><br><span class="line">                <span class="keyword">try</span> {</span><br><span class="line">                    sdk.commandDeviceDp(did, DpCode.PTZ_CONTROL, listOf(request)).await()</span><br><span class="line">                    <span class="keyword">if</span> (ptzNeedStop.<span class="keyword">get</span>()) {</span><br><span class="line">                        <span class="comment">// 结果返回的时候操作已经停止了，为了避免设备一直转下去，在这种情况下发一个停止信令</span></span><br><span class="line">                        logger.w(TAG, <span class="string">"ptz, control, need stop"</span>)</span><br><span class="line">                        sdk.commandDeviceDp(did, DpCode.PTZ_CONTROL, listOf(stop)).await()</span><br><span class="line">                    }</span><br><span class="line">                } <span class="keyword">catch</span> (e: Exception) {</span><br><span class="line">                    logger.e(TAG, <span class="string">"ptz, control, error"</span>, e)</span><br><span class="line">                    <span class="keyword">try</span> {</span><br><span class="line">                        sdk.commandDeviceDp(did, DpCode.PTZ_CONTROL, listOf(stop)).await()</span><br><span class="line">                    } <span class="keyword">catch</span> (_: Exception) {</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 在设备开始转的时候传入false，停止的时候传入true</span></span><br><span class="line"><span class="comment">// 由于控制设备的方式是异步的，为了避免异步的顺序问题可能导致在停止后会收到旋转的消息，设备会一直转下去</span></span><br><span class="line"><span class="comment">// 通过设定一个flag，在true的时候发送停止指令</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">setPtzNeedStop</span><span class="params">(flag: <span class="type">Boolean</span>)</span></span>{</span><br><span class="line">    ptzNeedStop.<span class="keyword">set</span>(flag)</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="强制横屏"><a href="#强制横屏" class="headerlink" title="强制横屏"></a>强制横屏</h2><p><code>Androidmanifest.xml</code>中添加activity并设置intent-filter</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">"com.danale.edge.ui.devicelist.landscape.LandScapeListActivity"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:exported</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:screenOrientation</span>=<span class="string">"landscape"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:configChanges</span>=<span class="string">"orientation|keyboardHidden"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;h2 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h2&gt;&lt;p&gt;直播界</summary>
      
    
    
    
    <category term="有在认真上班" scheme="https://kenken-xr.github.io/blog/categories/%E6%9C%89%E5%9C%A8%E8%AE%A4%E7%9C%9F%E4%B8%8A%E7%8F%AD/"/>
    
    
    <category term="写了什么新功能" scheme="https://kenken-xr.github.io/blog/tags/%E5%86%99%E4%BA%86%E4%BB%80%E4%B9%88%E6%96%B0%E5%8A%9F%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>20230224</title>
    <link href="https://kenken-xr.github.io/blog/2023/02/24/20230224/"/>
    <id>https://kenken-xr.github.io/blog/2023/02/24/20230224/</id>
    <published>2023-02-24T12:05:12.000Z</published>
    <updated>2023-09-14T02:06:33.983Z</updated>
    
    <content type="html"><![CDATA[<h1 id="今天吃什么"><a href="#今天吃什么" class="headerlink" title="今天吃什么"></a>今天吃什么</h1><p>吃豆沙饼<br><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230224/%E6%97%A9%E9%A5%AD"></p><p>吃小馄饨<br><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230224/%E4%B8%AD%E9%A5%AD"></p><p>吃麻辣香锅<br><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230224/%E4%B8%AD%E9%A5%AD"></p><p>早上遇到的麦当劳小车<br><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230224/%E9%BA%A6%E5%BD%93%E5%8A%B3%E5%B0%8F%E8%BD%A6"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;今天吃什么&quot;&gt;&lt;a href=&quot;#今天吃什么&quot; class=&quot;headerlink&quot; title=&quot;今天吃什么&quot;&gt;&lt;/a&gt;今天吃什么&lt;/h1&gt;&lt;p&gt;吃豆沙饼&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kenken</summary>
      
    
    
    
    <category term="今天在腾讯吃什么" scheme="https://kenken-xr.github.io/blog/categories/%E4%BB%8A%E5%A4%A9%E5%9C%A8%E8%85%BE%E8%AE%AF%E5%90%83%E4%BB%80%E4%B9%88/"/>
    
    
  </entry>
  
  <entry>
    <title>20230222</title>
    <link href="https://kenken-xr.github.io/blog/2023/02/22/20230222/"/>
    <id>https://kenken-xr.github.io/blog/2023/02/22/20230222/</id>
    <published>2023-02-22T12:13:00.000Z</published>
    <updated>2023-09-14T02:06:33.983Z</updated>
    
    <content type="html"><![CDATA[<h1 id="今天吃什么"><a href="#今天吃什么" class="headerlink" title="今天吃什么"></a>今天吃什么</h1><p>吃南瓜饼<br><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230224/%E5%90%83%E5%8D%97%E7%93%9C%E9%A5%BC"></p><p>吃水煮肉片<br><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230222/%E4%B8%AD%E9%A5%AD"></p><p>晚上去吃了达美乐</p><p>照了很多照片</p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230222/1"></p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230222/2"></p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230222/3"></p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230222/4"></p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230222/5"></p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230222/6"></p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230222/7"></p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230222/8"></p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230222/9"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;今天吃什么&quot;&gt;&lt;a href=&quot;#今天吃什么&quot; class=&quot;headerlink&quot; title=&quot;今天吃什么&quot;&gt;&lt;/a&gt;今天吃什么&lt;/h1&gt;&lt;p&gt;吃南瓜饼&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kenken</summary>
      
    
    
    
    <category term="今天在腾讯吃什么" scheme="https://kenken-xr.github.io/blog/categories/%E4%BB%8A%E5%A4%A9%E5%9C%A8%E8%85%BE%E8%AE%AF%E5%90%83%E4%BB%80%E4%B9%88/"/>
    
    
  </entry>
  
  <entry>
    <title>20230220</title>
    <link href="https://kenken-xr.github.io/blog/2023/02/20/20230220/"/>
    <id>https://kenken-xr.github.io/blog/2023/02/20/20230220/</id>
    <published>2023-02-20T13:30:37.000Z</published>
    <updated>2023-09-14T02:06:33.983Z</updated>
    
    <content type="html"><![CDATA[<h1 id="今天吃什么"><a href="#今天吃什么" class="headerlink" title="今天吃什么"></a>今天吃什么</h1><p>吃豆沙饼</p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230220/%E6%97%A9%E9%A5%AD"></p><p>中午困死了没吃直接回去睡</p><p>吃烧腊</p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230220/%E6%99%9A%E9%A5%AD"></p><p>吃烧饼</p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230220/%E5%8A%A0%E9%A4%90"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;今天吃什么&quot;&gt;&lt;a href=&quot;#今天吃什么&quot; class=&quot;headerlink&quot; title=&quot;今天吃什么&quot;&gt;&lt;/a&gt;今天吃什么&lt;/h1&gt;&lt;p&gt;吃豆沙饼&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ke</summary>
      
    
    
    
    <category term="今天在腾讯吃什么" scheme="https://kenken-xr.github.io/blog/categories/%E4%BB%8A%E5%A4%A9%E5%9C%A8%E8%85%BE%E8%AE%AF%E5%90%83%E4%BB%80%E4%B9%88/"/>
    
    <category term="吃了什么好吃的" scheme="https://kenken-xr.github.io/blog/categories/%E5%90%83%E4%BA%86%E4%BB%80%E4%B9%88%E5%A5%BD%E5%90%83%E7%9A%84/"/>
    
    
  </entry>
  
  <entry>
    <title>20230221</title>
    <link href="https://kenken-xr.github.io/blog/2023/02/20/20230221/"/>
    <id>https://kenken-xr.github.io/blog/2023/02/20/20230221/</id>
    <published>2023-02-20T13:28:07.000Z</published>
    <updated>2023-09-14T02:06:33.983Z</updated>
    
    <content type="html"><![CDATA[<h1 id="今天吃什么"><a href="#今天吃什么" class="headerlink" title="今天吃什么"></a>今天吃什么</h1><p>吃发糕</p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230221/%E5%90%83%E6%B3%95%E9%AB%98"></p><p>吃排骨</p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230221/%E4%B8%AD%E9%A5%AD"></p><p>吃炒饭<br><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230221/%E6%99%9A%E9%A5%AD.jpg"></p><h1 id="一起逛公园"><a href="#一起逛公园" class="headerlink" title="一起逛公园"></a>一起逛公园</h1><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230221/%E9%80%9B%E5%85%AC%E5%9B%AD1"></p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230221/%E9%80%9B%E5%85%AC%E5%9B%AD2"></p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230221/%E9%80%9B%E5%85%AC%E5%9B%AD3"></p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230221/%E9%80%9B%E5%85%AC%E5%9B%AD4"></p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230221/%E9%80%9B%E5%85%AC%E5%9B%AD5"></p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230221/%E9%80%9B%E5%85%AC%E5%9B%AD6"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;今天吃什么&quot;&gt;&lt;a href=&quot;#今天吃什么&quot; class=&quot;headerlink&quot; title=&quot;今天吃什么&quot;&gt;&lt;/a&gt;今天吃什么&lt;/h1&gt;&lt;p&gt;吃发糕&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ken</summary>
      
    
    
    
    <category term="今天在腾讯吃什么" scheme="https://kenken-xr.github.io/blog/categories/%E4%BB%8A%E5%A4%A9%E5%9C%A8%E8%85%BE%E8%AE%AF%E5%90%83%E4%BB%80%E4%B9%88/"/>
    
    <category term="吃了什么好吃的" scheme="https://kenken-xr.github.io/blog/categories/%E5%90%83%E4%BA%86%E4%BB%80%E4%B9%88%E5%A5%BD%E5%90%83%E7%9A%84/"/>
    
    
  </entry>
  
  <entry>
    <title>20230219</title>
    <link href="https://kenken-xr.github.io/blog/2023/02/19/20230219/"/>
    <id>https://kenken-xr.github.io/blog/2023/02/19/20230219/</id>
    <published>2023-02-19T12:45:07.000Z</published>
    <updated>2023-09-14T02:06:33.983Z</updated>
    
    <content type="html"><![CDATA[<h1 id="今天吃什么"><a href="#今天吃什么" class="headerlink" title="今天吃什么"></a>今天吃什么</h1><p>吃红烧鱼</p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230219/%E6%99%9A%E9%A5%AD.jpg"></p><p>吃点水果</p><p><img src="https://raw.githubusercontent.com/kenken-xr/blog-images/images/images/20230219/%E5%90%83%E6%B0%B4%E6%9E%9C.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;今天吃什么&quot;&gt;&lt;a href=&quot;#今天吃什么&quot; class=&quot;headerlink&quot; title=&quot;今天吃什么&quot;&gt;&lt;/a&gt;今天吃什么&lt;/h1&gt;&lt;p&gt;吃红烧鱼&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ke</summary>
      
    
    
    
    <category term="今天在腾讯吃什么" scheme="https://kenken-xr.github.io/blog/categories/%E4%BB%8A%E5%A4%A9%E5%9C%A8%E8%85%BE%E8%AE%AF%E5%90%83%E4%BB%80%E4%B9%88/"/>
    
    <category term="吃了什么好吃的" scheme="https://kenken-xr.github.io/blog/categories/%E5%90%83%E4%BA%86%E4%BB%80%E4%B9%88%E5%A5%BD%E5%90%83%E7%9A%84/"/>
    
    
  </entry>
  
</feed>
